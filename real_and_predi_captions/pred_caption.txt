so we're at least to <end>
so we're at <end>
to do a private so now we don't worry about <end>
something like that we set up left value doing right here that we just quickly so just messed it equal to our indexes
like 0.85 something more you know we can do is we even now and we establish what we don't worry about the top
to be a vertice buffers as well <end>
png class and or a vertice buffers and we're just gonna do is again we're just kind of define the indexes so now
to a negative 1 in float buffer as well or a vertice buffers and again the top a vertice buffer array to do
that we just quickly so we're just quickly so we're at <end>
something like our vertice vertices negative 1 in the top a vertice buffers and again copy actually public just going to <end>
to be a vertice buffers and we're just kind <end>
take a float client json object so we're at <end>
negative 1 in float buffer <end>
to 1 / top and <end>
to a indexes or <end>
this class <end>
this class again <end>
in and <end>
we're gonna create method <end>
am i don't want to have float so we're just going to say gl triangle instance of cpu time <end>
am i don't want <end>
am i created makes preferences because again we <end>
am i be position so you <end>
am i created makes any to have three <end>
position zero four index and again we just <end>
position zero four and it's not your cpu time we just <end>
right we're just gonna say p i don't <end>
so we're just use everywhere but again we have <end>
right we're just say gl enable dl so we're just <end>
oops did i mean it's pretty easy <end>
am i saying object class we're just gonna copy one <end>
am i kind <end>
am i saying p <end>
am i saying is we're <end>
then let's <end>
going <end>
other one from the most need our class what we called <end>
more <end>
am i created one <end>
am i need to do a byte buffer call <end>
buffer since <end>
to do is we're going to be our point three four all <end>
am i need to set up a private <end>
am i need to set up a private <end>
buffer instead of a indices so we're just gonna copy one so obviously we just want to <end>
with indexes so we're just gonna copy one to be pretty simple <end>
am i need to set up a private <end>
am i created this tutorials learning here we set up a private <end>
to do is we're just gonna copy one one up i just created a vertice buffer so what we're gonna do is we're
am i do is we're <end>
so we're just gonna <end>
buffer instead <end>
at <end>
part makes sense but we'll get into use as we <end>
one negative one we're just gonna <end>
basically we just use which we need to set up a private <end>
for a vertice buffer so you know list we have three indexes <end>
buffer instead <end>
as well so zero that's gonna be pretty pretty simple <end>
something like that we set up a private <end>
we're just gonna <end>
resource folder but just check or i'm sorry to do is just showing you the <end>
resource folder but just need to do is just read one line and we're gonna click that variable to context which is not
and <end>
i'll just say <end>
need to do for is just delete we're going to call <end>
then we're just gonna call <end>
need to do now is we can do this <end>
value we're just gonna call <end>
called a new yet so we're gonna say g-unit download that we're gonna set <end>
we're gonna say g-unit download that variable to the difference between <end>
copy this is just gangsta and you know kind of a resource folder maybe one we're also going to do for the x
you can do now we can do now <end>
one other i explained <end>
need to do font cuz i set up a bitmap we can just kind of our on draw <end>
then what we can do this below our green ball that is we can do for is we can do 20 so hopefully
the assets or whatever method so we're gonna say here we're gonna say this it'll do this before we can do 20 so
here we're gonna set up a new yet so hopefully it's not so we're gonna set up a new yet so hopefully it's
we're gonna set up a new yet so we're gonna set up now we can refer to the assets or whatever method so
we can do for is we can do 20 <end>
scroll down to that's besides actual the assets from the assets from that we can be the assets or whatever method so give
just kind of read from asset and then hit <end>
x here and then we have all our bitmaps and <end>
that is the actual xml or i'm sorry <end>
text paint and <end>
wasn't <end>
text paint and <end>
well and now <end>
setting the position so we're <end>
setting the position so now let's <end>
text paint and <end>
let's get height we're gonna say my here i don't want to again probably gonna say my here i don't know get the
out with that <end>
setting this for paint we're gonna say my here that's uh forgot to have our font to the actual crap so we're gonna
setting this will be the actual xml or again i'm sorry we can refer to the actual object or before so we're gonna
out with that <end>
the actual xml so it's gonna do to the actual folder <end>
just gonna copy this text paint and what we can do this before we can refer to the actual you <end>
font to our parameters <end>
text paint to do is we can refer to the actual you <end>
let's get into the actual crap on this basic define what we can <end>
just kind of gives us all over parameters <end>
text paint and <end>
let's get some basic basically you know our our you can do this before our you know that's besides actual you <end>
height but <end>
release our right now <end>
can just going <end>
out with and then hit <end>
let's get some basic basically you can be the actual you <end>
gonna somewhat <end>
according to the actual you can get into the assets from that we can refer to the actual you probably just do something
can just going to do to one text paint and <end>
text paint and <end>
splash screen for creating our way clock as we can do is we're going to show you guys can use like this will
just showing you guys can kind of the tutorial i set up our question for the new boss in which is our activity
can be about the xml grab that one which is our activity this or not the next tutorial we're just down here but
this is because i don't know that's <end>
again <end>
need to hit open and the open up real quick make sure the open up real quick make sure passing in <end>
again you can kind of probably confusing for like i mean i'll start because the most <end>
you can see i set up from here and and i'm going to want you guys then just be is just be basically
well i'm going on <end>
is what we're going to call this is is what we're going through flash and as you guys in <end>
let's get some basic basically some more <end>
just kind of set up some customization that we set up this text paint and <end>
text paint and <end>
let's get height it's bridges so that's what we can refer to the actual crap so we're gonna say this text paint to
as well and just kind of define <end>
now let's <end>
setting this text paint to be the fill rate so if <end>
buttons right here we just want <end>
the actual hot-or-not or that's uh let's actually get the y or before our right and <end>
setting this text paint to like that we can use so we're gonna have to like this text paint to be let's make
give us the green in there create method so we're pretty much done with this text paint to be the worst <end>
text paint and <end>
gonna set this text paint to be the fill rate so if <end>
setting the y or before our right here we have to get the the green in <end>
but since it's also that's just set up and then what we enable named <end>
then we're going to say <end>
to say <end>
setting this text paint to like this text paint and <end>
that we can still no blue since we're gonna <end>
well so if you guys in <end>
the y values so i'm gonna have our sensor x <end>
setting our starting x here <end>
text paint to the y value so that's what we can just <end>
text paint and <end>
not maybe like plus that's being left so that we can set up like one here we set up so we're gonna be
little more points over here we don't get into the actual xml here and what we're gonna be like that we have three
out with this text paint and then hit <end>
text paint and then what we're gonna <end>
out with this text paint and then hit <end>
text so we're going to do one and <end>
text and then we're just going to do to be a little more as well so <end>
text so we're going to do this is so to be the worst <end>
text so to be the worst <end>
text so we're going to choose <end>
text so we're going to say a bottom or so what is the one and <end>
setting this text paint to be let's do <end>
setting this is our text paint to the y or something like <end>
just one we set up at the worst <end>
give us the left value so if we just one and then we just need to do is the y is so i'm
the y or i'm sorry like this and then what we can just one and <end>
to just say just say 1 dl dot glu center in the new boston <end>
so how we set up float center in the <end>
setting this text paint to one here we set this this is the worst <end>
out more and <end>
before our parameters the place where we set up at the y is so this application <end>
just gonna be like that we set up some more basic <end>
just kind of like <end>
setting this text paint to be the worst <end>
text paint and <end>
just kind of show you guys again we can just an alpha <end>
group of probably confusing for now but basically it's within our slider class as you can also you know pretty quick make sure
need to do we're gonna do we're gonna go <end>
is within there i mean we're going to show you guys when we open up our slider class here is because at the
we're gonna give this is a android at plus id we referred to our our bufferedreader and this is basically your <end>
to return you can see <end>
this right here because we have this in <end>
key so we're just going to set up our class because <end>
and first xml here or open <end>
and then android xml and click android <end>
then if you <end>
of <end>
well since this is going to be about <end>
our question within this application has the cursor and just import and just showing you guys i don't here and i set up
our question within our edit text this use a quick thing for both of these as well i want to set up a
and you can also i set up a main class we're going to have this class and we're going to set these variables
and you can set up a main class or provider i called slider class we're going to have the edit text be about
you can i need to be about we're going to you can i find how we're going to have this so now <end>
that'd be about the xml layout and we're going to or provider i might prod just a main class just standard pretty simple
to set up a main class we're going to have <end>
our question for the most <end>
let's see if you scroll down below <end>
for the top there again when i don't have the basic <end>
as well so we're just going to show you guys that and you can just showing you guys how you select <end>
so we're just gonna add some information that made a semicolon and hit dot set result within parentheses we got to add another
not do is we have to add that method for on activity result to implement <end>
so we're just gonna create method called on intent and as you guys are kind of our application has already created and we're
not under a am something like oh you are <end>
not called on extras and change here pretty much good to go through <end>
you know <end>
by now and now we can only <end>
we're just gonna create a new here and to <end>
set this as well but we'll kind <end>
can do <end>
view and we can use <end>
we're just gonna create a new here and then we can now we can just <end>
we're just gonna create a float and we're going to <end>
we're just gonna create a new here and then <end>
set up the power manager because again we set <end>
we're just gonna create a new here and then we're gonna call this and we're going to <end>
and we're going to <end>
set up we set <end>
we're gonna again the was called our <end>
we're gonna do is just some <end>
set up a little capital g xml set that to be about and we're going to <end>
like that xml file i want <end>
reference here to kind of a kind of <end>
a string within the oncreate method so what we're going to do is we're going to say android <end>
to open or you guys again we can use its own within this on <end>
dot travis thought about or whatever so we're gonna say i equals and as you can <end>
oncreate method and then we can do <end>
all three and then just seeing if this within <end>
that in the fourth button it's just going to do is we have to import and then we can do you guys can
all our <end>
so we're gonna break and <end>
all our brackets <end>
dot travis dot travis thought about the type new boston dot travis dot travis dot travis dot travis thought about the new one
then just <end>
dot travis thought about or whatever you guys <end>
dot travis dot travis dot travis dot travis dot travis c and this and then we can write data is our splash activity
dot travis dot travis dot travis dot travis dot travis dot travis c and then just seeing if this application bracket and then
dot travis dot travis dot travis and then one and then we got reference so we're just going to just basically the type
dot travis dot travis dot travis c and this is just basically our splash activity and then dot travis dot travis dot travis
all our apk so our drawable <end>
all our actual class name that's our save and we have to open a bundle so just start a name <end>
dot travis dot travis dot travis dot travis thought about the new boston dot travis dot travis dot travis c so that's the
know what happens to the starting <end>
we're gonna set up your class hit a bundle a reference and then just seeing if you have your reference your reference our
uppercase so starting point starting to lose my voice i'm sorry style one to start first title so we're going to do <end>
your package name so this is what we're setting our start activity result and this <end>
dot travis and then dot set up a <end>
with sql view and again that's what we <end>
application turn it if you save and you from the on super method of this tutorial it's not i don't really i'm not
works i guess it's i want to set type specific you probably don't want to show you guys you <end>
override implement methods and that's kind of our package name we give the name menu to that email we're just going to open
that we can think i want to that we can think i know on your package that we can think i haven't really
i don't get any errors that we can find <end>
too <end>
make sure that we have you know my <end>
as you know add because the bottom right here so now the default i want you like what's all the windows tab that's
as you know pretty much time but hopefully i press <end>
let's open or the application works we <end>
going to show you that but hopefully you guys a website and i'm going to show you guys are i'm see it starts
again <end>
let's get the person to turn the <end>
and now what we just compile on those subjects but is just open <end>
works <end>
to kind of create this to or greater than like left to open up so what we have we have you can open
make sure that we just set that entry a little bit of the tutorial section on our main hard to be set up
trouble with <end>
that but again is just open up real quick and you know it's gonna get kind of like i apologize for edit text
tutorial section and there i go we briefly talked on those subjects but is important make sure everything <end>
i was <end>
that we just going <end>
that's setting up <end>
let's quickly just close that people an error <end>
just gonna set up to the this tutorial is going to show you guys can contact our menu in there for <end>
set up and <end>
works so we will need to call the graphics real quick like i mean it's going to get into the next tutorial guys
works so what we're gonna go right here so again just set the <end>
then let's set the content view we just do is gonna exit our last tutorial i mean i'll show you guys that now
then let's just know at a few more samantha and we're gonna put like the actual xml and let's set the to open
going to do we're just gonna say if these at the set these acquire below it doesn't care to work on but actually
well but i know i told you guys what options we can kind of what i've setup as well because i don't want
gonna create flipper class it's gonna do in the methods that we did with the the <end>
follow along along in there we <end>
where we can delete edit text and we're gonna have an onclicklistener you can see i just kind of establish what we want
imports as well from the things if <end>
as the first way clock right here we can kind of kind of kind <end>
follow along exactly with <end>
to do is we just gonna do is we need to do is we need to set up our get the cursor is
just finish it because the time we're gonna do again just close one let's open up to that we're gonna destroy <end>
we just want to <end>
gonna work so i'm just gonna kind of establish what we're <end>
i don't want it <end>
new here and what we're gonna say our vertices but let's go into our surface view that's a for the most part so
kind <end>
to do is we can kind of review it and the i mean it's going to set it to true so there's also
but <end>
just all one of this tutorial is pretty similar to the on the method so we're gonna define <end>
need two things two so you're just need to do in our last tutorial for this tutorial just editing everything works all of
going to kind of give the to create two so you're going to read through every time you guys want to do with
but yeah just kind of go into our next tutorial i don't know <end>
to enable <end>
the x equals and we're gonna use like that but just basically where our way <end>
new point and the way the constructor we're going to say our starting point and the initial more <end>
need to setup for the different methods from the parameters the context of this class like what's <end>
to the back up so we're going to do is i've need to set up some customization to the actual view like okay
to be pretty when your mind and again but just right here and again they messed up just basically we're going to do
bring back surface is equal something like that <end>
gonna do is <end>
does here for you will you know our thread within our thread within our touch listener for the surface view and <end>
we're gonna draw our ball that we can do again we can just kind of <end>
then we also do public would <end>
then we also have it kind of confusing from this this before over you know our on pause to this standard kind <end>
then we also do 20 on something called our thread this is called test within here we can do ok so now within
then we also do public would resume <end>
put a while loop happens dot this x is called something like that we can do another <end>
then we have to fix there we go through this before this is basically <end>
then we also do public would resume until our sound or drawing on all of our canvas where our is when this application
then we can just draw into something or everything for for the most part so we're gonna hit break because then we have
going to play something like that we can just gonna say shared preferences implement it on resume so since we at least a
going to still only time we like what's gonna say our thread <end>
gonna draw to true or <end>
give us is say our thread <end>
but we're gonna kind of use a common trick that we set up a new thread within this before this will give us
before this time is we can just going to start everything within this pause this is where we can just gonna say <end>
then we can just copy this will i'll since we just need to fix this will give it and we're gonna kind of
going <end>
need a <end>
then we can just copy this already created a <end>
those two here so we just need to kind of it's kind of a common trick that constructor we're gonna start a pause
going to kind of set up switching instead of something like i should <end>
as you can see it's unlocked our on <end>
down and here we create a common trick that concepts sticks in <end>
get rid of our buttons itself so we're gonna use a huge in here we're gonna start out here we take our easy
give us all of define <end>
as you can still this time our tutorials <end>
gonna be done with this one other tutorial just copy this up as well so we're gonna say <end>
have our ball that we take our bitmap itself so hopefully that but hopefully everything's working i'm sorry like 265 or i'm sorry
stream is not not not negative <end>
we're gonna kind of our if loop we can do <end>
surface and then what we already within our on pause method we can just copy this will get rid of that we create
our plus starts so we're gonna say - test dot <end>
surface call this it'll kind of a big our <end>
our plus but i want to build our <end>
bitmap within our methods hopefully that in then we the tutorial we can for medium even think we can't <end>
are going to put another here or some more <end>
just one other somewhere i should look that tutorial i'll get rid of there so now is when we copy this will get
once our canvas dot draw and we're gonna say dot get width our dot next maybe one bottom or whatever we are gonna
dot get height <end>
our bitmap type bitmap so we're gonna say here we're gonna say - and then what <end>
we're gonna say - bitmap so we're gonna say - <end>
the y just copy this to show you go into some again i'm going to start with our starting out here we set
we're gonna be that <end>
we're gonna say - bitmap to fix this tutorial should fix the <end>
going to open our package go into our preferences it's pretty much all three buttons or not explain that all these even just
what's happening is add to do is learn information <end>
you've done <end>
and the go into the tutorial is just import and let's use you told <end>
what's up but that's all right because if i told <end>
eclipse here like this main <end>
eclipse here like this main <end>
so there we go to this actually guys have an ide which all this tutorial i should know it down here the code
need to copy this and now we're going to do is just save tab so we're going to say <end>
i'll show you guys forgot we're gonna say g-unit download so we set to be our <end>
i'll show you guys forgot we're gonna say g-unit download so we're going to say g-unit download so we do another <end>
i'll show you <end>
i'll show you guys again i was just the resource <end>
then we can pull <end>
for again just add that one or again when we try and we can use for and we have three methods for the
implement methods unimplemented methods for again we also want to add some finally so we're just going to go into go into go
have three methods for again just add a cube just hit that for click this there and i don't want a on <end>
implement methods unimplemented methods and it's kind because i'm not import that we're gonna implement here and again we have three methods for
implement methods unimplemented methods for again that there should <end>
implement methods unimplemented methods for a radio group we're gonna implement again so what we have to <end>
for again we can go into activity for you guys and we can use for and we <end>
i'll do <end>
here to the assets from the resource folder and one other and then basically we're also define what we need to import the
i'll <end>
since we can just kind of familiar with our on draw <end>
i'll you can use dot this first bitmap factory <end>
here we're gonna say gl dot gl dot gl dot gl dot gl <end>
here we're gonna say gl dot gl <end>
drawing box just one bottom or right and then we're gonna say gl dot gl <end>
center so we're gonna say gl x dot i mean in <end>
center so we're gonna say gl you can see you <end>
bitmap all lowercase dot drawable that we deal with my bring back to our font i'll <end>
paint dot <end>
paint dot <end>
save and we're just setting it equal to the you know the bottom or a bitmap we're going to be here and android
that equal <end>
paint and then we set the one in <end>
or gl open method called a class and <end>
asset can implement the assets from that we deal with my bring back to the assets or not doing anything just kind of
bitmap all we're gonna <end>
our assets from asset <end>
bitmap so radio group of our on draw our bitmap type bitmap so 50 i don't know that's kind of a bitmap type
bitmap so radio <end>
bitmap all we're going to do so for the x value give us there we go so first bitmap within it will be
i'll show you the assets or just create a bitmap actually going to do <end>
bitmap itself so we're gonna say walk canvas we can just copy this font i'll have our bitmap type bitmap type bitmap called
dot text we're gonna enable dl dot set our refer to the center in <end>
these two parameters <end>
canvas dot disable the false and we're gonna say this is we have our ball our bitmap method so <end>
center y is the top where we were just say just canvas dot draw random and then what what we were just to
drawing stuff well so we're gonna say just save save test dot i should look for the x is just gonna draw is
left value we're gonna do is we can just copy this text and <end>
have the left value we're gonna do so we're gonna say canvas dot draw our <end>
we need to do we're gonna <end>
just search activity so we <end>
here we're going to the assets folder but i've trying to again this bracket right here but since we can find the assets
and i was those you can actually let's scroll down <end>
we can just follow along along but since we don't know i don't know i told you guys we're gonna <end>
we briefly talked on create a lot of your package name what we briefly talked on create a lot of your menu hit
when we created this not we're just click this is where i really through <end>
other one by now i want our slider class so our drawable folder we're going to show you guys when we had a
then our handle but basically paste this this tutorial pretty quickly show you a lot of our drawable folder so what we briefly
i'm sorry if you select <end>
i'm toggle down here we briefly talked on when we take a screenshot and slide through what the graphics aren't probably won't you
other one by now let's go into it is we briefly talked <end>
we did again we need to do in <end>
i'll create <end>
i'll deal right <end>
can do that one other thing and we're gonna say canvas dot paste paint and <end>
one other quick thing that we can do for is we can do like that context it's not not before and then we
start green in our assets from asset <end>
the assets from that we set up to the assets from asset <end>
forgot to probably the tutorials <end>
we're gonna say <end>
release so we're gonna say <end>
our bitmap variable and then we are asset <end>
asset can do <end>
we're gonna give us our new yet or not not going to do now <end>
to open up and basically set up there we run our <end>
we're gonna use a uh thanks yet as you can be like <end>
then we have <end>
by a little bit more one and we can use a common trick that one or not maybe one more <end>
what we're going to give you know if you guys then just import this there and it's going to open up so we
pause unpause and we're going to say <end>
have a resource folder <end>
you know our xml file easy to open up so we're going to go down for a radio <end>
and again this tutorial is kind of give you guys but just import this class and <end>
know have this tutorial is set up sets it basically set up basically we're going to <end>
the <end>
takes within its parameters we have you know not probably catching the <end>
create a basic setup some stuff so again read the default so just want to open up a way clock here as you
then we're going to <end>
stuff so that's it's going to create a little bit more thoroughly <end>
input stream and that's going to call this textview and <end>
execute as well that's what <end>
instance where we can do is you can since this <end>
get <end>
so we're going to scroll <end>
our actual uri and <end>
client so we're going to do is we're going to use our <end>
read that we just specified it takes a set uri <end>
we want to <end>
basically going to create a <end>
the default so what we're going to create a <end>
read it a little <end>
return a method execute and and we have you know this is we want to add to type in our bufferedreader that's going
execute and we want to look <end>
our bufferedreader which we called and we're going to scroll down to a new bufferedreader and <end>
takes a talk about <end>
read the <end>
takes a look for <end>
we're just going to create a little <end>
input stream reader and we're just gonna run a little <end>
our imports again this is we're going to look <end>
so what we want to type in our imports again this a variable which we call <end>
our imports again this <end>
http variable or instance of <end>
text and we're just going to create a <end>
return the last tweet then we just set up a 1 dot this our imports again this <end>
our imports again this <end>
for <end>
this get <end>
then we're going to scroll down <end>
our imports again we just set up a <end>
instance and we just set up a <end>
to talk about <end>
to <end>
we're just gonna do is we called it's going to say we can do the time this <end>
don't know it's giving <end>
then the default so you know we can do the last tweet so what we're going to scroll <end>
we also do something else <end>
we're just gonna say two x direction so we're just gonna say we just went up as we can set up oops did
we're working <end>
then we just went back to our key where we have a variable name something like that <end>
you know i want to look for <end>
then we just specified a little bit further by a little bit further by a little bit further you guys want to use
entity and we're just gonna do is we're going to look for <end>
i just want <end>
specified it again just set up a <end>
instead of as well but as you <end>
don't want to the most part so that's pretty simple <end>
so it takes a <end>
our imports and that's <end>
client so we're going to <end>
going to <end>
http get we're going to <end>
going to be a response so we're going to <end>
this just set up http variable which we called i n is equal to a new bufferedreader and <end>
are we have to add our application is less of our program sorry right here again that there we go <end>
here we go <end>
are we have to <end>
collected and we're just going to quickly to an nth <end>
ford this fourth <end>
are we have our key reference this last tweet so that's done for the way <end>
ford ford ford ford ford ford ford ford ford ford ford ford ford ford ford then we just copied it to that we
ford ford ford ford ford ford city that's done for the most <end>
ford ford bytes of our application a is by a method right here which we could set up to the <end>
ford ford ford ford ford ford ford ford then again this last one we're going to add our call this last tutorial what
ford ford bytes of our load data and then we just the back to action <end>
ford ford ford ford ford ford then we just drag and the row the <end>
ford this to this our new string variable <end>
we're just going to quickly kind of our open passing into a picture to this our application because again our parentheses and then
ford this err the delete <end>
ford this to the <end>
new string variable <end>
are we just copied our string that <end>
ford this last air some other class we have a lot of a toast for all the front copied our data via <end>
ford ford bytes of an open brackets here which we could set it to this our method you know new dialog class here
are the this last one that we want the three parameters the last tutorial so the last tutorial probably all we can <end>
ford ford then we just the <end>
ford ford ford ford ford ford ford ford then again <end>
ford ford bytes code <end>
here we just copied this last tutorial but hit that we just set this to the <end>
call this last tweet we're gonna set this fourth <end>
read that we can do is you can see it looks for <end>
our handle it takes a <end>
class we were working with the text so what we were working with the line but as you don't know what we were
just deleted pretty simple spinner and we're going to do <end>
just deleted pretty much the text you can always method and since we want to do a parameter <end>
we're going to say this client it's a class we're going to set them up the <end>
call this text was input method and we're going to set this input stream and we're going to do real quick is going
can write dot <end>
the textview class <end>
set up the <end>
just deleted pretty simple spinner so we're just gonna say <end>
view so we're just going to <end>
new a string name text there so now we can refer to our new here so we're just going to say this is
new a string name <end>
we're going to <end>
new a new radio <end>
change here now we can refer to our hot-or-not and we're going to <end>
new textview and <end>
new a string name and then within the oncreate <end>
and we're going to say new textview variable basically our whole linear view class <end>
new a string name like that we <end>
equals <end>
equals <end>
equals <end>
are initially said our string name <end>
and basically our hot-or-not class here so we're gonna have string name and the radio group dot <end>
equals <end>
equals <end>
equals <end>
equals <end>
again this is equal to our new string variable for <end>
the text view which is again we're just going to click this text view so now all we have to set up <end>
views i is equal to <end>
this text view which <end>
text view so now we're gonna create a string <end>
lately so our data which is called bacon and catch clause to our new string name which we have to surround this is
lately so our data even for the <end>
lately our thing that we have to surround this for the most <end>
it our data into our <end>
view so that's just so there so now what we can refer to it everywhere else so we're just gonna say our l
just deleted pretty much or get method and we're just gonna move it up both those <end>
main linear layout for the most part if you some java side so now what we're going to show you guys <end>
but we're going to kind of what we're going to go into our way to our xml so we're actually surface and our
the tutorial my computer to the series so as you can see when we still need to <end>
updating forgetting of your own too much all of our menu here if you guys run it works all of give you can
just add another file so there we go to the android looking but i'll catch <end>
we kind of a quick overview of <end>
know at least we need to show you some you that we go and again because it's going to kind of typing the
we just set it into our drawable <end>
ahead and <end>
we're gonna work through <end>
again what we're gonna say about these four buttons there we go on <end>
can close it here and all lowercase <end>
so what we're going to free space are looking to again to the text here in there and go to this textview and
to this website and then type in there we go to that one as well and again i'm going to be kind of
to be about that's pretty easy to hit next xml and then we're going to be about that's all three classes so what
to be about that's just going to be about us the this reference well where we need to add a clip the <end>
we're gonna <end>
dot get string path so we're going to use this line of code <end>
we're gonna <end>
we have to that we can just follow this so we're just going to go into our <end>
just gonna load radio <end>
we're gonna <end>
send it'll kind <end>
is a java we can contact you know our xml parsing class as well then just save it into the tutorial i just
want to do is we close the code and it might not do in there should <end>
want to you can see the <end>
don't know as we didn't send since we're going to hit dot and you're not under a <end>
we're going to again you guys you guys can do is just like this and now i want a way that you can
you can you guys see the most part but hopefully <end>
websites my bring back calm now we got to set up there we go further you guys can do for the most part
save you know i just want the default yet again you do <end>
and <end>
and this <end>
so again the java that we can go into the i'm going to open up a website and i'm going to show <end>
text so it's <end>
we can go into the actual xml file and we can go into the actual xml file we can <end>
on resume <end>
let's quickly to kind of a little comment out a little bit more simple we're going to do is just save some time
so we're just be <end>
again to the type variable is selected it i hate how to do is just be <end>
let's do is add the <end>
application i don't know if you can still <end>
let's let's open or whatever application because this <end>
are in google tab or this is basically set up our way up and i'll slide through this <end>
let's let's open up our application through setting up a <end>
that's how we're gonna do <end>
so again just kind of you <end>
our edit text in there for the most important one and we're going to do is we just have one so again just
entity of the second parameter we're going to do is we want to kind of reference the time thing that does is using
create a relative layout that we just say within <end>
so again or you can just set up so we're going to just show you don't mean it's a <end>
what we're going to call this so we're going to say the then i just want to call this text was <end>
and we're going to change that to finish off that and if you that animate where we do it is we're gonna set
then we're going to change that to do that is we're going to do is we need to say button as true so
checked we're gonna do again just say dot equals and then we're going to open up so again we're going to say button
what's up in <end>
something like hey is we're just going to do that or edit text was it within the set up is we're just going
read and we're going to set up so again just kind of <end>
our edit text in as well so we're going to add that url and then or the button thing again we're going to
send it is it's going to return you need that easy result to send it and so we're going to get the save
and it's like hey we're just going to do that we're just going to do that we're going to say our ts let's
part set up so we're gonna say add our initial <end>
have our default oncreate which we have all these things in the functions try <end>
the set it to change <end>
is we're <end>
to be a little comment here and we're the point that we do <end>
that and we're going to add our edit text was <end>
within the on <end>
we're going to do is we have is how to change the set the add the point dot this is using the drawer
and it's <end>
view and we're going to set up a webview client within the oncreate are in <end>
is we're going to create a key is we're going to set it equal <end>
then enable our web view by ford slash and then what we're going to do <end>
it to be a <end>
saying set this first line of these methods and then enable client not going to say client dot download and then enable client
back up so we're going to <end>
what's up our edit text with the second parameter we're going to do is add a subclass again adapter so far a a
want to say our ellen <end>
browser and this you don't worry about sorry if you know it's rgb a tab back to our ellen <end>
to set this array you know create a <end>
it can read and what we're going to set up <end>
you know create object so what we're going to set this first line of <end>
specify that that's it's going to set this line and then what we're going to set this else we might say client it's
well we're going to get a <end>
in default so now it's using the get set up if we have a display object when we're <end>
in the time is we can set it this input stream reader parsed <end>
client it's a web view and then what we're going to do we're actually going to do now if you know like hey
client it's a service and then what we're going to do <end>
client it's a service and then what we're going to do <end>
in our map <end>
then we're going to do is we created a quick err this you know have <end>
do we're <end>
to do now is create object that's what we're going to do we're <end>
client it's a service and then what we're going to do now is create a service then click listener <end>
in the return true so this is using the time we just do we're just going to do now is using the get
client it's not and then what we're going to do now it's do is create object that's just do now are enable else
then we're going to create a little comment out you don't know <end>
those for what we do we're just gonna do first kind of exception we're going to do we're just going to set our
and the default which i'll just click that that's all this tutorial i just gonna start up to the your code and eclipse
create a kind <end>
let's change and since we click on resume method for the emulator it's going to put a capital l as so <end>
let's create a on resume <end>
parsing i'll show the default so i don't know but yeah except <end>
the <end>
within the most part because bucky does but for medium thing within the most part because bucky does but since <end>
other methods value is kind <end>
guys can also we just have <end>
just quickly just want to create a little bit easier for the launcher item that we can just going <end>
are on that it's <end>
let's talk through this app application or you know if you just go <end>
then we can add <end>
create a video properly it's <end>
even to open or like this <end>
create a <end>
want to show you guys open <end>
to hit this tutorial just open <end>
to hit our menu class as you can see when we run our sliding drawer and again we set <end>
i don't get the person to start the <end>
to just gonna say a new good to be a new good to be able to be is the email xml is we're
dot set up your app widget config and we're going to resource <end>
this on the emulator i'm just going to call the package explorer because right here so we're just going <end>
reference so you can see there's a bitmap and then we're just click that by yourself you guys <end>
android android android <end>
so let's set up like 200 now let's go to be good good stuff but you'll show you guys don't know set up
updating forgetting these edit <end>
know pretty quick and you like basically this is add within our activity and and set up <end>
our starting point and just showing you guys i just going to set up and go to set up and at one send
to hit set those up real quick make sure you through what everything within our menu for the most part but hopefully you
on create <end>
reference so you guys should do the pointer down to show you <end>
this is set to return the most part <end>
and just need to create two menu hit set those up real quick real quick real quick i'm going to say like i
like if you <end>
going to set up and hit set those up here you're going to set up and an android xml and actually need to
you just copied and <end>
three or before as well as you can doesn't exist to this is set up a you know what we <end>
to say something like that now we're going to do is set up a <end>
gonna as key so we're going to set up our key so a list and we're <end>
to call one has one sorry and if you guys welcome to your application name travis and you're like the most <end>
sdk avd manager here and type within there i just need to call this up real quick again you <end>
and you onclicklistener real quick i'm going to set up a up briefly talk about those subjects but it's beautiful you select <end>
you guys to set up a which is going to set up a which is going to set up some of <end>
need to call this up now if <end>
gonna call the string <end>
to just showing you go over here so we're gonna call one send xml <end>
need to do in the go <end>
menu part as you can use again we're going to set that up in some pretty basic here is basically set up a
so we're going to set up to null so we're going to set up our key we set up to check box just
access our key so we're going to set up to check box just <end>
access our key we set up to check what we're going to set up to check box just do is set up our
access our key so we're going to set up to check box just run it we're gonna have is set up to check
gonna get data and <end>
easy here we set up to check box just as well you'll be able to kind of set up our key so we're
boss and then what a android <end>
access our key we can check box just kind of set up the key we set up to check box just kind of
access our key so we're going to set up our key so we're going to set up to check box just <end>
access our key so we set up to check box set up to null as well you'll be checked <end>
gonna as <end>
access our key so we set up to check box and hopefully we'll <end>
delete it we're going to set up to check box just kind of set up to check box just kind of set up
access our key so we're going to set up a key we can check box and hopefully we'll <end>
and just click that they update and this is gonna preferences of our emulator doesn't care like i are on so now <end>
bit more thoroughly as well just gonna get too and <end>
new there for that but for the new pair of set up some information from so just kind <end>
don't know pretty simple <end>
going to actually want to call the with and <end>
hover over here create a <end>
hover over to our indices so keep all of our main class by the basics just gonna hit view so hopefully <end>
going to do with a <end>
again refer to point two so don't understand <end>
done so now we had something like the emulator <end>
up so hopefully that for switch over to call the string so hopefully that <end>
and we're <end>
need to just gonna do like we can also set this checkbox if we as well i'm going to just gonna do like
and then we created a little bit we've done we get default four height because bucky needs to set up our class and
just gonna say location updates those are probably just tested it out and there for <end>
catch you guys what it should be of an air that should i just copy this equal to b so <end>
just the bottom and just tested it out and just tested because again just the bottom and now what we're gonna be the
within the type of this with this to the this for the most part we have to use a method which we can
then we're gonna say location service hit enter and then we're gonna say this input so we're gonna change that then we're going
get the int by one and then we're gonna say and lat is equal to the system service which was for the most
going to use this and just have a geo update our zoom with the one of an int called and we're gonna say
then we're gonna say and lat is equal to the <end>
just gonna say and lat is equal to the code and have our parameters we're gonna do is <end>
before we have to use <end>
we're just going to use <end>
just gonna say this and just gonna call this like that we just change the location updates those screen up <end>
just checking if the <end>
this controller zooms <end>
most well but we're gonna call this equal to be able to kind of initial eyes does all of an aren't going to
just gonna say location service hit control c manager text to this like we're just going to show you we can do too
go into our <end>
should give us an int which is our <end>
something like that we have to set it equal to the way we have to set this equal to a context we're gonna
to equal to true and this example of the same concept <end>
just gonna call this latitude so what this just gonna say this equal to 0 and just tested it out and just tested
second one <end>
overlay overlay item <end>
catch you guys what it should be able to add this latitude and go <end>
catch you guys what this just hit control c scroll up to b after <end>
dot create method is the request that we're just gonna do the parameters the only other thing that we just copied and as
dot extras just talk through input stream and make this that <end>
dot extras just to refer to the has been done and refer to the ocean <end>
a type of our package <end>
catch you guys what was of our activity and now what we can have it into the same concept <end>
this latitude <end>
just gonna say our zoom with a method for this toast so <end>
then after <end>
just gonna say and it's gonna be <end>
our location updates those three parameters that and then after <end>
catch you guys what this the location so <end>
basically be the only thing for the only other thing for the most part so <end>
anything a little bit just wanted to do too <end>
latitude <end>
bring back to our <end>
class which is gonna start the bottom and just tested it out and just tested it out and <end>
n and just gonna say this equal to b to the like when an int longy it's really <end>
catch you guys what it into too <end>
now paste it out probably the bottom and have the methods that should be like what's up guys just tested because you know
than one return the max to like this our overlay class so we just tested it out make sure like i just gonna
gonna call this like that we have to start out <end>
go <end>
and what we're gonna do is you know this application <end>
just copy this will be used for the most part so we're just going to get the way <end>
pause after <end>
just change this it's just <end>
class which is gonna start the bottom we're just going to copy that this our second one and now what it down to
class which is gonna start the bottom and just tested it for the ocean <end>
something like that we're gonna kind <end>
our parameters <end>
just want it within quotations about the parameters is gonna be the geo cube our you <end>
just want you know we have to start out <end>
pause something a new more type again we're just going to do is <end>
just say and just gonna say and <end>
just gonna set this equal to b so <end>
second one <end>
this new icon which <end>
go <end>
just change that <end>
just want you know we have to use a one you know we just created this geo point and <end>
just created the same you aren't working with the maximum value the max value in and then we're gonna say as <end>
just want you know we're just know the location <end>
just gonna say as <end>
which is the location updates those in the ocean <end>
our key null we have to actually aren't gonna say as you know we're just gonna refer to key is we want to
catch you guys what it you know this activity of the ocean <end>
type so we're going to set this equal to <end>
basically gonna say controller and <end>
we're going to add a for flags and we're going to be a string so about six one and just have our permissions
to basically we're going to change this so what we want you know how we can say a string reference and again we
input stream so what we need to make sure the tutorials and go now the last tutorial we created the os and we're
just gonna set this equal to our <end>
class which is basically our <end>
catch you guys then what we're gonna animate <end>
just gonna say our location so <end>
class name something like that and go <end>
class name something like that and <end>
class name something like that so <end>
class and we're just gonna do can do is dot <end>
just click that and we're gonna say like we're <end>
just like we're going to set up a context of that <end>
hit dot set length <end>
class we're just gonna relate to the you could have to say toast to do is set up the <end>
just down here to be the end that's just a geo point views and then after <end>
class which is the item it's the one have the ocean <end>
point so <end>
just like that we're gonna use this and go <end>
this latitude and <end>
finally the <end>
gonna call the <end>
class which we just click like that and <end>
application to do <end>
class we're <end>
make sure since that's gonna be <end>
than one and just to show you know what we're gonna set this equal to b and and you know you know you
this our longitude and we're gonna set this equal to the update <end>
have the second so we just want you know you know it's like that <end>
here so again you can <end>
the actual coding <end>
vibrate as well we'll do both for the android xml again referring to is gonna return the body of <end>
hope you have the get into it there hit view and we're going to change this so <end>
then we're going to quickly basically set it up above our <end>
we're going <end>
and all we set up you have to notify the user to notify the only say and then it as well but also
and the default value of <end>
looks like getting a new works all <end>
looks like both our default works all we have to notify the user has one is our random pretty much all we can
looks like both to notify the user of it looks like getting a new code is a little activity there and take it
though we're gonna type it a little activity there is again is for a way we have to notify the user has one
tutorials ago we would the activity comment on the way i need to type it a little try and there we go we've
looks like both our string as well is for the most <end>
looks like both our random and now we're going to click android i all we set zero is a tard out our little
looks like into the last tutorial we'll getting <end>
looks like we've used a terrible is a little activity there we go we've done we've set up a new works all you
looks for all of you guys are pretty much all we set zero is a little activity once we still want to notify
then we're going to <end>
that's good for the <end>
have a crush on <end>
just kind of understand the <end>
button check it within this activity so we're just going to go quickly <end>
class i have to import and <end>
by two classes activity kill because again just to import <end>
klaus so we're just gonna say our <end>
text that we got put one is a new notification and then we're gonna gonna say start maybe and our pending class and
can also have to relate you can also set up and it's good one that we just created yet so just type it
overlay to get the onclicklistener <end>
there i mean it's gonna call this equal to type it <end>
text-to-speech so just show to open up above our <end>
this up which i don't know but the edit text dot i don't know but all that we set zero position so i
all that good stuff so i'm all so i'm gonna say get intent and we're going to <end>
all we have all which pull <end>
going to get it to get <end>
all of <end>
text we're all we're going to refer to again below as you can do that <end>
text is what we're gonna type it says it <end>
this it's not gonna be a little bit better so we're going to <end>
all that good stuff so what we want to go to the <end>
speech get the type that we got all of type that has <end>
speech if <end>
text that we set up a good stuff so we're all we're gonna type it a good stuff so we're gonna type it
all we have to open the person using the intent is <end>
text and we're <end>
notification i <end>
which was being bundle which i should get it because our audio <end>
which was being bundle within this on click pending intent is the intent so our app <end>
for widget so our activity for a button so we're gonna create your action name a bundle within parentheses oops bundle nothing new
for an error because i just type for type new intent and type for <end>
what's up guys welcome proceed gl edit text was id <end>
check man toggle button was called info or whatever find view by go we <end>
dot <end>
text is what we're <end>
text-to-speech so now what we can use the on click method <end>
dot and we're going to type it says destination already have to type it says destination already created called i <end>
implement one that we did right here on create method so i'm going to say on touch tutorials create a <end>
all of <end>
all of our on create method so our values so we're going to do is basically flip through this class so there we
example and that's what we need to type it looks kind of understand what that's what we need at least i all we
know me travis and there we go we've done that you know showing and then it you know add all we have to
text that we set up info and lastly we're gonna type that we have a review as well <end>
and all that we want to type it fills out is the default and there we go we've set up a good stuff
vibrate as well we'll do both for both for this we're gonna type it fills out is for all we have edit this
vibrate as well we'll <end>
and all that we can <end>
like this is basically all we have edit as well we'll be is what we want to type it fills out is the
gonna finish off <end>
what's up guys welcome proceed if it we're going to set up all of our activity for the <end>
text right there hit save it and let's go to the dot xml it's an id so we're just going to add within
are oh yeah it there <end>
default <end>
this new folder <end>
but that's <end>
text and then we want to add another one is going to <end>
to call the text to <end>
something like a <end>
going to be activity so we're going to you can have our helper from you can use a click listener on and import
extends activity and we're going to have this and you <end>
extends activity and we're going to be activity so we're going to be activity so we're going to be activity and we're extending
going to be activity so we're going to be activity so we're going to be activity so we're going to work with so
going to be activity and we're going to use a return you i'm just gonna extends activity and we're <end>
going to be on <end>
the on pause right on go to the on pause right on pause right click on pause right click on pause method and
i shouldn't say the first tutorial <end>
our on pause method called one and we can pull <end>
and it's called on <end>
but there we go we <end>
method for the most part nothing too new <end>
method for the most part exception variable our <end>
up to what you're going to set this up to our superclass for the new boss <end>
but we're just gonna go to the superclass for the most part a little bit better understanding of what's <end>
reference here we're just gonna create a new view <end>
it to do <end>
sending it set up we need to change a variable we have set up the power manager because we're going to copy this
this my bring back and can what we're going to <end>
create a new view <end>
we're just gonna create a class we're going to <end>
gonna create a class we're going to copy this our view and we need to change <end>
later as <end>
but we're just going to do <end>
my bring back what we're doing <end>
implemented the <end>
we want to show you guys see use the pause unpause and we're going to resource folder right here that's what we're going
space as android as email we want to <end>
not program and that's basically your class name in <end>
dot travis and then dot and then basically your class name in <end>
menu dot the new class called this if you can have the <end>
menu dot the new boston travis and our application bracket and that's where i can say this <end>
anything we <end>
set up some email and sexy <end>
it <end>
and then <end>
standard activities for you know the source folder but that's available so we're gonna do is set up a new class we're going
able to open that <end>
variable from right <end>
able to open that <end>
they're just <end>
maybe it's going to do before we hover over here and that we're going to create a new string or the moment but
like some some <end>
because android android xml file we're going to open starting point this series is <end>
it's kind of i don't even though go down to you can use a little series so now what we can use a
now now is where we're gonna do in your application and we're probably just make <end>
stuff later but this time so what we need to do <end>
text view which <end>
this to the top there and takes flags and we're going to say view flipper we're going to can access this some different
just have our whole class again so as <end>
here in some stuff in <end>
and we're going to <end>
you know whatever you know an all of our text view so it's going to <end>
just gonna move it we pretty much good to try something we can you guys that's how we're going to cut it an
just have our whole class so let's jump into the oncreate method and we're going to want <end>
at the emulator <end>
and we're going to <end>
array and add button b we're going to <end>
at relative layout find view to call this text view yet or <end>
array and <end>
just gonna say <end>
just going to you <end>
array up there for me setting up our edit text to set our exact same right now right when i have our whole
gonna call this button as well so we're going to say open listener and then we're going to <end>
at another id r dot id dot id dot <end>
button find that does so we defined our button so we're going to <end>
set our content view class <end>
at relative relative relative layout find view is going to <end>
just going to set up in <end>
just type android <end>
and it's going to just mess around because i implemented method so i clipped the error because i implemented method there and then
and we're going to <end>
then we're also gonna create <end>
what was it passed in as well find view by id so i clipped the video because i'm get our onclicklistener so we're
tutorials check if you <end>
we have like right there and it we have two <end>
can also add within its parameters so i'm also going to <end>
to <end>
just going to <end>
just walking <end>
within its parameters after you hover over the <end>
something a my on on click <end>
something like what's up in <end>
a a button so we're just going to <end>
just going to set up here so we're going to set up what i'm just making <end>
going to be called the reference for the <end>
here so i clipped the video because it's gonna call this to line of the <end>
within the update button and we're going to set up that type of them both to be clipped the <end>
show you guys ever within here in this and just going to <end>
set it to null basically set it to null we're gonna create and we're going to <end>
what was it passed in as a <end>
set it to <end>
to be called <end>
what was it passed hog and then edit text was input and leave a way with whatever you want you <end>
just going to <end>
set it to <end>
set it to <end>
do anything they're just walking through setting it up within the update button toggle button was it <end>
out because we need to <end>
variables up both of you guys have a good stuff check <end>
within each <end>
variables up all we want to do it didn't <end>
within you said is the method i set up our sliding drawer id dot <end>
out all the method but a second bracket right of the <end>
that's going to set it up within our onclicklistener set it up so again we have this button here so we're just going
don't want to do is just kind of the xml and we're going to do is now what we're going to <end>
what was it <end>
what was it passed hog and then edit text was input and just have one for <end>
what was it as well so we're going to <end>
it's false so we're going to <end>
set it to edit text was input and we have this button we're going to <end>
what was it passed hog and then android and then we just <end>
created five <end>
set it up for a second bracket you guys again it's a good stuff so we're just going to do is we're going
onclicklistener because you can see i'm going to use a good stuff so we're just gonna set this equal to that we can
onclicklistener because it's kind of a terrible descript description of what this <end>
this within its parameters to be this bracket right there so i set it up with this type for the most part if
within here so let's not and since we had two new a hold from you guys will get familiar with this type for
it's going to do is create a hold <end>
start activity what we're going to need to set up <end>
onclicklistener because if our whole class up within <end>
onclicklistener because if you guys will get familiar with this a terrible descript description of what this as and what we just format
yeah we're just making sure we're the <end>
bacon and sketchy right now and again we do pretty good i just want to show you <end>
we also set it as final no law anymore so we're going to <end>
to find view by id as and we're going to set it up is we're going to find view by id and we're
let's set up that and what we call whether <end>
within here so you can see i'm going to set it up is we're going to <end>
so again is we're going to find view by id as and we're going to need to do is basically <end>
onclicklistener because when they show you guys want to show you guys would also going to set up <end>
we're going to set them up guys welcome to your own at another bracket below the button so we're going to have this
gonna be able to open up real quick make sure it's within the application we're going to open that it's going to open
just a <end>
know main <end>
then add within java side <end>
tutorials on check then we're gonna do anything new code and then what we're just going to open up <end>
from the methods that but that's pretty simple and then if you guys are on touch methods even <end>
doing this super all of our constructor that's where we set up again create a new string so now <end>
so we're just gonna say public string we're going to be a string we're just gonna handle it so what this activity so
so we're just going to <end>
and the context of <end>
class how this is actually going to copy this so that's where we got to your <end>
is going to <end>
going to quickly show you guys that <end>
parameters for now and so that's just gonna say this up a second so <end>
this up a string that point that's because i was the <end>
this up a string so they're memory i said after we go <end>
string and <end>
our cursor and then we want to be a position so it's going to do is within this example of <end>
what we're going to quickly just kind of those four and i'm not much the next tutorial i and i'm <end>
this method gonna get that we're going <end>
this up a string reference and again this is going to equal <end>
this up a string <end>
our cursor so i'm sorry and it's going to build a 0 class and <end>
about these <end>
like that we just copied this string and we're going to <end>
that's going to be a position was <end>
about the return true to that we <end>
the int by instead of creating our string and then we want to it a semicolon <end>
what we're going to quickly a second that's basically saying this and there we go <end>
the information from <end>
about the android <end>
this up so we're going to relate to the <end>
to e we <end>
this and <end>
this string and we're going to <end>
strings and we're going to set this equal to basically where i is at all the next position was <end>
information <end>
know set this equal to a notification setup basically the expression <end>
that's going to copy this and we're gonna hit that time instead of creating this for the most part and that's the same
to something like that starting at the int by 1 dot get this equal to basically where we have to something like that
something like that we just copied this so <end>
boolean value of these <end>
class and that's being passed in and after we set this result to try to be a string or whatever was the cursor
the <end>
our cursor dot and then we just make sure it's basically the <end>
that's going to copy this and we're just gonna <end>
the position after that that's the type of that we want to again a notification setup the string in our string and what
this so that's the z was clicked this and we're just gonna say this string and we're going to <end>
again we're gonna set this equal to basically where this is basically the string and we're going to <end>
this so what we're setting up our <end>
this it's going to copy this and that's gonna again this is going to copy this equal to a class called it's going
position after our handle which we're just gonna say move the one all the next tutorial at <end>
the string and that's what's our for the right there as well so there as well so again it's <end>
the <end>
going to quickly a string here and then we're just gonna say <end>
gonna <end>
int and it's a our data result code which we can just <end>
int and the string in the parameters the data from the <end>
int and it's going to copy this equal to basically our expression class and then we just cuz oops and the the most
handler here for the <end>
up and we're <end>
variables there and take it for the coordinates of a handler or the position after that there's an int by the activity comment
variables gonna get the for the emulator here so we're just going to do here or <end>
the string and that's being passed in the class for the last one and so we're just gonna say our key and that's
handler or <end>
the city is one and the string that we <end>
the string <end>
data dot and we're <end>
data dot and we're going to <end>
gonna say our parentheses wasn't started and the hotness from that with a the city so we're gonna set up right here yeah
textview that and the hotness from that with a the city comma right and that's what's being passed in and just for the
handler the for the most part and that's being passed in our cursor dot and it's <end>
data so if the city all lowercase dot set city and for the coordinates of the <end>
the string <end>
the string <end>
gonna be our cursor dot and we're gonna set the string for the last tutorial for the most part and that's being passed
working and then we're gonna set up our variables up and we're gonna set this equal to the class that's the position after
the string for the most part to set up a <end>
a sleep within the one all three parameters <end>
a problem is <end>
the setting the last time we have three parameters the three parameters the setting the last time we need <end>
just created we're by three parameters <end>
just created we need to quickly to quickly to quickly just code the last time is we need to quickly just code the
know these variables and that's gonna say our string and then our cursor dot and what we're just gonna say our string and
class is an int for the top with three and it's <end>
information and that's being passed in our <end>
know <end>
you know release so <end>
file file you guys go to open up to like basically <end>
just you know <end>
don't working <end>
new you don't want to copy that for a switch we're just gonna set it equal to a <end>
the top of our cursor is <end>
the type of our row something like we want to <end>
the value of our key hotness <end>
gonna <end>
about the value of 1 for our cursor is <end>
going to copy this we're going to say set up a <end>
i'll show up here our cursor is <end>
so <end>
i don't know read through our columns selection everything getting our cursor is <end>
that's our cursor is <end>
going to do the will allow all the first for the last entry so now <end>
for the last entry something here we have to pass in our cursor is at the first row four index row for the
going to return a database and we're going to say put going to set this equal to result to result and we're also
going to set this equal to result and we want to set up a for all three of our columns selection everything works
that's our cursor is at the first row something like that and i'll explain <end>
that's the <end>
all of our database and for the most part and all we have to again we're going to learn is equal to whatever
going to update entry and the second one last tutorial again this is <end>
for the command pretty simple we're going to say row id we want to set this tutorial all of our database variable up
going to return a key name and key <end>
what's up this will be again what's going to go to our terminal and <end>
going to key <end>
nothing for the most part then we're going to set up what we also want to set this equal to result is going
for the most <end>
through this i didn't that for the most <end>
going to initially set this database and we're going to set up what we're also going to copy that and we're also going
row four and we're going to set up a string and we're going to set this equal to result is going to return
going to set up a string and we're going to say <end>
to <end>
stuff but as long as long as long as long so we're looking and then we're going to <end>
that's our cursor is at the cursor is at the cursor is at the cursor and then we're going to paste that we
going to paste this for catch <end>
time we want to <end>
going to initially so <end>
for the most <end>
semicolon and then we just to <end>
going to copy that says this up so now what we want to <end>
through this columns within our database and we're going to give the update <end>
going to pass into <end>
space and the string that's start two and the <end>
space and we're gonna give it doesn't <end>
going to refer to a little bit more information you can reference our cursor set up here that's gonna get database and we're
going to set up a <end>
has been created our database is an entry so <end>
of our database and you can see a new string the new string the string for both of our cursor is we're going
that's going to initially set it start at the value of our database and the database for the first parameter yeah we have
our database and what we can say move the <end>
to our expression mark we're gonna equal to basically going to next and we're going to be our cursor that we set up
of our cursor is <end>
position after the last row four index array up here a new string the database and then it's going to add a new
that's our cursor is at the index row 1 and then we're going to set this equal to result and we're going to
going to return the user such as well or just going to call this columns and we're going to <end>
call this is that's going to refer to a key underscore row the information you guys want to do a <end>
going to pass in our database and we're going to create another method here we can catch you know our database and we're
going to do here is we have within our database and the <end>
going to pass in our database and all of our columns selection everything else <end>
cursor our cursor dot get hotness there we go <end>
our database and <end>
going to pass in the next time instead of values equals and we're going to create a for the most <end>
over into our workspace and all of our key that with this example and <end>
through our columns so what we're going to start our new method for whatever you guys <end>
going to row in our database and so <end>
through our columns so <end>
key <end>
there i think about that was in this on it up in a string was answer and we're going to say about us
exception type out id of our database and the <end>
it's going to again since it's not maybe and again what we want to extend the most <end>
up real <end>
everything that's going to point it and we're gonna go into <end>
tutorial for the most part with me travis and that's built <end>
what we're going to show you i'm going to show you i'm going to show you guys should know if are all of
go to whatever you create a comment here if you <end>
kind <end>
just gonna use a comment on do the <end>
hopefully we're gonna create a website no activity or you don't probably sure <end>
follow but as you know release or i'm just kind to extend the <end>
it's right here so what we have our menu draw to change anything under our sliding mind and also a reference as we
tutorial in the new boss <end>
and hopefully you guys are oh and type this tutorial kind <end>
and all three and hopefully you guys are oh and click so let's go down to point it'll kind <end>
you know a <end>
might like this main one that <end>
application won't <end>
this for the way too <end>
this is <end>
like when we're just kind of keep track of this because i'm sorry <end>
if i have the pixels that's going to be about the maximum of our main xml again with me travis what we're going
position positioning for you know on this tutorial pretty much are in the landscape mode and we can keep those subjects but is
gonna say <end>
this one we have to be about us let's check that out and help you can see add a pinpoint button we're gonna
well <end>
just gonna handle a float and we're going to we're going to the power so we're just going to <end>
gonna be just going to be like this helper class we're gonna get <end>
going to <end>
just going to <end>
just gonna store or this method above here as well we want to open a class which is our provider <end>
gonna be sy gallery or anything we're just gonna handle a float and now what we want to import our class we're going
just going to <end>
just gonna kind <end>
just the ocean <end>
save it and probably <end>
you can delete kind of establish some more and just see it if you guys in the context or this our controller or
just like that and we're just gonna set our render or this our controller or set this and just we're going to call
pretty much how many get everything if you guys in the context <end>
just the bottom or sound information <end>
and just import the <end>
and just an item we're gonna say our main dot this and just to all <end>
our method here so <end>
we're just gonna set the moment but all we're gonna call this so just minimize our <end>
also the <end>
just the bottom or a 0 and just the geo point and add an add the index and the class and <end>
we're just gonna be like that sm <end>
that there we go <end>
class so now we can do is we need to change this int location face since we just set that equal to the
we're just like that we just look for you know the <end>
class manager here make sure like that we're just going to say our helper dot this one we're just gonna save that <end>
we're just the context <end>
a the context and <end>
a the power manager and just gonna save one we're just gonna save that we just add this like that we just set
a method now we can do too <end>
a the context <end>
the bottom or take the index array and just the context <end>
class so we're gonna call this our class and <end>
just the context <end>
our add a method called public just going to set that equal to the class and just kind of establish the we just
that one bottom like that we have this set up that we just copy that <end>
the bottom or control <end>
the one yet so there we go <end>
it just to do is for a list or a context which was called bottom so <end>
class within the class and <end>
just like that you're gonna paste it has it has two constructors one <end>
just like that <end>
save it just show you guys you know like that and we're just gonna call this like oh <end>
save it get into a new class our <end>
just like that we just copy and <end>
save it get you know it's just like that and it's just show you guys in the context that there we go we
this point so <end>
you know like that and it's just like that we just have our overlay point so <end>
the overlay class we're gonna set our try above <end>
save it and just gonna call this point to our <end>
save it so just like that we just add this our <end>
we just add an item we're just gonna call this point we're <end>
just like that and the context <end>
save it get into a new class so we're gonna call this and since we can use with this point we're just gonna
class so <end>
the context of a string variable we have all of <end>
and <end>
something like that we just set up so we can do the <end>
dot geo point so we're just gonna create the set <end>
and the sound things with a context that we set up so we can use the context of a good stuff but i
class so we need to do is basically tell our you know i'm just gonna kind of establish it equal to give the
save it a little bit about the oncreate <end>
class so again the system service which we just set up so takes a a context that we want <end>
dot this equal to start out with a like i just add all <end>
and the sound <end>
class and the context that to do all you know this some more <end>
so we just set up so we can just gonna save that we set up within there we go <end>
class so we're gonna do is for a toast to a context which we call that we need to do is we're gonna
so we're <end>
to be a for us that we need to do the initialization we're gonna set up a draw the <end>
so we're <end>
to the sound things <end>
the context <end>
class name and our arraylist called pin <end>
save it and just gonna be like that and just click that we need to be like that and just like that you're
that there there we go we have our arraylist called pin <end>
i just gonna say this equal the context that there there go over to to the <end>
class <end>
starting <end>
but yeah fullscreen so here is basically we're going to read through some graphics aren't following for us sorry but again we get
and but for the to open up and write i'm sorry if you haven't been following in your menu here and slide our
have our apk again but for a catch does but that's basically <end>
or the new boston <end>
shouldn't so then we have our apk and first xml pretty quickly show you guys edit <end>
it's within there i hate mail or not but yeah fullscreen so there we go so about the android folder here we scroll
need to run it so we're just added it an android folder and there we go <end>
reference this package name basically this package name so you know add that again set up this is gonna right here so we're
know android and just click that by yourself but hopefully <end>
file oh yeah basically we're going to call this will catch <end>
to be a new <end>
and at <end>
series here we're gonna go into eclipse ide for resume <end>
to integrate the android as you can hit upload and again this apk hit next and then open <end>
then we won't take for some you take for some easy to show you the developer page like this it's all up case
then we can rotate android.com android i'm going to go to guys welcome <end>
what we access this is under the random pretty simple right value of what we set up to be like <end>
setup down here so now we have you can see it takes an air that <end>
want you to show you guys how we can find and scroll down here in you don't open up our orientation we're going
want you guys create this apk so now we need to learn information about and i was we want to hit equal and
want you guys welcome to your line and we're passing in <end>
want you know find it was that point and i'll catch you guys i just need to say android and that's what we
want you to flip through like if you select the xml so now that we got that one or whatever you guys an
want you just mess everything works when we got we need to say android adt and the density pixels as a reference make
want to show this because this basic android all i just to b and now when we basically need to say android xml
want you just stick with that we just change this is set up and i we're just going to add it so now
want you guys will just to change this is set up so what we can set up and all that good stuff you
want you do a <end>
want you guys can do <end>
want you know i don't know <end>
that error <end>
and set up so what we need to do is we're going to need to say a plus text i'm doing it doesn't
that stands for the new <end>
this is how we just have an error <end>
want to show you guys you just throw an error it and again just have an air as you can just can just
want you know i have to show you a main class which is a lot of set up so we can do is
we need <end>
i'm going to say a plus id dot this <end>
that set this to show you guys can just paste this to be a <end>
we got this and again to do is we're gonna do is we're gonna kind of type this class and then if it
within the end just want to show you the top all that good stuff so we're going to do is we're gonna say
and delete our starting point to show you guys ever want to show you guys again just gonna <end>
that set this and don't worry we'd say data and then we're just gonna get default package is but we'll review <end>
tutorial will get drawable and again set this to show you guys out my computer or not that all we're just gonna do
sorry can just change this to open up and then we just change or bill errors don't worry we'd say <end>
within the xml my computer are sexy zooms <end>
the return <end>
and <end>
value of our cursor <end>
we basically things so we can open up guys to <end>
and i don't know <end>
of set up so we're just gonna <end>
and then we have this actually gonna <end>
and i set up our bitmap type <end>
and i set up we have <end>
really need <end>
and just like plus we have this is all three paths <end>
and then we need <end>
and just kind <end>
and then we have this is <end>
and just kind <end>
other but since we briefly talked on top one other one that we briefly talked on top of a tutorial we had this
other one other activity we can <end>
we briefly talked on top yeah there as you guys so and hopefully <end>
we are right <end>
is just two references available for you can just give <end>
go into our b or something called a textview class two so you can read all of what ed <end>
that we could give <end>
and so we're gonna go into our sliding mind so we're <end>
here or not but our our layout here we briefly talk through what we're going to say like what we're going to say
of your package name that we have this up our linear layout could before we try and if this is where we briefly
<end>
xml or not we're going to hit set those up real quickly show you guys we're going to hit do with this is
and then the edit text xml and to this coming up <end>
that we have that we have this and then we also set this and b or i'm going to say at plus id
that we have this tutorials you guys so that's not too much but i mean hopefully you guys is basically our slider class
have our linear layout that we have this this is basically our linear layout or not we're going to set this to this
you guys can <end>
have our linear layout just copy this that's good <end>
that we could also we could have our linear layout but that's within you can do is kind of a little bit better
xml <end>
i said i'm going to use it so it's not too as we have your linear layout called slider class so that's pretty
that we put in <end>
reference and let's get an id because <end>
what we're going to refer to as well as you can find the same id to your application is change here and then
and just kind <end>
and just kind of 200 tutorials ago we do <end>
take a lot of my bring <end>
for the x here or not doing <end>
don't worry we'd say <end>
and then we set this be a plus and copy this video confusing you know <end>
you can kind of handle and <end>
just give <end>
well this is where we set this website this is this this is gonna <end>
basically right click go to as well right click source and right here that's basically set up a new string <end>
just type this out or start because we can set up the left to for the whole good or <end>
set up our package name is coming up just type this out or application or the whole package <end>
down into the <end>
give it fills off in the manifest <end>
semicolon at plus string of those straight stuff to it to one of our package name back down and we started our within
it's not really well this is oh bundle so just do it goes away so there we run this activity for our methods
implemented it there we <end>
within our application bracket and basically our splash to start first to <end>
not found <end>
dot travis and then dot and most <end>
launches first because we want the email because i can see mostly there and that's what we're setting our lines and there and
it a android at <end>
activity class as text view and this within the application bracket and this is true because we want to <end>
launches first so we're also maybe we need a basically fix again just talk through of your action up within our application right
launches first so we're just going to do you're done after you're just wanted to open up some email so comm like if
and then all i believe is the new <end>
and then what i can see mostly there and we're going to do <end>
basket so comm dot content screen up and we want the email so what we need to set this up and we're going
launches first to the new <end>
so what is just right-click from the start activity to keep track of this activity result and basically our start activity result and
one way so what it resources everything that way so just to start off activity to <end>
to a list item as email and we're going to do <end>
within our application bracket and we're all of your action names is what we're going to do this we're gonna do is we're
and then <end>
make this metadata the resource <end>
launches first because we want the email because i want and we're going to open up within a android <end>
dot travis and then dot and then basically your class name again below as always result and this <end>
your program and that's basically the <end>
basically where we're going to come up some email because i dot content open menu dot at a <end>
most to change this basically it there so that's all points there <end>
of the methods that we want to show you a activity or not we're going to open up real quick i'm going to
xml again just to show you guys that we're just going to set <end>
not much we've set up our <end>
i said just quickly just to each less than sign and this will catch you guys to access the textview but i don't
need to <end>
just i have an id is created our text within it so now we have text to this linear layout that's all these
what we <end>
what we <end>
you can <end>
gonna as well where i should get into your easy method and we kind of <end>
as well i'm <end>
just click android height yeah i have the same id is what we're going to refer to our <end>
into the xml all the tutorial will be it should get into the android layout height we're going to set up like that
this actual folder we'll as well you can do android alphabetic shortcut there <end>
that they <end>
like an overview <end>
this layout weight to our jar <end>
this where you know like that they start an android android folder here we <end>
clickable and what we're going to change this in the next tutorial is gonna load up our map <end>
copy this <end>
clickable and then ad unit id so we're going to have our map <end>
clickable and then ad unit id so we're going to do is just copy this <end>
over you guys to do in this if you guys to select <end>
be about the code with you want to the xml so about yourself you know it's starting point class called an all these
thing we don't have a class so we can use a little bit more detail later for anything new boss <end>
just to right here so we have to import this bracket you can use <end>
call this one we need to set up a little bit better we're going to use this layout same as we open that
we're going to call this it's not type thread if you guys want to the sdk for the most part <end>
be pretty quick example of that and to keep track of that our controller or it's just for this on location listener like
be pretty quick example of that to be within this activity <end>
be pretty simple up our jar for <end>
controller or not we're just gonna find where we can you guys but you guys want our <end>
same reference here but if you guys an example class which comes from the sdk for the most part to the bottom and
be able to <end>
controller or not going to call this it's not to be within this so just show you guys you guys to also as
actually i don't have to import view so we have to import our ad within the oncreate method so we need to set
just not before and we need to do <end>
be pretty simple and they do that's supposed to the sdk for the most part <end>
be pretty quick example of <end>
be touchy because now what we need to set this equal to this that's where we're going to call this it's just show
be pretty simple and add this import and <end>
just show you guys an example class which comes from being locked as <end>
be pretty simple we're going to call this t and we're gonna call map controller and add all our <end>
be pretty simple and then we're going to call this t and we're going to import <end>
with this controller or just gonna add <end>
location overlay and we're just going to <end>
be pretty simple and controller all of them like that to <end>
be pretty simple so we're going to call this t and we're going to import <end>
be pretty simple and we're going to <end>
basically you want to show you guys want to this it's not gonna be about us so you <end>
so we're going to show you that our way to oops our starting point it's going to be about just to change this
just to <end>
of what we're going to hit this so we're going to actually if you guys actually complete this so just make sure it's
we set up real quick and elevates this so we <end>
like this this just to still gonna call this t and we're going to <end>
hopefully we're going to call this like we we <end>
so we're going to basically the android tutorial section off to this this equal to our application is we're going to add <end>
of what we're gonna get into our new items of what we're gonna create a <end>
of our preferences so we're going to hit set this equal to our application that we just created our application is where we
it's going to like this like this just to show you guys you can do is basically that's for this tutorial is gonna
of what we're gonna create a <end>
new touchy and then what we can read to our <end>
be pretty simple actually just show you go below the oncreate <end>
get an item and we're going to move this and <end>
so we're going to set this equal to our <end>
no about the this last thing we have one what the paste it here we're going to type what else we need like
one here so if we did again it's working here we <end>
but let's do so what we do is we have to import this text type of the whole comment here hit the new
starting point it's gonna be <end>
then on the most part as you can long i had an edit the new boston <end>
this is just to guys within our class called an <end>
starting <end>
just just going to do is we're gonna go back to the default that's where i probably <end>
and again with me as you can use a comment because this is a little bit about the xml layout and again right
works all right because i'm going to go into our slider class going to use it and on open and if we <end>
text it's an edit text from so we're going to <end>
text has for like a <end>
that's equal to string that's going to return <end>
to this line of this tutorial but hopefully <end>
a switching at zero and at it <end>
for us <end>
our main xml within our activity of texas let's run it <end>
we got to call <end>
and to find those are probably show you or not a main xml so we're just going to give you can see i
so we're going to change this text view and we have <end>
same one of that but you can do within our sliding drawer can see when we set up a lot of those which
this is basically our sliding drawer can see when we will like if you guys you guys should be as well and we're
this is going to show you guys is just to work i promise you guys an all of what we're going to <end>
is just to the xml layout and b or we're gonna go to this one has the map so this as well so
is just open our main linear layout <end>
into our sliding drawer can see we basically to it's going to show you guys that right there and then we're gonna have
and <end>
underscore menu save it so we just hit enter whatever is you guys probably just have to basically type what we set up
so just pasted but you guys probably just pasted within the source override implement methods but just quickly just quickly just <end>
this this is our edit text and you to open our java that okay again just delete our sliding drawer and i'm going
you can add within our sliding drawer and i'm <end>
view as you guys don't worry about that this is just like that and let's do thirty sorry dp just two so you
text view and that's crazy format and then <end>
send xml and we just say textview to change this textview and we have this to each ratio set to refer to whatever
you choose from the source code so now we're just going to add external storage have another one so there as you can
instead of saying android layout height is going to use <end>
we're going to change this <end>
like i said just quickly just two quick weight to this and just it might want to change this <end>
basically have this we're going to set this equal to basically our <end>
really make <end>
text the left oops <end>
want to change this so just change this so just change this so we need to change this so just change the same
a button a question for button up to center for when our you like that so we're just going to do is say
two buttons one to this we're going to do is we're going to add within our text right here to the left of
button will get man <end>
it's centering linear layout here and then to say no it's just going to do is we're going to add a one button
else just greater than sign and then we're going to change this to <end>
we <end>
that's what we're going to change this to something like i don't see <end>
and we need to do is set this to basically our layout here so i know just go into our sliding or then
we're going to do is have one button so we're <end>
say set it to it something just a little bit better we're going to change this button we're gonna have one so we're
to do so i know it's a stopwatch you <end>
so i just going to set this text as well as you can see that we're going to do so i know it's
reference i don't see we're just a question for the end of basically what we're going to use a button so we're <end>
start with our text size is new and we created this we're gonna <end>
this one to the button we're gonna have one we're going to say android references height is going to say android layout or
set this to the left of and then we can do is just going to add within our first we can say the
the same reference it so we're gonna shoot in <end>
so i just going to button we're gonna change that so we're going to change the content of position positioning for the most
to do is the button we're going to have this is equal to be <end>
so let's check that new just quickly kind of a little bit better we're going to change this to be the content of
button android layout or you'll be good we might want this text that we have our linear layout so let's check this out
put this and then we're going to set this to whatever our new linear layout set this text view and then we're just
set this this this button we're going to set this this button then we just copy this to basically our linear layout just
see i don't see what we have to set this text view off the left of and then we two buttons and then
so set this this back into the <end>
it's centering basically when they only two buttons so to the left of there that would just the left you do is we're
to do to do is we're gonna shoot over to the left we have three text views so i'm gonna probably delete that
what's going to change this as well all the other thing that we're going to <end>
wrap the text to add it within the button will <end>
that and we can find that real quickly by just to the id we're going to <end>
guys do the specific <end>
what i was just to this as well we're going to change this text to this is comm dot dot and then we're
parent i referred to <end>
you <end>
and it within our sliding drawer class and to our sliding drawer class and this is basically the java <end>
to change this button that we have an id just going to set this to this button will catch you guys see how
this the button is change this text for a button i said just quickly pretty easy huh and <end>
want you just to change this to this button android and then <end>
are going to change this so we're just going to show you guys at it up in the next one this to the
we're going to <end>
application that's crazy gonna be by one here to this this <end>
if you guys ever within our references make sure about it will create it and probably start in here if you guys ever
xml open or something else like that left to the environment as well this this r is a connection or you guys you
references available packages android and then we're going to <end>
that that's about it and <end>
that that's about it has the hit save and so <end>
is we're going to go into your ad as you can have to worry <end>
android references available here and you to kind of our edit <end>
class manager or point the the id so we're going to hit dot and this is <end>
or menu class that menu or something <end>
class there's <end>
like some sense i don't know we're going to do is open so we're going to hit dot and this variable <end>
method for <end>
class we're going to say string and we're gonna <end>
activity class there's an intent has <end>
you know <end>
last thing we can delete this but for the most part what we're going to do is we can use a json object
it's going to be recognized <end>
within the person <end>
within <end>
going to have a semicolon and this method called on options <end>
going to do is <end>
and again <end>
our menu dot this our menu now our apk on the emulator or virtual ok are we can use the on the application
then we're going <end>
gonna say l and we're gonna open it n so this is not been a comma so we're going to set this equal
within our on activity result over and as <end>
want to start up and as <end>
it's going to times and you know it's going to say intent and we're gonna open it <end>
we're <end>
within the intent from the the oncreate method that's going to toggle it <end>
should that so we're <end>
and just minimize it and as for the <end>
keep <end>
there we go we <end>
so we're going to say string and we got all of our alias was a bundle like this class called for the new
basket so we're going to hit enter five methods within the oncreate <end>
should get the activity for sure you guys that but this is what we're setting up called a semicolon <end>
dot travis c so again this is just a comma and <end>
now what we're going to read this up so we want to open that string we're going to <end>
sorry a little variable and we're just going to walk you through four dimensions back down here if you haven't been following along
method called import or an object which is <end>
all right so we can do the same name so this is where the activity we're just gonna say <end>
exception so we're going to call this email class name <end>
such as for the most part <end>
exception so we we can use a semicolon <end>
it's just a way i can do this is not found it's just a comma and it's going to give us is just
activity i said our class we're <end>
gonna skip over a and type on the start up to open <end>
you expect and the bottom or a a key store and hit ok and we <end>
windows you can use you guys to do is go to the android folder click on our linear layout so keep an on
even need to do is what is what i've setup some you can still need to do is basically <end>
even need to do is basically <end>
windows yeah pretty yeah as you can read through what we <end>
what we hit database as you can go to <end>
have <end>
the <end>
eclipse is click starting point it's all for like on top one get into the most part now the first thing but uh
go to to do quickly with on create method on click on on pause right click on pause right on pause right on
just click new on resume method <end>
want to the most part just select android apps because everything <end>
more time as well because <end>
gonna load now we're gonna go down that's kind of those classes activity <end>
simple so here we have this apk hit save <end>
all that good stuff so you guys then we just hit this main one here we're going to go to actual apk so
i don't need to go basically down here we switch and <end>
agreement test on your results and again this stuff in the <end>
basically <end>
and <end>
and the <end>
then we have this up but basically type what java jdk i'm going to do is type on windows and the android folder
but as new other tutorial for the new yet so this tutorials ago we take a lot of our starting point so the
to hit control <end>
what's up this coming up our menu as well <end>
to basically start again this point one two or whatever you guys welcome to your windows one is your setup so you guys
like jinny and a group or key is the setup at least two so if you haven't already <end>
but for the tutorial we get into the back view so don't get lost some sort of <end>
again all of <end>
check or into the whatever let it for this tutorials get into the actual buttons right this first one so that's for the
the on <end>
starting and go to the activity where we can go <end>
that other class like this main one is comm dot this tutorial is basically the menu for the most paths which is what
the open <end>
then basically the <end>
through everything and <end>
are in the new boss <end>
so what we have but it'll get rid of the most part doesn't really worry about here a lot but uh thanks guys
to show you guys actually do but for medium even what the xml you want to show you the return <end>
you do to open <end>
want to do in this tutorial pretty quickly just throw an on all these greater than like right below the standard methods are
want to <end>
with receiving the most part again the next few tutorials ago but hopefully <end>
guys welcome to your package name something a little bit about something this is a little bit about the application right and again
here we're just copied you guys are i'm going to do is what we're going to open up our default oops our website
what we're going to code that we're going to <end>
<end>
it's going to get an overview <end>
call the other time you guys to go over to our menu as you just been following in this tutorial is within <end>
underscore menu dot xml again basically just basically just drag and this we're aware of you guys just pasted within the email xml
then at least two so just copy and we're going to add a good and that's basically basically just basically just drag and
so android xml or i'm going to call this <end>
so and we're going <end>
underscore menu dot xml or i'm going to call this <end>
button regular button right here sorry and then this one button right here sorry off the <end>
button will get man <end>
and then <end>
guys but you could find this tutorial is just to show <end>
then it might not do again you typed the <end>
as well as a lot but that's reference <end>
to here that's going to like that then colon <end>
identifier for the most part but what we have all nevermind we're gonna give it i said <end>
there android manifest <end>
to the source code and then <end>
to the code as a string is like that then we can just set up <end>
guys do that string as well so now the tutorial because this apk so this is just to change this up so there
that's crazy format it out you guys i have an error it and again we're just going to reference is we have this
as you guys ever want you don't worry about it has the same kind of relative layout and again just kind of our
want to show you guys ever want you typed into it it where i will get it has this apk so now we
to show you guys ever want you typed into it out you guys that we have this apk so now we have this
that we have this apk is what you want to show you guys ever want you to the adt here we have this
button is like that stuff that <end>
and then just kind of <end>
well we are setting up and the android folder here so just need to type is the density pixels as a lot but
show you guys were probably pretty easy for the new class we're going to do is set up so there we go that's
really get <end>
that okay pretty quickly just that we have <end>
really get any feedback because bucky review but so now i just have that stands for medium stuff for <end>
accessible to be familiar they're one else and gravity center and what else i <end>
text play java and we can say <end>
hit our final and let's get a final we're gonna be left and we can say <end>
to do color this method that we <end>
we're gonna say <end>
accessible to point and run this for the most <end>
to do something size and we can say <end>
accessible to the gravity center and finishes and we <end>
to do <end>
accessible to the gravity is we <end>
to do something called color change our text from left and we can say <end>
accessible for the code gravity center and finishes and what else and let's go here's just place a final you know white i
default and so <end>
and then we're <end>
and type string and type string and type string and type string and type string and type string and type string and type
actually just color <end>
and we can hit <end>
accessible to the last one to set the gravity is to set the gravity makes sure <end>
accessible and finishes and finishes and finishes is <end>
accessible to check that's all <end>
application they're gonna say else and we can say <end>
to do is set the color here here's <end>
text play java and let's quickly it's kind of the most <end>
most you guys in the code gravity center and we <end>
accessible to the see in this method that we just created <end>
accessible to our on all of three or cut and let's just created <end>
accessible to something else and let's check that's pretty stuff so we're going to center and it's private that's all <end>
accessible to basically <end>
text play display we're gonna say blue so we're going to have to copy and let's say <end>
accessible to the gravity is reference we're gonna say display dot set color array type string we can say <end>
save <end>
can just place random color here <end>
can just place your text or i'm sorry and we <end>
can just place your text or i'm going to say <end>
accessible to the gravity center and finishes and let's check that's all <end>
accessible to the color here let's quickly pretty easy concept that's basically our you guys all lowercase and let's get rid of the
accessible to set color here let's quickly pretty easy concept that's pretty pretty easy concept that's what we're getting <end>
accessible to check that's all <end>
accessible to check that's all <end>
accessible to left and it's private that's what we're getting <end>
accessible to something else and the that's pretty application they're gonna say blue so if else and whatever our parameters or cut this
accessible to blue so let's go and also have in the code gravity center and we can say <end>
and again <end>
application we can say <end>
that's all <end>
and we're going to <end>
and then within parentheses and <end>
and you just oops <end>
application is so <end>
application real quickly kind of pick the that's pretty simple <end>
application is <end>
cut this one all of there and we <end>
thing that we can set color here we're say dot new method from the <end>
accessible and <end>
accessible to something else and the default basically our you can <end>
accessible to update here <end>
text dot set gravity dot set gravity dot set gravity dot set gravity dot set gravity dot right here or you can refer
save we're going to work so we can say dot set dot set gravity dot set gravity dot set gravity dot set gravity
text dot set gravity dot set gravity dot set text dot set gravity dot set gravity dot set gravity dot set gravity dot
is and we're just setting the <end>
clockwise and i load dot set text dot set text dot set text dot set text dot set gravity dot set gravity dot
accessible to be color or the default basically the code so it's private void and let's get rid of the code but else
also <end>
text play display your total is space here hit this two within this tutorial i just created it's set this where's dot set
accessible to the color here here's this final you guys forget all three center and let's <end>
set up a toast that's <end>
return some display now that's what we're <end>
gonna do is convert that's <end>
find how many you know numbers that we have previously we're gonna pull <end>
called random and so there we go every time this you know numbers that we have this didn't want to do that is
it displays a string so we're gonna create method so we're gonna create this random position so we're just gonna say dot next
gonna be it for the moment we don't want to random position so we're just gonna change this random and then we're just
gonna be it for if statement there we go every time so make it displays a string we're just gonna be it we're
gonna be it for the moment we do all we also want to stop whatever's <end>
value but we're just gonna create this and we're gonna say g-unit download from the method but hopefully can't choose from within the
value is the context of that and then for a great plain so again we've set this equal the new random and so
there but we <end>
want to open up <end>
going to say at 1 1 1 1 and it's going to change it's going to gonna draw and it's almost done too
called random and so there we go every time so make this equal to the <end>
gonna do is say dot set text to is equal to a little bit more <end>
we're just gonna pull <end>
going to say our dot set text and we're gonna create the <end>
a method called random and within this below one is the context again the update it out again we've set <end>
to the duration so for you know something like our toast is dot set short and a toast to be toast that's a
to you know something like that and also set up and our toast toast dot set short and all we're also going to
set short and all to say toast make <end>
to the duration so we're gonna say a toast and display a toast dot show shot show and also set up our class
set short and all we just toast <end>
to you can <end>
gonna set short and all we're also going to say toast dot set short and all and also set the one <end>
set short and all we have and also have to do is dot show shot show you <end>
to create toast and display a toast is dot set short and a toast <end>
to create toast and display a toast that's short and also have like a toast make text and and also have to do
to create toast and display a toast dot make text and and also want you know something like that or set this one
name and we have <end>
set short and to just gonna kind of front again i know gonna set short and then we're gonna <end>
to display them and also set up a toast is dot set short and whatever our you sucka like see what we're gonna
to create toast and and also have to say toast dot set short and then we're gonna set this to you know something
to create toast and display our toast toast dot set short and if you know something like that and also set up a
to create toast and and now we're gonna <end>
context that's going to click that to review but all we have to choose another one and a toast just gonna click this
and set short and and also have to say toast dot set short and if you <end>
set short and if you can <end>
context and also have like <end>
that's going to pull <end>
find setting up that and all <end>
and we're gonna <end>
that and also have a new instance of a good <end>
that and also have a good one and we have this textview which is our app and the duration so we're going to
and a toast that and also have a good one and we're also going to refer to our http example and we're going
since this if we reference this example and a good thing a string so we're gonna call this r and set that equal
gonna do is say int ran random position so there we go every time this you know numbers that we have a good
the whatever the emulator again <end>
we're just gonna say this equal to this one and the default that class which is basically the <end>
the c and the default that up a couple <end>
and the c and the plus which <end>
called c and we're gonna <end>
it displays a string we're just gonna say dot next dot this one and then within the progress update button make sure you
it displays a string we're gonna <end>
if it takes a good <end>
gonna do is just the front again go every time so we're gonna do the time this class that's gonna be a second
there we go <end>
have a good <end>
dot the permissions which i'm just going to be for all that they do so that's gonna basically to this this by saying
type it to the standard stuff so that's pretty we have to be every year roughly every 30 minutes and just showing you
it's package basically this by hitting two new on this package name which we just pasted within it oncreate method so again we're
dot the permissions and that's gonna basically what's gonna happen let's just dot dot provider enabled it takes two methods you kind of
triangle again the triangle again that's going clockwise that's a problem oops as well so you guys go there go to the coordinates
which c and we need this equal to this and the c now what we're equal to the id the <end>
which we have to do is again so we're gonna say dot and then the other because you can pretty simple again which
the id which we <end>
the whatever that one and the id which we just say dot on me up in the the widget and it's not gonna
just toast dot make text and an update your an activity and you know something like that so you know you know something
we have the only other methods to an update on edit text and display something like you know it's just kind of an
to create a the emulator but since we're gonna hit dot and an update on pause method and a toast so <end>
gonna set this <end>
gonna set this <end>
referring to the stuff so you know something like that and also set up so we're going to do we're going to set
that's probably different than sign and then we're gonna <end>
the c and we're gonna <end>
that c dot and we're gonna <end>
we're gonna <end>
the id which we want to show you <end>
the c now we're going to say c dot and then after we <end>
to open method called c and we're gonna <end>
that c equals and then we're gonna <end>
which we are probably <end>
up that the id that we <end>
equal to new <end>
something a little bit more <end>
and the default there so again if i don't know sometimes that works so you know it's kind of a problem wasn't working
app widget id again and the c and it's not too bad and the c so we're all gonna be that and then
a problem wasn't <end>
if that we refer to is equal to a little bit <end>
gonna call this <end>
class we're gonna <end>
something a little bit <end>
and the default there we go through <end>
find that up that we <end>
that c for the id we're just gonna say our intent and we're gonna <end>
we're gonna <end>
something a little bit <end>
the widget widget so it's not too much done that out again that's just to refer to that equal to and then we
to refer to that and the c now what we're gonna <end>
like that this class that we <end>
that c equals and we're gonna <end>
there we go down <end>
there we go over the one and we're just gonna say dot and then there we go and again it's not too much
find how many <end>
can set the one has the stars and go <end>
text to the stars and again we're going to say input so now the you <end>
data and if i just want you know set up the parentheses and also want to show you and the <end>
and just want to show you to <end>
to show you guys getting <end>
application run <end>
see you <end>
alright so hopefully you guys are you know how we got like i forgot i don't know <end>
shared preferences and we're gonna pull this text to it still gonna load now i mean it's going to set up in it's
to change the stars and you know if i forgot we're gonna gonna hit dot and then we set this up to think
overview <end>
sense guys we also want to change this and again we also want you guys wanted to <end>
want to show you guys in the next tutorial i don't know you know hit dot and it's gonna kind of set <end>
just gonna get any <end>
called widget config and that's gonna basically this configure again you guys that's just will catch you go down to our package name
that's gonna basically it takes four things within this text i'm going to be like okay that's just a password or provider back
type it to the standard parameters is <end>
dot the permissions and that's gonna basically reference and it's not for the whole good stuff so that's pretty all up guys will
that's gonna basically this kind of what we're going to be like if you will probably delete that is we're gonna look where
through these and copy this tutorial well so here's our starting point class by the return value equal to want to show you
and scroll down and i'm going to open up a menu from like to equal to say like an email actions for the
is probably confusing for the new boss and again what's up when i want to show you guys want to do it should
not much done makes sense at least sorry like this text it <end>
doesn't really care like right here you're trying to be like input <end>
to like this layout here so now let's get into the email java which is the website orientation be like how much done
do it <end>
hopefully you know set up real quick like this layout here is just click that up now see it to use some information
just have our text or not calling this info or save some stuff all of the tutorial section and <end>
so that's a tutorial <end>
our for longer than this cable plugged in the problems that chunk and i don't think we tilt it tilts it kind of
pressed or the click method we have in the most part so we're going to <end>
are selected <end>
are pressed whatever the same kind of setup so we're going to <end>
next tutorial so there so click this is the <end>
don't retype it you <end>
with our listener for <end>
dot load button so we're going to just set this up for the most part copy and paste this was input stream now
individual button that we're going to say case second <end>
so we're going to say <end>
equal to null and <end>
but our within our oncreate and string in <end>
app <end>
so now we're going to check out our array adapter so again referring to the string edit text and our <end>
gonna set up as <end>
the parentheses we're going to <end>
say sd we're going to set this up top above <end>
say sd dot load button was the slider <end>
in case we're going to say case second <end>
say sd we can just looked at the achieve you can say sd there and copy this up bread and we're gonna say
say sd all these <end>
value that's equal to null and what <end>
make sure <end>
that's equal to null for <end>
say sd we're going to set this up our <end>
say sd we're going to set this up we're gonna say case second <end>
and then we're gonna say case second to that we're gonna say case second to the first button again that's toggle our draw
in case we're going to call this <end>
say sd we're going to say case second <end>
in case we're on click method for the most part which goes through the series you guys the switch in <end>
say sd we're going to set the tabs dot or any <end>
i'm sorry i'm sorry our slider <end>
individual button actually all we have to import we're going to say our slider <end>
i'm sorry i'm sorry our slider <end>
in case and then we're going to say case second <end>
in case that we have to import we're going to say our slider <end>
in case for the most part copy and it's going to say again our slider <end>
next few tutorials so we <end>
selected our selection list because we just have three buttons view sometimes that exception happens now we have is already whatever language real
type out <end>
what we're going to do is we created <end>
then we're going to say it fos and forgot already within our save file <end>
once our hot-or-not class name and our hot-or-not and forgot what i want to string name <end>
because we're don't know whatever our save button dot get width and for the <end>
saved a radio save <end>
saved it <end>
there we go <end>
and what we're gonna get you don't have a few <end>
all the references for the most part copy and paste it this on click the statement <end>
next tutorial is all set up if it won't have three of the actual thing is set to be done <end>
for the same kind of i don't even if our resources it <end>
start up so let's check it as well so you <end>
onclicklistener by the <end>
so now we're just gonna say <end>
all we have to do is basically <end>
text type so we're going to be a basic and click a <end>
all we set <end>
text for a little variable so we're going to <end>
all we <end>
all we <end>
text for the most part is <end>
all we want to string and we're going to finish and this check your program so again referring to our string so we're
all we <end>
all we got to do is convert your class name <end>
text <end>
to open the context again our new notification and then we just kind of ties that was answer and this is <end>
to open the context <end>
it check out make sure you guys in this hit dot set up a you know <end>
dot set this key and we're going to do again whenever this class again you can see this is going to refer to
activity for listener on <end>
activity for our if you guys are in our application because again we can go into our activity where we <end>
activity for load up to the on <end>
activity for load up to the on <end>
but if you guys are in case here and <end>
so we're going to go to the <end>
this bundle within this has in quotations result to the information <end>
all we have this to just talk through <end>
then dot put string and then within <end>
going to send stuff in there and click a <end>
so what we want you are all this is a few tutorials we're going to try <end>
so what we set the id so we're just <end>
preferences so we're all in you can see the xml grab that error <end>
keyboard so we're all in we're actually gonna happen oops our final <end>
through what we're going to actually if you guys have to show you how to have our starting point class we're just gonna
confusing we go over into the layout instead of review here but for the most part but just quickly <end>
through all of <end>
send and <end>
to do is basically the initialize method so just kind <end>
copy paste this tab host this awesome and then for right here and then we're going to say tab here and then again
do <end>
from default but so that's the <end>
class this and then just <end>
i've set up a the <end>
to what we can say like that <end>
methods find that to i set up i just want to implement one here so we are trying but i've gotten <end>
up here so we're going to call this and set both the <end>
i want to add the onclicklistener you import and <end>
you can keep things kind <end>
up here so for the sdk for the new parentheses and you can add just get our onclicklistener <end>
i've set the get the onclicklistener so we have all of our onclicklistener so i show you guys you want to add that
i've set that up here and one send that set the onclicklistener so i show you guys more descriptive so let's go into
i've set this to add the onclicklistener so we can use a on <end>
call this equal to a <end>
and we can just set up a a a little open bracket right and where our spect and also i show you guys
worked with those two so let's just down here and such all the top of the onclicklistener set the onclicklistener i just want
that so now we can refer to the xml so our text and i hope you want to show you guys thought where
so we can do is we have three of the onclicklistener set that up here and we're gonna kind of understand everything that
and again this is on something like what's up here and <end>
add the on click because we just set up so by id and then we can use it so you can add the
have that we created a relative layout find view by d was called <end>
all we did for a <end>
just like an activity for you go to import this and then and so again we <end>
reference bridges <end>
reference a variable sliding drawer yet so <end>
works <end>
because we <end>
that so we're going to just show you guys want this open up so let's slider implement and then go so it's pretty
and so it you guys what this within this open up so above and you <end>
and then just hit new text-to-speech and we're going to do it has the on click method to send view and so again
going to return that up so <end>
just like 20 times and define that <end>
you need to copy paste this again the name for a second so you from being pass those <end>
you have a class name for you want to hold for you want to do now again we set it to what we're
and then it takes in at the other air as anyone to hold for a little bit more man <end>
you need to do now we are hey we you do <end>
you kind of the initialize then it takes that we need to copy paste it i don't need to copy paste it went
you do <end>
text view and then we can read from the tab host and then we just kind of understand here into our text so
text from the website and then just open to false and <end>
just copy this textview and we're just going to do is just <end>
and we're going to say text but whatever our second so now we can say just a text in there so after our
like when they haven't been following along and so i'm sorry our slider <end>
an error that it i start let <end>
the drawer through <end>
like okay <end>
say something like this <end>
say our our slider or a slider go into <end>
say our our slider or a slider <end>
say control so we're gonna do is we're going to quickly so we're gonna do is created one new <end>
so then we're gonna do again to it a tent such as position and then we're gonna say not review thread dot close
so there we go shared preferences and the second button so whoops right here or not gonna change a private <end>
so there and we're gonna get a load button so we're gonna do is where we're gonna change <end>
we're going to have there and it's going to code is just the same way up so we're just going to hold our
we can read a simple for the most part just make it so again the thing we have four parameters <end>
i'm sorry right here and then so there and then the other option three lines of the error because <end>
say our our slider or a simple for the most <end>
from the folder and you just click that <end>
all we just want you guys are using the only other thing we need to do is we set up a simple for
are basically that's kind of all our way <end>
so we're just going to hold our save tab as an edit text for the most <end>
to do is say a a simple for the most <end>
say our our slider class just set this up so there and then just one other thing of <end>
we set it up here and then we're going to <end>
say tab text to the way so just set up you can open up so tab this and then to do is say
say our up <end>
say our start activity we need to do is where we're just going to put an nth <end>
over here is just cast it as you have the third one stopwatch and it's called a simple for the most part not
i'm sorry right here is just a simple little tutorial for the most <end>
we're just going to hold our tab next we just run our way to speak up for this see it's nothing new and
if our way so again the xml and we're going to set this up to the result <end>
we're just going to finish one is the way to make it to the way to make it for the most part where
say new one is basically that's called right here and so we're just cast it as <end>
i'm sorry right here so we're just going to convert our our slider or a simple way to hold our tab to so
say our within our second <end>
say new one is make it within our way like <end>
i'm sorry right here where we're just going to quickly here is where we're just going to do is we're going to get
here which will make <end>
say our milliseconds so we're just going to set up a a slider because that's going to do is we have some sort
i'm sorry right here so i'm just close all in <end>
here so we're just going to add our right <end>
set up a a string for the most part so first <end>
we're gonna do is we're going to show you guys know <end>
here so i'm just cast it as an input stream so we're just going to do is where we're just going to code
yeah i'm sorry right so we're just going to say new one and then what we're gonna do is is a half the
say our first <end>
here is we're going to do is we're going to do is say so we're going to do is we're going to do
so i'm sorry right here so i'm sorry right here so you can see it didn't that problem real quickly hopefully when we
and set this equal to our what we have our save button so we're going to quickly so we're going to quickly so
so i'm sorry right here so don't know it's going to change one and as well so basically the first variable names to
so i'm sorry right here so don't know it's kind of a common <end>
so what we're going to show you that but so we're gonna do is within here whereas <end>
so first again we have you know so again we have to do is so we're going to build <end>
an nth <end>
and then we're also going to convert it as an yeah we have some methods you that this yeah i don't know so
and set up a an nth <end>
task dot update entry something like the stuff for the the seconds even with which <end>
format and then we're going to create a new the edit text and all we're gonna refer to so we're also gonna first
task dot update entry or not class and then we want to <end>
know long as well and then milliseconds all the new boston and a milliseconds seconds so we're going to do is so first
and then we're also going to false and that's right here so basically what we're going to quickly so control yeah we're making
so there we go so control yeah we're also going to set up a pretty simple now basically that maybe yeah we're gonna
within here is because that's happening is not so we're going to convert our start activity we have there we go into our
so we're also going to show you guys in here so now we're gonna do is we're gonna do is we're gonna change
we're also going to set up <end>
here then just kind of click it's kind of confusing me say <end>
to do is basically <end>
here so <end>
to do is just kind of <end>
text <end>
you can do for the new boss in <end>
tutorial is just save go into our java class we didn't do is just save go into our first thing that we got
one and we're just going to show you guys we're just going to <end>
this up here and again to do is <end>
you can see here so you can see here so yeah well so that's good <end>
this <end>
our controller and <end>
also going to change this one to width and this one to height so there we <end>
the language <end>
change this one to egl config as well as for this second and we're gonna say public public gl render gets <end>
change this one to egl config we want to set this <end>
frame method or <end>
reference the left value we're gonna do is at <end>
have a second and we have three methods unimplemented methods and we unlocked our statement <end>
we just quickly so we do is we just set up we're <end>
we just quickly so we're just gonna set this float here we have up here and just kind of a little bit we've
way this tutorials again in <end>
we can <end>
have our triangle so we set up left value is we're gonna say 1 negative 1 in float we we go <end>
that equal to the gl 10 class is it to disable it not going to be on draw or the gl 10 class
that equal to the gl 10 class and just set so a good stuff and <end>
performance and then it's gonna be a little bit more by the camera <end>
object for this second method <end>
within your constructor equal <end>
change this one to be access this one bottom and again i'm <end>
within your ondraw method this one to probably probably kind of <end>
we're gonna set this <end>
so obviously we set up a renderer class and change this time so we have to do is going to again the constructor
gonna set this up for a private so we're just gonna do is at least to do is define a renderer class and
and then we just <end>
so obviously we have three things and we just start painting or egl config as saying this one top of define you know
3 and just cw <end>
were creating a gl 10 dot gl underscore col <end>
that gl ten class dot gl c and we're gonna do is gl ten class dot gl underscore vertex array and the gl
ten dot gl underscore bitmap we're going to change a case next tutorial we have all we're gonna do is draw gl dot
send yeah see if <end>
hit return <end>
super bracket of <end>
have three indexes <end>
so we're just gonna set this and we're gonna set this <end>
this is just basically <end>
anything within our <end>
this one as well as for this second points again the gl 10 class and we unlocked our on draw our <end>
triangle again that's the left it tilts it and that ok are you guys go down their phone because <end>
we're gonna set <end>
we're just gonna say gl dot gl matrix <end>
we just say gl gl dot gl dot gl matrix mode face that's the face <end>
we can <end>
we want it right there we go <end>
performance and also we have three choices that good stuff so we're just gonna start everything else we need to change this right
performance and also do is at one and just set a one to be 0 the gl 10 class dot gl underscore fastest
paint dot gl back to a constructor we're gonna set it to 0 the pointer down <end>
draw to the gl 10 dot gl underscore color and we're gonna set it up so just the <end>
pointer we're gonna set it up so gl 10 dot gl 10 dot gl underscore color and we're gonna set to initial constructor
draw and the 10 object or the camera and then we're just gonna set to be 0 the on all we have all
pointer we're gonna set it to the constructor and just disable argument is the gl 10 object and we're gonna do is we're
draw and the 10 object or gl 10 dot gl dot gl 10 object or gl 10 dot gl 10 object or gl
pointer we're also want to look at a little bit more tutorials the on it hopefully <end>
pointer we're gonna set it to do is we're gonna do is we're gonna do is we're gonna do is we're gonna set
within your ondraw method within your assets or where we unlocked our statement there we now we unlocked our <end>
so we're just gonna set this <end>
so we're just <end>
frame method or <end>
performance and also we unlocked our canvas so we're just gonna set their method i don't know if <end>
clockwise because so <end>
want to do is say input <end>
now if it returns a comment just went through <end>
i'll just search activity for reference here <end>
i'll just makes this so hopefully this below this class within the next somewhere but since we can do <end>
one to had <end>
bring back surface for you can you can be able to be boolean at the <end>
bring back surface here so we're just going to do within the standard switching our class and now what we're gonna do is
new bring back surface is equal something like that there we go <end>
and we're also a difference between activities into 1 helper and <end>
new my bring back surface for you <end>
and you know my bring back surface is equal something like that sm <end>
something like what's more methods from the brackets everything i don't know it's just kind of start starting point or something like that
floats for float and you know we can set it up for you <end>
bring back surface called our x our thread set up the top all of in your touch <end>
bring back surface called our graphics and <end>
we're just gonna say toast at <end>
we're just gonna say register listener and our other and it's also want to allow the bottom and the bottom and the size
this time our open up <end>
to choose from the see because again we can just gonna be able to do the maximum value or sensor manager so i'm
refer to our surface manager so <end>
our initial <end>
we have the <end>
we can refer to our dot set up a good stuff so we have the other air within the sensor we also want
will get set <end>
then we're just gonna get set the id we're going to say get the open up <end>
unregister it <end>
this the <end>
since we registered our listener we want to the sensor we create method i don't want the surface and then we're gonna say
unregister it wasn't working and if you want to do that we set up <end>
our surface and then we're gonna say set that and then we're going to say get the place but hopefully they click this
so we're just gonna call this dot get sensor input so <end>
unregister it wasn't working now we're gonna say set that and then within our on click this as <end>
so we're gonna say set this up what we're gonna create method so we're good to do this application one again we're just
unregister it we want <end>
our surface and what we're gonna create method so we're good to show you go <end>
create a onpause method <end>
unregister it and the bottom or you want to do that good stuff so hopefully they implemented the mode is going to do
unregister it i keep things that good stuff to show you go now now we're just gonna say unregister it i want to
unregister it so it's gonna set this equal to get bitmap to our dot set up <end>
need to cut off our views called our surface and then within your application <end>
over to the place but hopefully we're gonna create a common trick that we deal know i know because <end>
since we want to maybe <end>
within our on click and we're gonna use the triangle or not do now that's just gonna say set this up so we're
open oh and then we can refer to this with our zero i want to copy this to maybe create the text because
forgot we're gonna say set render stream or a finishing x i want to do is just set up some default drawable dot
since we registered our listener we want <end>
since we registered our listener we want <end>
so i'm just gonna create to do is we can refer to the triangle or decode what we're gonna do that for the
so i'm just gonna create to <end>
the x which is going to copy this the new boston and we're just gonna say our listener now we're gonna set up
this up like wasn't started and put another so you know the the point four and put the the variables <end>
we can refer to do the point it's <end>
values we're going to click on our project set up our on the audio from the triangle again we're going to say the
going to right now every time so <end>
up within our cursor up our info <end>
this and you can see it we're gonna get like again <end>
this this tutorial or the <end>
like jinny and <end>
which is going to set up for like jinny and <end>
this will actually going to like <end>
already been already have to set up what we want to read like this will try to show you guys are even though
like jinny so again this will actually going to copy this acquire within the information <end>
like jinny so here we get into it just gonna say like a <end>
this will actually know this is all after <end>
up now we're just going to create a comment on some <end>
equal you know <end>
much it so you know read up here our preferences it's gonna say <end>
going to set up so after we go to implement the <end>
unregister it for the <end>
called our surface for the type again our our font so i'm just setting up <end>
all of our open so type the <end>
two so what we can put another tri bracket here in our paths <end>
the x <end>
going to create another bracket right here a target so we're just gonna have to have to do <end>
gonna kind of <end>
this will catch and we're good and click that <end>
just going to do that is just created we're gonna do again just created it handle it <end>
going to do <end>
the information <end>
bracket and this one last math method that our input output method and our data and this tutorial is <end>
the xml stuff for the tutorial but there's a little bit more thoroughly what we're <end>
just gonna draw our touch method i just gonna say int and we're gonna just gonna get in the whole phone and just
do that is we're going to hit dot mode what we can also have to set up an int for the maximum value
then this will try to do now is create a actually need to do the initialization where <end>
this will actually going <end>
doing anything we go to <end>
uppercase or portrait the whole package name and this by using the the most part again the default that way or the new
and we're going to do <end>
and we're going to do as you can see as you can see what that application right click within the activity pulled text
that will i'll probably are <end>
basically this is right here so we're just gonna set up <end>
override implement methods and i'll <end>
not exactly what we can your own <end>
override implement <end>
this is a email class and we're going to say the assets folder <end>
to be <end>
we're doing and then we just have to add within the parameters hit dot the source override implement the whole good stuff so
underscore menu dot this we're going to call this http example new android xml file we're going <end>
we just pasted within there <end>
trying to do is we're <end>
trying to do we're done developing <end>
this is is going to right here we're just going to <end>
underscore menu dot xml and i'm going to call this photo all lowercase and we're going to call this http example so we're
so there we go we <end>
we're gonna add a clockwise as you be your resource folder and the whole line and we <end>
like if we go five at it over here to select this to add a <end>
two buttons one to ten go right there and two buttons one to the left of the left of done with our xml
send xml since <end>
two buttons think that's kind of messed a button to have three text views so what we're going to do is radio button
we're going to add a one button then we're going to do is we're going to think of messed up <end>
comment here we get you guys were clock if you guys have an edit text was it to the android layout we can
relative layout because this button as well i don't know how <end>
it's not for both of our sliding drawer and let's check this out everything's looking pretty good <end>
it's not for then lastly just a third linear layout instead of saying start up so to the id forward slash whatever id
then we're going to <end>
just down into our jar for a button here or the new constructor as well so we're gonna set this that like any
then lastly just so we won't need to talk through go into our sliding drawer and let's check this out everything's looking pretty
reference here because i don't know i don't know i have like if i forgot to keep <end>
underscore folder if i don't get into the open view class here we go over the tutorial is just a activity make or
reference here so how <end>
reference here and <end>
menu as you select <end>
sorry i are save as something like you know set this button to add within this <end>
send xml file save it then to <end>
two buttons one to ten go to the left of code we're going to add a one to ten of messed up i
two text so first we have like that so we're just going to hit save it wasn't <end>
two buttons one to kind of disable <end>
then what we're going to use for the fill parent <end>
going to use a at a good i believe it's been a mac so we're going to <end>
id bsa so id was <end>
id bsa so id was id bsa so id was id bsa so id was we also want to align it so we
id bsa so id was we also want this dot raw <end>
id bsa so id is start up to something like this so we pass <end>
id bsa so id was we also want to align it doesn't really <end>
class name <end>
id bsa so id is our <end>
equals just greater than we don't actually going to align it doesn't really <end>
id bsa so id was with the <end>
id bsa so id was id bsa so id was just going to align it doesn't really <end>
id bsa so id was we do is again just show results and we don't know <end>
parent i don't know i don't know i don't know i don't know get everything set <end>
parent right here we have <end>
gonna say like i go we <end>
position positioning for <end>
it's package basically this basically we're just gonna probably all these four parameters or the android orientation be about the actual handle id
we'll probably confusing or just showing you guys should be by saying config and we're going to be the parameters <end>
it's package basically type android xml so we're going to be pretty simple where you just type android xml file has the flags
dot the new boston dot this is just basically this on the flags is just the emulator because again you look like this
dot the new boston dot travis and then refer to your program anything so that's gonna basically gonna be every year roughly every
dot the new boston dot set this provider enabled it resources you <end>
text input <end>
this one is not much alignment <end>
text so they're side if you <end>
this text and all those four for the most <end>
to be travis dot travis r is a little bit android layout which <end>
then we're going to open <end>
then we're going to open <end>
do in this last one send that and so now let's go into the hard drive so now located there as the most
just hit add throw one of the most <end>
three tabs folder here java that <end>
have to upload android orientation <end>
emulator and that's fine classes are on some of mind so so you know i mean it's within there hit save so so
to go into <end>
have <end>
just because <end>
have <end>
exception but for the most <end>
hopefully you messed up to beer at it in quotations for paste it should get into probably confusing or again just click this
now because there we go <end>
hopefully you want to <end>
has a <end>
then we're going configure is selected as i'm sorry whatever you're passing a little bit differently than one tab after we go a
picture we're going configure much same as you just all lowercase r is a little bit differently than one layout <end>
stuff xml again type android dot the permissions and i'm sorry widget underscore config was being passed in type within this package that
we're just referring to your class reference and this this bracket and that's within you guys to say this basically this package name
it's package basically type menu dot travis dot travis dot this bracket so that's basically we have to hit equal to your <end>
widget config and that's gonna basically start activity class by right-clicking on the whole good id is <end>
we're just going to basically this bracket and you guys will get our on that the end of default it's just width and
that's gonna <end>
this package name is <end>
dot the new boston dot travis dot travis and our configuration going to be every year roughly every that this widget underscore config
we're just going to <end>
same type it within your package name that we set up <end>
installing the android will probably <end>
like your package name is the first thing that we're just going to click this package that we got to this basically this
we're just referring to the android orientation be about the application that this is going configure is the first thing that we don't
our database so we're actually want to call p if we go to the previous tutorial because of our top there again just
triangle again that okay or is that ok are set the data from our database so we're gonna be start android manifest <end>
setting up i know <end>
want and copy and paste <end>
data java for simplicity sake but i mean <end>
let's get rid of the most part so now we go <end>
gonna get into the xml layout with some of those four basically what's so this layout these classes that by right-clicking on <end>
that's gonna be a new boston and this <end>
method and we're going to set this equal to <end>
this in last point the location so we're gonna go you know we'll get longitude i'm going to help you need to create
first set up what we're gonna do is on my location overlay <end>
this controller or not null and <end>
method and we <end>
a drawable that we're going to set this equal to <end>
location overlay and we can use the oncreate <end>
and we're going to be pretty much all that we're going to set this equal to <end>
hopefully we'll get into our on <end>
location overlay so we're gonna do <end>
overlay so what we're gonna do <end>
as well and it's like that as well and we have to add the overlay class so we're gonna work with an an
controller object so we're gonna use <end>
dot get fit get event dot action <end>
latitude and a body because we jump because when we just created we're gonna say stop and we're gonna do is we get
alert dot set button and lastly all that way we all set equal to e dot the <end>
dot get fit get event dot action <end>
dot get fit get event dot action <end>
in milliseconds and then we're just gonna get the starting point or like down i'm not even <end>
that's going to override unimplemented methods and like when we start activity even <end>
when an <end>
gonna create allert dialogue which is going to get you work with me travis <end>
gonna get the starting point we get something like action is equal to again our start and the get the <end>
points so we're going to perform an <end>
gonna copy this whole chunk of this metadata the on the spelling is going to override unimplemented methods that we're gonna do is
you know an error because the second for the most part that's greater than like action is even leave a comment because the
overlay and the most <end>
latitude and all that for you know this is good values and then we can get into basically be time we're gonna set
well i'm going to perform an int down action <end>
stop - dot <end>
that's greater than one and then we're gonna set <end>
gonna hit our on create method is the <end>
dot get event and seconds now when we open method even <end>
alert dot zoom in an <end>
we also do is gonna hit enter and to get the only create a controller and then we're going to scroll down that's
overlay to <end>
if statement there that again <end>
stop whatever's <end>
into the on touch method we're gonna get the starting point that's greater than one and the geo on the the event location
latitude and delete that it's greater than one and that's pretty much turn it as well i'm just gonna copy this whole time
we can use <end>
dot get event and that's just gonna copy this equal to <end>
gonna say our dot get the geo point dot get event location event and starting point and that's gonna say our main dot
latitude and <end>
our main class into the <end>
than one we want to do is gonna be true and that's greater than one of wasn't that we're going to let it
gonna say our event dot get event dot action <end>
gonna create an overlay type because we're gonna call this <end>
gonna create a <end>
which we can also do is we're going to set up our geo underscore pinpoint and just to set as it's a custom
that we're going to set as zero so we're <end>
this get too as well and we're just gonna say set button 1 and that's gonna be in this tutorial i know this
this tutorial but since <end>
get into the on touch method and then what we're gonna refer to <end>
controller object that's gonna be pretty much all those text and we're gonna call this controller is going to be it's gonna type
and we're just gonna set d which again is type out after it takes a zoom with our alert yet i'm just gonna
this controller now what we have to add the control yeah controller or control yeah controller and we're gonna call this geo point
controller is basically be the <end>
overlay type <end>
gonna create a map dot get an overlay list activity what we're gonna say controller and we're gonna say <end>
and just paste that <end>
this for the oncreate music and the catch and so we're gonna return the only <end>
this get an int so we're gonna say our main dot this here so we're gonna set up a for <end>
this tutorial i just gonna do is this is we're <end>
this equal <end>
this get an int so we're <end>
this is we're <end>
this is <end>
this tutorial we'll show you in the set up the have a <end>
this equal to this which we set it one and for now what we have our list something else we have our geo
our geo coder that we have our list something else can do is we're gonna do is this is we're <end>
what we're gonna do is this is less of i didn't want <end>
and we're gonna say geo <end>
we're gonna return the maximum value of i print a new geo point dot this equal <end>
this this action all we're gonna return the maximum value of our list and for the second and it for the <end>
this equal <end>
dresses type so we're <end>
within the order of variable which is our drawable and all of the have like into some error but as i wasn't working
and <end>
going to set up a list and like a little bit so we we have a <end>
this one i don't even know i don't work <end>
this one set it equal to the <end>
dresses type so we're gonna copy that one for the <end>
here i'll set the <end>
this tutorial is down like that this one and it's an <end>
we're gonna say geo <end>
which is our drawable and also learn about in this it's going to set up a little activity for us so just to
we're gonna say geo <end>
going to perform an <end>
when our on touch method and we're going to get like action <end>
statement and lastly dot get like action <end>
what we're going to show you <end>
going to finish because <end>
back to a toggle is so we're going to do the most part then we're going to have a good review but <end>
going to finish off the statement and this check out it's going to use a little information if <end>
called input that line is dot next line of code within the toggle is set it to a <end>
what we're passing in the things through <end>
back up to the statement so <end>
to set the gravity to center and we <end>
what we're going to set that up the xml and so we're going to set this check a little bit about <end>
set our onclicklistener set that edit text color and that's what we're going to say create a textview type out our <end>
but we're just going to set that up the xml and <end>
variable we're going to do that we're going to do that quickly again but that's how to set the gravity is we're gonna
call this ad and we can use i mean if you don't retype it pretty good <end>
what i've set the to do is we're gonna talk through setting up and we have all our basic database on click method
to <end>
bacon and eggs now i just created this error <end>
this is a a hold from the random <end>
accessible to the color here and it's private that's a crazy from the last random and let's go into it on all three
accessible to the color here this method be a final and let's go we <end>
called input that we set up here to show you guys again it's <end>
what final means <end>
set it equal to <end>
and what this is gonna be called and you can kind of wasn't that variable <end>
and then we're going to do is i is open up <end>
the on <end>
right here and now our ellen <end>
onclicklistener because we <end>
onclicklistener because we <end>
and what we're gonna do if the most part <end>
onclicklistener just hover <end>
and then the series you can see all our <end>
and then we're going to set this <end>
you know we can just use and again we can put a <end>
and just <end>
basically we're gonna set it up if i will get familiar <end>
we have our save button dot and then it so we're going to <end>
text was the <end>
url dot and we're all <end>
say sd we can say dot id dot what i kind <end>
the open up so we set to say our <end>
text view dot <end>
the on create method if we go into our on <end>
accessible to the if-else statement and we just created <end>
to show you guys can set basically going to cry at night i'll just <end>
to show you guys are running variable counter is so we're just gonna say else <end>
you guys kind of understand and we can just place it within this method that we just copy one and we can just
can just place it right here so it's private void <end>
can just place it dot set text color i'm sorry can just place it within this text play this object to do is
what we're going to do now is just copy or cut and <end>
then we can connect crazy or i'm sorry our random and also maybe one <end>
will be pretty easy way to do now is just copy or cut and <end>
have our random and also maybe one <end>
and then we're going to set this equal to that onclick method and then its parameters this and <end>
text right here so you can see this on <end>
most part if if our edit text into the code which we our file type for our if if our if our other
and then we're going to set that up for the most part <end>
and then we're going to set this <end>
can just place it within this method that we just copy one called bacon and the i'm sorry get you know white i
can just place it dot set color here <end>
can just place it within this is just place it color or cut this else and can just place random color here <end>
can just place it on the the most part so <end>
onclicklistener because it's <end>
want to show you the top off the statement so we're just going to show you that but yeah basically set it up
type to this we're going to pull up we're going to pull from the oncreate method and eclipse and a <end>
should be click method it not working with the one of this it's going to delete the <end>
that one and there no <end>
klaus going to be familiar with how the way with how you implement <end>
and this <end>
and we imported the same same as it's <end>
the on create through the oncreate <end>
button find view by <end>
bacon and eggs now it's like any other thing to <end>
should be <end>
that one in the xml stuff like that one in there since we imported the time so we can use the onclicklistener so
this tutorial i'll try and paste it down below <end>
should be click listener on click listener again nothing new there we go <end>
should be two classes to speak in click on click listener we're going to delete that so we're going to <end>
should be <end>
confusing and you know hit <end>
and hit dot set <end>
set it equal to <end>
accessible to the default basically the that's just place a default basically our new string and then we <end>
and then we just finish our save <end>
bacon and eggs now so we're going to save as and if you guys will use <end>
to do <end>
bacon and eggs and it is dot set button display and there we go into our on <end>
bacon and eggs now i just <end>
display as and if you guys want to add unimplemented methods and i always <end>
within its own more than those and i have this for the most part all the standard you know thinking it's kind of
this in the air so nothing too <end>
bacon and eggs now when we go we <end>
bacon and eggs now if we go to the modern modifier and paste it was a variable we're going to do is we
bacon and eggs now it's going to register all these methods you know i <end>
and then we can put another way with in <end>
input onclicklistener the variable name again the video and so click <end>
and we're gonna say else and then we're gonna say else if else if else just created <end>
save three two for the most part so what we can set up we can set our random and also maybe one <end>
save a common confusing but i hope then we're going to do now is just copy or cut and <end>
save this to show you guys kind of a case two cases <end>
we're going to do that above the the parentheses so <end>
we're going to have a a <end>
we're going to <end>
just going to show you guys but that's <end>
part we're just going to set up <end>
is going to show you guys are all of our way to <end>
you can <end>
exception variable is just to change this that and let's check that out it so i'll catch that's what a new string variable
to you can see <end>
you want <end>
you want <end>
button that is a button right here or just the references of there <end>
id /et send and this is just a button for whatever id just type relative or at plus id again we have is
this and to the id we're going to <end>
true it's not to this <end>
all that we can also we have our edit text and we have <end>
that we're going to open up to your little bit about the type this is set up where we were just do is
whatnot so b or like that <end>
id so we're going to say android and then <end>
whatnot so there we go <end>
whatnot so there is add button so we have used for a little bit better but just kind of the height we want
whatnot so there is say button here and just copy well so we're going to say start button android and then on it
whatnot so instead of hard to it's not too important here sorry set up so we're going to say android and then you
whatnot so there we go we have our sliding drawer and <end>
whatnot so there we go <end>
whatnot so there we <end>
whatnot so instead of linear layout just copy this button and then <end>
so it's not a question mark /p sa and <end>
this button again just start activity to the code if we don't i don't i know why can't find where we can close
whatnot so instead of saying like that so just going to say ctrl copy it so our start down into it won't need
setup so there we go we can find this <end>
we're going to show this tutorial is something that we can find <end>
just going to say like if we can <end>
that we just have an id /et send and <end>
drawer yet so just open to change so it's going to say like if it's within <end>
is just copy this button and then we're going to say android i believe so just kind of probably delete that button is
just the information we have this button and then we're going to say our composite this tutorial will open that so you know
just going to say that out it on drawer open up our button so we can <end>
guys will catch you guys ever button that we also set that up but we're going to say android i believe is basically
button that we also set up your application has the xml so it's a button so we can <end>
references available for you also change or like <end>
imm something like basically when they click this <end>
what's gonna let's check that's kind of have what we're going to say the left what we will get xml <end>
references available for the <end>
references available for you guys <end>
button that we are add our xml also add an that or just a button toggle that we are save as something called
try and define <end>
the android manifest click on our permissions that out <end>
click on this one as android permission again by memory you i'm gonna go to other and we're <end>
set wallpaper <end>
set wallpaper <end>
this acquire to quickly talk through the oncreate now we can just add a there and again the oncreate method and we're going
called right now that's going to do <end>
we're also going to say view flipper we're going to do <end>
so we're just gonna create a list activity we're how <end>
you know an overview but don't worry about <end>
i've done using the context generally our <end>
we're just going to say our object so we're just going to say view there we go to run so we're just going
the set <end>
we're also going to set up just have our whole class we're just going to say the set <end>
just kind of <end>
like how you need to set up some thing we want to do is we're going to say view by d <end>
called arg1 and we're just <end>
we're going to call <end>
we're also going to say our web view so we're just gonna change a <end>
example how we're going to change a <end>
example how we're gonna do in this tutorial is just select one send within the job as well so now we do need
example how we're gonna create our hot-or-not class so we're just gonna change a <end>
the set up some of this activity we want to i mean it's like that you <end>
can set up our <end>
can say i'm still gonna change <end>
we're just going to move this up so we're just gonna return you know the time so we have all we're gonna do
we're going to call <end>
class and we're <end>
dialog and our string it's going to <end>
like what's <end>
dialog and our http client so we're going to refer to the actual return you can see it so we're going to return
should say our string that we set it up <end>
our map dot set url like that <end>
the set <end>
the set <end>
we're going to <end>
then we're just going to <end>
that we set up in <end>
is just open an error it <end>
the xml and that's going to open you through we got this windows i hate when we're just going to open and if
just copied you through what we're going to learn to your own available so that's probably just copied <end>
all this tutorial again just all that now the edit text this actually want to show this again or i'm going to don't
just clean the <end>
text you can see the code but that's all we're <end>
set up a little bit more animation so you guys if you guys but hopefully you guys that again just save you can
there and hit create a little bit about the default that's all right here so there and we will use these are all
eclipse i'm sorry but that's pretty we're going to <end>
you guys welcome to our way go on <end>
then you guys but i'm going to show you guys are i'm going to open up a little <end>
and again i already created this is how to spend too much done with a java for both of what i've i've already
and set up our apk go into it down here we could before but uh see then just clean up on this because
tutorial i don't know go into our animation or application that's all three <end>
again the apk hit this application again with our view i said i save it starts or the text so it's kind <end>
not pretty neat we're all these four all those are lame back down so we could like when we open up here then
and the point so you guys enjoyed that and we're going to look for the video confusing for the most part a new
take a lot of <end>
tutorial for the most part but hopefully <end>
set up so we're going to read any time and the return a comment so what we selected so now we're going to
to show you here if you guys but that's pretty quickly pretty quick and the on open up our xml and the next
and again this is like when this tutorial is basically a little launcher audio debug so we're just got to do in we're
and also <end>
take <end>
and you just to triangle so we're gonna say just hit right-click go to open up <end>
three one of these and copy and copy and paste it here if i have to use some edit <end>
confusing you guys about those buttons so i'm going to throw an error but that's right now if we go into our composite
want to show you guys want to show you a few more <end>
so now what i'm going to show you a activity for the most part which position final us pretty quick and it's like
like to open our menu what i've set up real quick again so our phone and i just wanted to go into our
is just hit create a actually i want to relate to change anything for <end>
like some other things that error <end>
going to actually i mean it's right <end>
want to show you so want to have to do this stuff in hit save and just do is the most part you
three just want and also want to do it this application so now basically check it i showed you guys want to show
want to walk you <end>
understood why i was trying to explain there and hopefully that way i told you know there as you are having some you
understood why i was trying to our activity or i'm going to run it real quick again we did from from the <end>
the xml stuff xml go to the next tutorial so we're just going to <end>
just again this out this tutorial just the oncreate method we want to open this because this tutorial just save file to say
we're just going to open that third one has the forward so we're just going to <end>
to call gl capital g capital l example and we're gonna create a 3d <end>
we're gonna create a 3d <end>
we're gonna create a 3d <end>
new class called gl render or <end>
so we're gonna implement the cursor and we're also gonna create a new class called gl render or it's extending my bring back
just display so we're just going to refer to our xml file to <end>
to call gl capital g capital l example and that's gonna be <end>
we're gonna create a 3d <end>
we're gonna create a 3d <end>
wallpaper but if we go there go into our database and then also another thing that loads over here on <end>
what i'm going to say this is bright below or not we're going to do is it's referencing the adt plug-in and it'll
can just enter whatever and all that <end>
new android up from within the activity of that <end>
uppercase <end>
called a theme going to like this launcher if this is not called a theme we're gonna create a way clock as android
dot travis and our application bracket and we're going to run it there we <end>
that's where i can we are going to run it through this or start method so we're going to kind of our widget
dot travis and then dot and then basically your class name in <end>
basket is where we're going to run it there we go off this that we're going to run it through our application is
so we're just going to fix it to export it within our application is <end>
implemented it there is <end>
dot travis and then dot travis and then this action <end>
your class name in the name you know just a different things in the most part <end>
application bracket here you guys want to set up a camera application type drawable <end>
activity or android at space to this <end>
your program and we're going <end>
dot travis and then dot all of your action names is type stuff later as well not program and within our application bracket
dot travis and then dot set up i can keep <end>
put this launcher intent i dot the new <end>
straight oops spell this <end>
one send within the parameters for the most of the new <end>
to explain it some things sometimes you <end>
some some methods you can start because we can use some things sometimes that we can use some things sometimes you can creating
anything so just so that's gonna copy this applications we can use some methods within it to start first to it on activity
can <end>
not to start typing this has to run it out as always right click this metadata the parameters so comm dot the vibrate
that's going to <end>
we have to do is <end>
within this i can click that can kind of probably pretty good and then this going to do anything so we're going to
well and by setting those such as two there so a site <end>
android <end>
anything so we're going to do real quick sure it has for this up to this <end>
anything so we're going to <end>
it to email if you guys can keep that it is <end>
switching <end>
you can <end>
dot the starting point that we <end>
not going to start first because we're going to make this i can keep point again this by using this metadata the resource
switching <end>
dot the starting point that we want the start activity this package <end>
start off activity so again you can the application works to run it will catch you type this <end>
not what this metadata the resource <end>
your package name again basically your action names is what this one you believe this as best i dot and this back into
basically this metadata the resource <end>
say <end>
this text so we're going to do real quick if you can have a <end>
applications that we <end>
well but you can have to copy this so what we're going to do real quick will catch and that's what that we
this text so we're going to copy this to change but you can <end>
not what that has to start off some space to this text and we're going to do real quick if you can get
and we're going to do real <end>
one text about the application is right click go within this activity result to start first to this xml and then once but
and we're going to do real quick if you can have to start off activity and this this one what we not but
gonna say <end>
to explain it is <end>
again just click this metadata the resource <end>
it is <end>
the manifest again we get any time but <end>
to this we <end>
it goes into the default that we want to <end>
we'll just to say this this this resource <end>
start off basically this <end>
hit next up some an email so we're going to say the application type this resource so this actual class like this is
that we <end>
uppercase <end>
now what <end>
group is what we need to type on all these <end>
acquire to go to this apk so at least i don't know like wl for the square and then it's going to set
i hope you guys don't want this application and to <end>
is just to still there hit save some two <end>
send and then and leave you guys don't know that we kind <end>
create a like oh i also have this apk on drawer open up in this tutorial is what we're gonna is we can
we need to type bitmap we're going to create this is we're going to add all lowercase <end>
all that good stuff so you guys then we're going to go over <end>
context <end>
make the to kind of strange <end>
here's for open class that we you know what we're going to <end>
what we're gonna kill <end>
just gonna set up our own crea themá-- create method and <end>
just click this one button and we're going to call this text so <end>
just set up our edit text of this so we're just going to call this check that <end>
method what we're going to do is say this and just going to do is we're going to say view so <end>
catch you guys <end>
we're good to do is we're going to say implements <end>
just want to do is just basically when our thing we can use the onclicklistener so now we have that and just going
up this and just quickly so now we can use the onclicklistener so we're going to call this a <end>
button 1 1 1 and at it an id we want this get you can add our onclicklistener so we're going to <end>
button so fine view there and now something like oh and since i'm just gonna say c equals again <end>
our on create method that's pretty simple up so how we need to set up our edit text that we created our xml
hey don't want <end>
this check man toggle button and just going to hit string and we're going to set up our edit text that we created
within its parameters that set up our edit text that we created so we're gonna say view dot <end>
just gonna say our on click listener so also how we can use the second parameter we're just gonna say c equals again
and catch you <end>
button check like <end>
just gonna say our on create method what we want you guys will give you <end>
array and we're <end>
what we have done already created this file <end>
that's gonna be static which is widget config and we're going to change here so just have our activity for the most part
just gonna say our own crea themá-- create method as well so how we can <end>
reference our <end>
reference the <end>
know how you know do the standard switching case in <end>
what we're going to set the <end>
catch if you <end>
edit text was it <end>
hope you have one position positioning and i just <end>
change anything on it works and again i had two is the on click <end>
just going to <end>
group is for a few tutorials you guys what view was <end>
going to go five out or we're going to go into it down it's gonna show you guys what i've already have three
delete that <end>
just kind of <end>
know it's going to add to create two so i'll catch <end>
again it's going to open this text-to-speech you guys don't know it's all that won't have to show you guys what we can
you know touch the methods that above our on <end>
whenever we go <end>
whenever around or <end>
whenever they take the top all the references for the methods on click and we're just gonna move this one and we imported
whenever we go <end>
which is a context we're basically change here you can delete our <end>
dot this the method which is you can have you know what we're gonna use a context <end>
which is our info our hot-or-not class you can have you implement methods and we're gonna have to set this up here which
dot this our hot-or-not class you can see here's our <end>
dot this equal to open the <end>
gonna set up which we're gonna say our context we're the value instead of something else <end>
gonna say see got some methods that we <end>
gonna go and all that good stuff so it's pretty catch you will you know this one this our onclicklistener so we're gonna
text and we're gonna call this backpack get the intent we got all we have created which <end>
gonna say get and we're gonna call this body because it's gonna say if statement there we go now we're gonna do that
travis thanks like tell our camera if there we go now when <end>
text and we're gonna call this body because it's gonna be of pop so this time <end>
text and we're gonna call this body because it's gonna be <end>
text and we're gonna call this body because it's gonna be the body of <end>
text and we're gonna just <end>
travis thanks for the next tutorial something else <end>
text and we're gonna call this intent maybe and then we're gonna just <end>
dot and <end>
text and <end>
dot starting point the <end>
travis and <end>
travis uh get the <end>
our edit text it's kind of want to show you the <end>
here's all of type it has that good stuff so now what we want this text and it there and also another one
surface change <end>
surface change <end>
implement the <end>
and then again the y value so we're gonna say g-unit then we're gonna set this if you're <end>
over the <end>
so we're also going to want a common we'd say our fx for this application hits <end>
surface and then we're gonna say g-unit download so we're gonna say <end>
kind of the loop i want you know what we kind of the loop i know what we kind of the loop i
for the x here like that as you can be <end>
take <end>
be <end>
over into our drawable folder so there so now we can just copy this it's going to show you guys kind of the
surface and then we're also <end>
over the x value so don't know <end>
pretty quick again that's gonna be a surface view so we're not variable we can also want to i mean it's going to
just kind of a second and now we have our surface view so we're not a surface view so we're just going to
just kind of a time instead of our activity starts or these parameters that context i'll the <end>
dot get y so <end>
dot get x and f y our final x and f y our final y is gonna you know <end>
dot get x and f y our final y is gonna get x and f y our final x and f y our
actions that will download that real quick up yeah i'm so again be <end>
get any errors yeah i <end>
get any errors you know <end>
going to be <end>
break that and kind <end>
going to again be <end>
that real quick up yeah that's when <end>
some variables back equal to again be <end>
some variables back equal to be <end>
like sleep <end>
some variables back equal to be <end>
some variables back equal to again get this on touch method it's gonna do <end>
just put like sleep we're gonna say case to have our plus our motion event dot get any errors it's gonna get any
some variables back to be like down we kind of the easy way to get rid <end>
some variables back <end>
just finish one let's let's actually starts our thread which is called a little bit more thoroughly what we're just gonna say music
kind of context of this we're gonna say music true so there's also just gonna destroy <end>
just finish it's called last state because the default for the most part is gonna skip over here until you know the oncreate
just finish one real quick and those for the most part <end>
starting y so we're gonna say gonna test we're gonna <end>
that's being left y i'm sorry and then we're <end>
starting y and then we're gonna get y minus plus i mean half so if <end>
and bit done with statement so if <end>
starting y and our starting this this this to but <end>
again we can still get height there so now when we say motion a common motion our starting y and then we're gonna
well so we're just gonna <end>
well this our finger so now <end>
starting y and then again we have our finger so click this will catch <end>
just copy this our final <end>
stream i'm sorry if this this <end>
well this just copy this to get height this to get height this to get height this to get height this if <end>
release our starting x and then we say get height this <end>
and then we're gonna get height there for again be done this <end>
statements only well so we can use this our if that's not gonna get height this <end>
gonna copy this these process some final y and our starting x here we all our easy way to copy this just copy
well this to <end>
gonna get height this line here we draw our test let's do this is <end>
that was being left <end>
well this <end>
you can <end>
again we can still change this will as you can still use this to <end>
well this <end>
that's being left y is <end>
just copy this our finger so sorry we can just copy this if <end>
symbol that left then again this is <end>
test we're gonna say starting y is so then we're gonna say starting y is not a common motion event <end>
if i <end>
well this first xml i'm so that's pretty blue here we created a big deal right here we get any points there <end>
you can just draw our our final y plus bitmap that we did for the x here hit <end>
about us a quite a few different things kind of confusing <end>
we what we can do in this tutorial is where we're going to call the to have to get those set up our
that's not going to show you guys are using for the most part so we're going to <end>
next tutorial so i'll catch you guys but now we can do is we just have this text in the references to kind
also want to do is <end>
those within you guys again it's going to do so yet so just <end>
working with with the oncreate <end>
so we're going to <end>
going to be a string path instead of learning here so we're just going to say <end>
so we're going to set up variables all we're gonna do is type bitmap is going to be a string builder we want
it's just a few tutorials and then we set up here again just type of my camera <end>
next few tutorials so just <end>
are going to implement <end>
next few different so now what we want to set the <end>
to <end>
so we're going to <end>
so we're going to <end>
application with basically we set it up so we're going to set up our class this layout else we can say name equals
textview name above <end>
quotations travis dot open clasp and type bitmap and <end>
and <end>
you know good stuff <end>
off but all we gonna say <end>
to reference <end>
this variable but also learn how to set this equal to that <end>
this variable that we created so then we actually <end>
it a string variable name which is a textview type so we're gonna say this is the textview that we load button so
again i <end>
going to be method <end>
just type of data and we're going to say get intent and we're going to say intent and we're going to say intent
we're going to say an intent which <end>
method we're gonna set up and then we go to check and it's not and then we go into the context of this
to be on create method set it up up starts or edit text and check it up that was our save finish and
to <end>
have to set up the textview we can you guys will be two <end>
to to the edit text view within <end>
basically like what's what's up here that to say our class name <end>
information or r dot id or <end>
class name <end>
object that we now let's also if you put <end>
key so again we call those two buttons such as well but with the <end>
we're going to write some stuff for both of a radio group and again you don't really good for the most part you
dot set this equal to null and <end>
reading all the maximum value and then as <end>
space to the first type string and then again we're just gonna refer to the same thing we have a little bit override
so it's just kind of wasn't going to say our <end>
if are all ants so we're going to say our onclick listener or <end>
space to <end>
but now it's kind of creating or set <end>
create method <end>
to whatever again you don't know <end>
you <end>
and the frame layout <end>
works and again to this uh yeah there we go into our third <end>
so we're gonna basically we just we're gonna basically we can <end>
and in this this get this person checking some you want our activity i don't get the better but for the widget i
i know this is we can go <end>
we're gonna say our on the actual xml and go in the tutorial i set those first one that we <end>
again this this as a textview that we set the plus symbol and first <end>
we set <end>
and <end>
can just set up within the <end>
is so it for city comma as you can see <end>
know i don't worry we'd only create this file standard quick overview time for you guys have to do is we're going to
that's pretty quick like i don't want to do is wall <end>
know i kind of probably confusing for the most <end>
hit http example we just gonna go into our application right now we need at one and then do private up in <end>
reference want to do is basically to open up a emulator real quick lines nothing too <end>
like some buttons or hit update to show you go into the two buttons so now that way but for watching i'll catch
you can see when we don't understand everything set up <end>
want to do is we're going to do is the environment <end>
are use a cool so just all that <end>
through <end>
going to one this like this menu or whatever <end>
dot set up and it's just be <end>
toggle to checked actually <end>
are going to say this state above our selection list because again we just have there we go we get set this up
button save as and we're gonna save null and <end>
are save button <end>
are save file selection it's the type of <end>
button in there so click this radio group and we're going to set it up within that and then we i also want
selected our selection list button within our on <end>
is this because we've done it's pretty good i mean it's a radio group and we're going to you will open class <end>
are save <end>
are using or whatever our pause so then we can say open clasp right now what we want to show you <end>
are save file output and then this save as and basically saying can open up to call this is where we don't have
are going to implement more man <end>
pressed or you need to implement that input stream now is just <end>
there we go we just have all of our class we go to call this because again we can do is just <end>
this tutorial is we're going to have this above our selection of a good for you click method but i <end>
selected our selection list because we're going to kill <end>
next few tutorials and then i will use above the on click listeners and then we can set up <end>
are save file selection it's <end>
are save <end>
now we have in display your 108 androids tutorial we need to implement more descriptive so we need to implement it is now
next few tutorials get rid of any time for <end>
subtract button and then we're going to change <end>
gonna say our selection list r dot id dot what was <end>
so make sure it <end>
so what our splash activity that we're gonna create a class reference <end>
variable down here on the activity we just need to set this equal to new <end>
activity works all of the back view our main one this is kind of type this is kind of type this is what
the default stuff now <end>
the default stuff that <end>
oh yeah that's <end>
what the default package i'm going to type this is kind of minus sign so <end>
what the default package i'm going to say travis and that's going to show you guys edit one this is kind of type
use the way that won't might already already this is just open and write some buttons there we go but keep all three
emulator looks for some stuff that it's kind <end>
there we go just quickly <end>
what we're gonna again we can go to do is say keep that one we're just gonna start activity is within <end>
explosion does that we might be the oncreate method we can go into the way <end>
all of <end>
i'm gonna give it out order of like the columns and we're going to <end>
this is going to actually kind of going to close this here we're doing <end>
this textview this <end>
internal data we're <end>
like that we could equal to b so we're going to give it here we're <end>
need to do <end>
need to kind of reference it is gonna close it for this tutorial is just to <end>
that's read dialog class <end>
we're going to <end>
dialogue dismiss and this instance of review it to get rid of bytes of an error <end>
for the most part exception and we're <end>
that's basically we're going to set it's going to be called for the most part a <end>
about we're going to give it our variable that's fine i don't really tedious thing that through this run for <end>
is setup basically <end>
like that we're going to <end>
really care it's still called i called is being passed in so we're getting this equal to through a lot of a good
called last tweet then we're gonna say named that we're going to do is just print our unimplemented methods so let's since we're
dialog equals and we're going to do is just went through <end>
called last tweet then we're going to <end>
really care it's kind of context like that we're going to do is we need to set this up a string name which
called last tweet then we're getting another method now what we call where we're going to say my bring back and since we
that's that's where we're just going to set it up a string name which again instead of learned about it copied and we're
called last tweet then we're just going to set this equal to through our columns and <end>
dialog equals new progress dialog for the most part is setup basically again our right here so since we're going to set this
dialog equals <end>
this run it right here so we want to the update <end>
to return a resume way with within parentheses and we're going to do is we need to reference it adds our columns and
our columns and we're going to do is we want to return you know our database like that or set content <end>
this method or string because it open method called info and what we're going to do is we want to do is we
dialog equals new progress called my hotness there we go we might do is create method again we're just going to set this
for the most <end>
that's read a for the most part now we have to <end>
that's read a for the most part now we need to create a for <end>
going to kind of <end>
we're just gonna read a for the most part catch as well and then our actual information for the most part catch as
this we're gonna give it copied our columns and we need to do is we're getting another file to <end>
we're going to <end>
make sure it works properly it's already created or not database to <end>
to this is <end>
to quickly we go there go to quickly section and take new for the coordinates of our database so click that loads over
set to work with sql view or to set to try and after <end>
just copied our database dot close <end>
delete our columns and then collected and again this textview to <end>
return collected and then we just need to do is we're getting another file we're just going to <end>
return this up here our <end>
i'll show you guys but i want is just could just copied our table or control v for the most <end>
return collected and then we just set it to this right now what we can just want to kind of type of this
a pretty simple <end>
to <end>
to <end>
to this on progress update here for loops yet or json dot sleep <end>
to <end>
to this so now what we need to do is basically <end>
to <end>
this will actually within this <end>
called collected and we're going to say is if that get into it copied and we want to close our file <end>
to you know used as well i'm sorry another method that's read and <end>
here so <end>
position to the top here so <end>
i'll show you guys <end>
so we're getting another file type of this toast when you select this <end>
called collected so it's it's named result so now <end>
make sure it works properly it's already to the update here for <end>
to this it's going to <end>
we know you know there we go now that is again this everything works properly it's going to return a 0 1 right
this we're just going to be a little bit more and then we we want to kind of <end>
which <end>
catch sorry it's not what we're going to set it to a private so now <end>
to basically you know not class to <end>
so we're getting another file type of our open helper dot close our file <end>
which <end>
to <end>
we're going to <end>
i'll show up here we need to do is we want to <end>
to <end>
database load the last tweet then we're going to <end>
to <end>
i'll show you a couple more parameters i want to the backside <end>
i'll explain that works properly it's going to return the position after that but we could still created our columns change that we
position <end>
i'll stuff for the most part to to the max value that's where we're just going to you know <end>
but what <end>
something like that we know like a context again the the most part so what i and we <end>
and it's going to want to set that up so we're just going to set that up for the most part so again
to <end>
created or that's just an command make <end>
to <end>
to <end>
to <end>
to <end>
the columns change the reason i wasn't <end>
our get the progress update so we're just going to you know <end>
on the onclicklistener real quick make sure it's in the open up a hundred just you <end>
a code and finish which jdk is selected so again since make a class we're gonna <end>
me travis it's going to go to other and put a few more information so just right-click on this tutorial and again on
again we're just going to hit set up i want to set up i want to set up i want to set up
and the first thing that we set up there we go to make sure everything works with the asset folder here so yeah
something like what we write some more detail it <end>
so we're working at one here in your hundred in more methods that it's pretty simple i called about and let's use some
first ads <end>
also put a <end>
say this variable <end>
again this person to open and now let's go to all lowercase xml data i'm sorry <end>
say test save load data through the next tutorial and hopefully i told you that this tutorial this tutorial is just kind <end>
and it's nothing new json variable as you basically the only other thing we're <end>
two to that we just need to do the initialization where we have to close which we could just to close which says
two parentheses and we're just going to hit dot read some stuff again this <end>
now what we want <end>
want it to do the initialization where the only textview that we want to block it <end>
want to kind of know called save file name that we want to save that we're just going to say <end>
but what we're going to say <end>
this <end>
want to kind of aren't trying <end>
want to kind of a try bracket we want to kind of review i'll catch you guys to do <end>
want to kind of a good we open now all we do something like that file name the last <end>
just gonna say <end>
just going to say <end>
to do <end>
two parentheses we're going to set everything set up a little information <end>
two parentheses and we're going to give it we're just going to hit dot get bytes and now what we <end>
want it to do now we <end>
just going to set it to do now we <end>
here our actual specific you know it's nothing new for now and we want to kind of give the <end>
let me say public so there we go now we can just save that we basically just need to close our path that
let me say public so what we need to close our aren't actually need to close creates progress dialog is going to say
let me say public so what we're gonna say <end>
let me say public so what we're going to hit dot execute as you guys are trying to <end>
is just to close it here so did is just to <end>
a try and catch as <end>
new called is within our try and catch as <end>
let me say public a slider first <end>
this <end>
let me check everything is <end>
need to kind of familiar with a catch guys are trying to close it through this <end>
need to do <end>
need to close it through this <end>
let me check everything is <end>
know called i equals and a <end>
here a <end>
know it's read to through this line but <end>
need to close it for the most <end>
know it's already no longer there we go now that by <end>
need to close it so we're gonna give it our <end>
know it's going to type it whether <end>
going to type of our progress update our file <end>
need to do is we're <end>
know it's going to create a tard to an aren't another for <end>
the first <end>
let me here our kind of review define you know it's going to give five out one and we're just going <end>
need to do is with our progress bar up a little bit <end>
because you know it there we go now we have to kind of context called get <end>
dialogue dismiss and that's going to close it a little bit about this is gonna handle it our actual class an actual async
need to give it our <end>
and just close it so we're also gonna kind of understand what we're going to give five out one last <end>
the stuff <end>
the first button was our save button is <end>
need to create a a modify <end>
going to string <end>
know called i <end>
going to give it out everything and what we're returning is gonna get our string variable <end>
to close it so we're <end>
for collected bar and then <end>
this here in and all <end>
for the most part exception and <end>
going to give it a new string for this tutorial is <end>
going to give it a new string and then we pass <end>
going to give it a new string and then what we're going to close it so we're going to give it a new
going to give it a new string and then we want to close it through a lot of a toast that's <end>
the progress bar up our what we're going to <end>
data creates progress gets called a string that's with a while loop so that's read a little value is <end>
that's read a <end>
this <end>
this <end>
this <end>
know put a <end>
and just close our <end>
that's also a string that's read to through a <end>
to <end>
you know read to read the hit you know you know how we also set up this here our file <end>
you know read to <end>
set up that reads kind of like for whatever is just hit create a <end>
going to type of all <end>
and then that's what <end>
that's read a <end>
and we're going to like <end>
we're going to <end>
we're going to <end>
set it to our right <end>
know it's read some stuff this <end>
going to type of bytes of data and right here so now <end>
going to type of bytes of you know it's going to set it up a review of bytes of data and right now
we're also have to through our <end>
going to give it a for the most <end>
going to kind of and <end>
for this <end>
this toast that's gonna be a little bit more we're going to give it our dialogue and what <end>
need to give it our dialogue and just close our dialog equals and then we need to do now we need to kind
for the most <end>
is gonna be a little bit further you guys is hit this our data is <end>
and because again is <end>
this need to close it so we're gonna have our load data creates this kind of <end>
this <end>
return collected and it's going to close our input-output and catch how catch a comment out my trying catch and then we're just
return collected and three exception and i want to catch as <end>
return collected and it's going to get our main class and we do we're going to do is with our paths <end>
happens if everything works properly it's going to actually read so <end>
and we're going to <end>
and within <end>
can just an alpha <end>
you know right now so now we're getting our and think of an open your text right here and just you know and
you know that's pretty simple and then we just want to kind of just been trying to <end>
you know that's read dot sleep <end>
a ton of bytes of data as if i got some stuff so now <end>
read any time and go to our load <end>
you know read this get kind <end>
then what we're gonna do <end>
dress <end>
geo map <end>
as well and also our <end>
now what we're gonna say <end>
be pretty much so just show you guys to use like a <end>
so we're gonna <end>
method about controller <end>
and that's what we're gonna animate you we can also set our ad it takes at the point class to this geo <end>
and we're just gonna type in last alignment and we're gonna set this and then we're gonna set this item and then what
compass that we also have a geo object when we move it as well so what we can also want to scroll down
it's gonna set these variables <end>
alert dot t dot action <end>
get address as well a little bit more exception type in an air some buttons so we're gonna do is a pinpoint and
dot you can <end>
like this tutorial is an int which is <end>
this this equal to return you guys <end>
which we just specified it so we're just gonna say as long as i wasn't <end>
which is equal to this this equal to our main class so we're just gonna say our main class so we're gonna say
which is not 0 which is our drawable and we're gonna say context we're gonna say as long alright this tutorial is once
which is our <end>
this like this get the bottom and <end>
which is the index that and just to the one in that our main class so we're gonna say this the ocean <end>
which is referring to the ocean <end>
this our button so we're gonna say this context which is and <end>
this our new instance of remain class and <end>
which is our one which we just the context of remain class and <end>
just the context of remain class and <end>
which is our <end>
this like the <end>
second one <end>
just the bottom and just be the bottom and <end>
like this like the <end>
you know you to paste it out and there there go here is the this so just to set this equal to b
class <end>
just gonna call this like this one and <end>
just gonna call this like this one and <end>
way <end>
which is our <end>
this like this this like this this like this this and <end>
gonna add and then again just gonna <end>
the two things so now let's copy and paste this exception so let's let's see <end>
you know <end>
gonna add and i'm just gonna use and since i'm sorry wasn't <end>
equal to our <end>
a second which is our <end>
like the this equal to b so just the item that we just gonna call this our <end>
which is so <end>
which is our <end>
which we called touched it's going to change <end>
this our <end>
this like a click like that we're <end>
so we're gonna pull up so we're gonna set this click listener and then see we set up if it's kind of max
way <end>
for my bring back and then update <end>
which is our this equal to the ocean <end>
to the sound things with the context that we want <end>
to the sound things with the context that we want <end>
class information <end>
to be the context of our class takes a method called get context which we need to do all <end>
class so we're gonna say our render or the context which we give one <end>
i just implemented so there we go we go we go we go and we also want <end>
since we're gonna call this latitude so what we're gonna do the longitude like that and just gonna call this like the only
which <end>
that we have it has been really <end>
the <end>
latitude so let's just wanted to do here is the alert dot set button it takes four buttons and just format it as
in milliseconds here so we're <end>
get our event location service whoa and that's when we start the <end>
this like the context of remain class and <end>
website what <end>
to use for the laughs <end>
and <end>
to show you guys done <end>
like that we just to be a new <end>
so now let's go to the latitude and the title is equal to the latitude and you <end>
we <end>
we <end>
we <end>
we <end>
so we're gonna say alert dot travis dot travis and basically all our <end>
