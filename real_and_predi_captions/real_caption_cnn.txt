<start> imports and you know also for this class we're going to need a <end>
<start> imports and you know also for this class we're going to need a <end>
<start> imports and you know also for this class we're going to need a <end>
<start> real quickly and this one's going to be public so other classes can use <end>
<start> real quickly and this one's going to be public so other classes can use <end>
<start> constructor again when we create a constructor has to be the same name <end>
<start> constructor again when we create a constructor has to be the same name <end>
<start> constructor again when we create a constructor has to be the same name <end>
<start> our class name so triangle e^x and this isn't gonna have any parameters <end>
<start> our class name so triangle e^x and this isn't gonna have any parameters <end>
<start> our class name so triangle e^x and this isn't gonna have any parameters <end>
<start> it we could probably grow on that later it we could probably grow on that <end>
<start> we're using how many kilobytes or bytes that we're using and for each float <end>
<start> we're using how many kilobytes or bytes that we're using and for each float <end>
<start> within it so we're gonna have to locate 24 bytes within our buffer so what <end>
<start> gonna do is we're gonna set up our byte buffer i know it's kind of <end>
<start> gonna do is we're gonna set up our byte buffer i know it's kind of <end>
<start> gonna do is we're gonna set up our byte buffer i know it's kind of <end>
<start> maybe a little bit for now but we're just gonna set up that byte buffer <end>
<start> gonna call this be buff gonna set this equal to the byte buffer class and <end>
<start> gonna call this be buff gonna set this equal to the byte buffer class and <end>
<start> gonna call this be buff gonna set this equal to the byte buffer class and <end>
<start> gonna call this be buff gonna set this equal to the byte buffer class and <end>
<start> gonna call this be buff gonna set this equal to the byte buffer class and <end>
<start> the method dot of locate direct and again we just have to it takes an int <end>
<start> like i said it's 24 but in case we add you know more vertices to this <end>
<start> relate to our list that we created called vertices and we're just gonna <end>
<start> relate to our list that we created called vertices and we're just gonna <end>
<start> relate to our list that we created called vertices and we're just gonna <end>
<start> now there's six so that's gonna be six and for each float we use 4 bytes <end>
<start> we're just gonna times this by four so that's basically telling our buffer <end>
<start> we're just gonna times this by four so that's basically telling our buffer <end>
<start> within our byte buffer and so we're just gonna say be buff dot order and you <end>
<start> within our byte buffer and so we're just gonna say be buff dot order and you <end>
<start> know what we're gonna say is or we're gonna relate to the byte order class <end>
<start> know what we're gonna say is or we're gonna relate to the byte order class <end>
<start> know what we're gonna say is or we're gonna relate to the byte order class <end>
<start> know what we're gonna say is or we're gonna relate to the byte order class <end>
<start> byte order and we're just gonna say dot native order and you know that's <end>
<start> do is we need to relate to this vertice buffer and you know kind of make <end>
<start> say we're gonna set this equal to our byte buffer which we call b buff dot <end>
<start> say we're gonna set this equal to our byte buffer which we call b buff dot <end>
<start> say we're gonna set this equal to our byte buffer which we call b buff dot <end>
<start> say we're gonna set this equal to our byte buffer which we call b buff dot <end>
<start> say we're gonna set this equal to our byte buffer which we call b buff dot <end>
<start> working with floats as for now and we're just gonna save vert buffer or vert <end>
<start> working with floats as for now and we're just gonna save vert buffer or vert <end>
<start> dot put and then we have to put our float array in there which we <end>
<start> dot put and then we have to put our float array in there which we <end>
<start> dot put and then we have to put our float array in there which we <end>
<start> dot put and then we have to put our float array in there which we <end>
<start> vertices and then all we're going to do is we're going to relate to our <end>
<start> buff and tell what position we want to <end>
<start> buff and tell what position we want to <end>
<start> buff and tell what position we want to <end>
<start> buff and tell what position we want to <end>
<start> so vert buff dot position and we're gonna start at position zero or the <end>
<start> so vert buff dot position and we're gonna start at position zero or the <end>
<start> of our triangle so that's pretty much it for this tutorial i know it's kind <end>
<start> confusing as of now but it will it'll sink in what we're actually doing in <end>
<start> confusing as of now but it will it'll sink in what we're actually doing in <end>
<start> animation and now we're going to do that is just basically set up an int let's <end>
<start> animation and now we're going to do that is just basically set up an int let's <end>
<start> animation and now we're going to do that is just basically set up an int let's <end>
<start> a float yeah float that's something new and we're just going to call <end>
<start> a float yeah float that's something new and we're just going to call <end>
<start> that's just how things work i guess changing y we're going to set it <end>
<start> that's just how things work i guess changing y we're going to set it <end>
<start> that's just how things work i guess changing y we're going to set it <end>
<start> to b 0 now what we can do is instead of having this 0 here we can put in <end>
<start> to b 0 now what we can do is instead of having this 0 here we can put in <end>
<start> to b 0 now what we can do is instead of having this 0 here we can put in <end>
<start> variable such as our changing y and at the moment it's still 0 so it's <end>
<start> variable such as our changing y and at the moment it's still 0 so it's <end>
<start> going to change anything but what we can do is we can now add change <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> basically this on draw is going to be looping so we can say changing <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> actually let's do if changing y is less than a canvas dot get height then <end>
<start> going to add to it so it's going to get bigger and bigger until it gets to <end>
<start> going to add to it so it's going to get bigger and bigger until it gets to <end>
<start> know the size of our canvas so we're going to add like what 10 10 pixels <end>
<start> know the size of our canvas so we're going to add like what 10 10 pixels <end>
<start> know the size of our canvas so we're going to add like what 10 10 pixels <end>
<start> something and if that's not the case if it's bigger than the canvas and <end>
<start> going to say else we're just going to start it over changing y is equal to <end>
<start> going to say else we're just going to start it over changing y is equal to <end>
<start> going to say else we're just going to start it over changing y is equal to <end>
<start> going to say else we're just going to start it over changing y is equal to <end>
<start> going to say else we're just going to start it over changing y is equal to <end>
<start> so it's basically going to start it over and now if we run this as well <end>
<start> on draw we need to do one method called <end>
<start> on draw we need to do one method called <end>
<start> on draw we need to do one method called <end>
<start> on draw we need to do one method called <end>
<start> gonna be like hey man you draw the background white it's gonna be like <end>
<start> it's like hey man do you you put the ball on there <end>
<start> that's not the case just restart it so that's going to cause it go into a <end>
<start> save that and run it now and you know this is going to be our first <end>
<start> save that and run it now and you know this is going to be our first <end>
<start> save that and run it now and you know this is going to be our first <end>
<start> animation because you know our changing y is zero and then it's going to <end>
<start> to start over but our changing y variable will now be 10 which will <end>
<start> to start over but our changing y variable will now be 10 which will <end>
<start> it go a little bit lower on the campus until it gets to the point that <end>
<start> number is so high it's the same or bigger a greater value than the <end>
<start> number is so high it's the same or bigger a greater value than the <end>
<start> of our canvas and then it's going to you know start back at zero so i mean <end>
<start> of our canvas and then it's going to you know start back at zero so i mean <end>
<start> something else to our screen here so after we've changed our value <end>
<start> something else to our screen here so after we've changed our value <end>
<start> let's add a box or a rectangle so what we're going to do is we're going to <end>
<start> going to say middle rec for like the because we're going to put <end>
<start> going to say middle rec for like the because we're going to put <end>
<start> going to say middle rec for like the because we're going to put <end>
<start> rectangle in the middle for the most part so we need to import a <end>
<start> and what we're going to do we're going to say new rec and that's <end>
<start> and what we're going to do we're going to say new rec and that's <end>
<start> and what we're going to do we're going to say new rec and that's <end>
<start> except this time we were passing anything in so the constructor of <end>
<start> you're kind of getting this constructor and this new business going on <end>
<start> define the rectangle so what we can do is say middle <end>
<start> define the rectangle so what we can do is say middle <end>
<start> define the rectangle so what we can do is say middle <end>
<start> define the rectangle so what we can do is say middle <end>
<start> and we say dot set and as you can see we have a left top right bottom so let's <end>
<start> and we say dot set and as you can see we have a left top right bottom so let's <end>
<start> and we say dot set and as you can see we have a left top right bottom so let's <end>
<start> our left as zero our rights going to be canvas dot get wit and then our <end>
<start> our left as zero our rights going to be canvas dot get wit and then our <end>
<start> our left as zero our rights going to be canvas dot get wit and then our <end>
<start> let's say just guess on this let's just do like four hundred and four <end>
<start> say five hundred so it's going to be just like let's do five fifty so <end>
<start> say five hundred so it's going to be just like let's do five fifty so <end>
<start> set up a certain color so what we can do is something like a paint which is <end>
<start> refer to the color class and then do blue because i'm sure they have <end>
<start> refer to the color class and then do blue because i'm sure they have <end>
<start> we're going to say you know what new paint i'm sorry space out there <end>
<start> we're going to say you know what new paint i'm sorry space out there <end>
<start> we're going to say you know what new paint i'm sorry space out there <end>
<start> and then we can say our blue dot set set color to again color dot <end>
<start> and then we can say our blue dot set set color to again color dot <end>
<start> and then we can say our blue dot set set color to again color dot <end>
<start> and then we can say our blue dot set set color to again color dot <end>
<start> and then we can say our blue dot set set color to again color dot <end>
<start> and then we can say our blue dot set set color to again color dot <end>
<start> other stuff in the next tutorial because this one's getting kind of lengthy <end>
<start> all we have to do now is we got to paint them onto our canvas so we need to <end>
<start> all we have to do now is we got to paint them onto our canvas so we need to <end>
<start> all we have to do now is we got to paint them onto our canvas so we need to <end>
<start> all we have to do now is we got to paint them onto our canvas so we need to <end>
<start> to our canvas and say dot draw rec and then it takes a rectangle and a <end>
<start> to our canvas and say dot draw rec and then it takes a rectangle and a <end>
<start> to our canvas and say dot draw rec and then it takes a rectangle and a <end>
<start> within its parameters so we're going to say a rectangle which we just <end>
<start> was middle rectangle or middle rect and our paint was called our blue so <end>
<start> was middle rectangle or middle rect and our paint was called our blue so <end>
<start> blue and let's see how that looks so i'm just gonna save this and run this <end>
<start> blue and let's see how that looks so i'm just gonna save this and run this <end>
<start> none of those tutorials getting kind of long and then we'll probably do <end>
<start> none of those tutorials getting kind of long and then we'll probably do <end>
<start> one more tutorial before we actually get into the way that you guys want to do <end>
<start> because right now we're extending the view class and you that's <end>
<start> necessarily the way you want to do animations and such so i'll probably <end>
<start> inflator for the most part before we're going to get before getting into <end>
<start> like if the first option was selected it's going to have the value of one <end>
<start> what they're going to see once they select one of those options it's <end>
<start> our class that's going to be your preferences so we're going to <end>
<start> our class that's going to be your preferences so we're going to <end>
<start> click on our folder go to new class and we're going to call this prefs <end>
<start> preferences preferences and uh there we go now this is going to be a <end>
<start> different um if you guys remember right at the beginning where i <end>
<start> most part but this time what we have been doing is extending activity but <end>
<start> confusing because this is only second time we've done it and <end>
<start> confusing because this is only second time we've done it and <end>
<start> something called preference activity because we're working with <end>
<start> and we're going to still have all the access to our activity class so <end>
<start> and we're going to still have all the access to our activity class so <end>
<start> and we're going to still have all the access to our activity class so <end>
<start> and we're going to still have all the access to our activity class so <end>
<start> and we're going to still have all the access to our activity class so <end>
<start> going to right-click around so i just hover over that and import it and <end>
<start> going to right-click around so i just hover over that and import it and <end>
<start> have inactivity when we want to have on create method so we're going to going <end>
<start> right click source override implement methods and as you can see there is <end>
<start> right click source override implement methods and as you can see there is <end>
<start> right click source override implement methods and as you can see there is <end>
<start> right click source override implement methods and as you can see there is <end>
<start> of our choices again we can say on create bundle which is what we want <end>
<start> instead of saying set content view we're basically going to setup our <end>
<start> instead of saying set content view we're basically going to setup our <end>
<start> instead of saying set content view we're basically going to setup our <end>
<start> preferences tab so we're just going to say add preference and this again is <end>
<start> preferences tab so we're just going to say add preference and this again is <end>
<start> method a method so you guys have to use this method add preferences <end>
<start> method a method so you guys have to use this method add preferences <end>
<start> method a method so you guys have to use this method add preferences <end>
<start> resource and then we're going to access where we set up our preferences <end>
<start> resource and then we're going to access where we set up our preferences <end>
<start> resource and then we're going to access where we set up our preferences <end>
<start> resource and then we're going to access where we set up our preferences <end>
<start> resource and then we're going to access where we set up our preferences <end>
<start> was our dot xml dot prefs so there we go we basically set up <end>
<start> was our dot xml dot prefs so there we go we basically set up <end>
<start> was our dot xml dot prefs so there we go we basically set up <end>
<start> preferences and now what we have to do is basically open this activity so <end>
<start> preferences and now what we have to do is basically open this activity so <end>
<start> we're going to do is go back into our menu class where we set up our <end>
<start> inflator and our menu options we have this one if the preferences was <end>
<start> inflator and our menu options we have this one if the preferences was <end>
<start> inflator and our menu options we have this one if the preferences was <end>
<start> resource that other item i'm sorry which was called exit so there we <end>
<start> that's going to open our preferences and also our exit which is going to <end>
<start> finish application because at this time only the menu class will be running <end>
<start> finish as well so we want to have a option for them just the <end>
<start> finish as well so we want to have a option for them just the <end>
<start> set up our intent so we're going to say intent i actually i'm just going to <end>
<start> set up our intent so we're going to say intent i actually i'm just going to <end>
<start> and paste this nothing too new for the most part again we're going to call <end>
<start> and paste this nothing too new for the most part again we're going to call <end>
<start> one prefs right here all upcase and then all we have to do is set up <end>
<start> one prefs right here all upcase and then all we have to do is set up <end>
<start> one prefs right here all upcase and then all we have to do is set up <end>
<start> preference activity within our within our java or within our android <end>
<start> preference activity within our within our java or within our android <end>
<start> also we need to change this to like something like p will say <end>
<start> so then what we have to do again is just set up our preference activity that <end>
<start> so then what we have to do again is just set up our preference activity that <end>
<start> set up that we created for the most part so i'm going to copy one of <end>
<start> set up that we created for the most part so i'm going to copy one of <end>
<start> default ones and change it to prefs again that's the action name that <end>
<start> basically we have a preferences set up we're going to run the application <end>
<start> sure it works and i'll show you guys how we can use those preferences <end>
<start> sure it works and i'll show you guys how we can use those preferences <end>
<start> sure it works and i'll show you guys how we can use those preferences <end>
<start> right now we can select them it'll save but they aren't doing anything so we <end>
<start> access those preferences within a class of some sort we're within an activity <end>
<start> that's what i'm going to show you guys probably in the next tutorial <end>
<start> that's what i'm going to show you guys probably in the next tutorial <end>
<start> that's what i'm going to show you guys probably in the next tutorial <end>
<start> that's what i'm going to show you guys probably in the next tutorial <end>
<start> you know the splash activity the sound on it is driving me insane <end>
<start> you know the splash activity the sound on it is driving me insane <end>
<start> our menu hit preferences and as you can see we have our default value of <end>
<start> our menu hit preferences and as you can see we have our default value of <end>
<start> checkbox as checked let's uncheck that just to make sure <end>
<start> activity works we're going to type in a name travis as you guys excuse me as <end>
<start> that's our title and we also have the summary right <end>
<start> that's what we were setting up and then here's our list preference that we <end>
<start> up auction one two three or four run head three and then as we check it <end>
<start> up auction one two three or four run head three and then as we check it <end>
<start> you can see three is selected let's go hitter menu hit exit which will exit <end>
<start> you can see three is selected let's go hitter menu hit exit which will exit <end>
<start> you can see three is selected let's go hitter menu hit exit which will exit <end>
<start> of a program let's open it back up and see if those preferences saved so <end>
<start> of a program let's open it back up and see if those preferences saved so <end>
<start> of a program let's open it back up and see if those preferences saved so <end>
<start> back to preferences edit text has travis saved within our application <end>
<start> back to preferences edit text has travis saved within our application <end>
<start> back to preferences edit text has travis saved within our application <end>
<start> checkbox is unchecked and also option three is selected even after we exit <end>
<start> checkbox is unchecked and also option three is selected even after we exit <end>
<start> what's up guys welcome your 70 second android tutorial for the new boss <end>
<start> and grab the entire class and cut it so don't grab your imports or your <end>
<start> and grab the entire class and cut it so don't grab your imports or your <end>
<start> and grab the entire class and cut it so don't grab your imports or your <end>
<start> but everything else grab that cut it and then go into the graphics surface <end>
<start> and we're gonna paste that within you know within our graphics class here <end>
<start> and we're gonna paste that within you know within our graphics class here <end>
<start> and we're gonna paste that within you know within our graphics class here <end>
<start> control v and paste the reason why you did that is because we set up these <end>
<start> control v and paste the reason why you did that is because we set up these <end>
<start> control v and paste the reason why you did that is because we set up these <end>
<start> and y values within this class and we and you know we said that this <end>
<start> and y values within this class and we and you know we said that this <end>
<start> class the graphic surface class can use those values so if we paste that <end>
<start> class within this class we can still have access to the x and y which is <end>
<start> class within this class we can still have access to the x and y which is <end>
<start> class within this class we can still have access to the x and y which is <end>
<start> class within this class we can still have access to the x and y which is <end>
<start> we're gonna want another thing we can do is actually you know delete this <end>
<start> bring back surface class just to do something a little different i'm <end>
<start> a class within another class is another example or no reason i did this and <end>
<start> a class within another class is another example or no reason i did this and <end>
<start> a class within another class is another example or no reason i did this and <end>
<start> a class within another class is another example or no reason i did this and <end>
<start> a class within another class is another example or no reason i did this and <end>
<start> there we go now what we need to do is since we defined what our x and y <end>
<start> there we go now what we need to do is since we defined what our x and y <end>
<start> going to be when we click when we click our view for the most part we want <end>
<start> going to be when we click when we click our view for the most part we want <end>
<start> going to be when we click when we click our view for the most part we want <end>
<start> here and after our background after we draw our background and we're gonna <end>
<start> here and after our background after we draw our background and we're gonna <end>
<start> here and after our background after we draw our background and we're gonna <end>
<start> if expression mark or exclamation mark can't i'm sorry x exclamation <end>
<start> if expression mark or exclamation mark can't i'm sorry x exclamation <end>
<start> if expression mark or exclamation mark can't i'm sorry x exclamation <end>
<start> if expression mark or exclamation mark can't i'm sorry x exclamation <end>
<start> if expression mark or exclamation mark can't i'm sorry x exclamation <end>
<start> if expression mark or exclamation mark can't i'm sorry x exclamation <end>
<start> equals 0 so basically this is checking if x is not equal to 0 do whatever <end>
<start> things that's looking for so we're gonna say and and to do with the and <end>
<start> things that's looking for so we're gonna say and and to do with the and <end>
<start> - and signs and then we say why is not equal to zero as well because again <end>
<start> - and signs and then we say why is not equal to zero as well because again <end>
<start> - and signs and then we say why is not equal to zero as well because again <end>
<start> set x and y equal to b0 right at the beginning and we don't want to draw <end>
<start> gonna set up our bitmap this kind of review we're gonna call this like <end>
<start> gonna set up our bitmap this kind of review we're gonna call this like <end>
<start> gonna set up our bitmap this kind of review we're gonna call this like <end>
<start> gonna set up our bitmap this kind of review we're gonna call this like <end>
<start> gonna set up our bitmap this kind of review we're gonna call this like <end>
<start> something like that and import bitmap and then again from the bitmap factory <end>
<start> something like that and import bitmap and then again from the bitmap factory <end>
<start> something like that and import bitmap and then again from the bitmap factory <end>
<start> something like that and import bitmap and then again from the bitmap factory <end>
<start> something like that and import bitmap and then again from the bitmap factory <end>
<start> something like that and import bitmap and then again from the bitmap factory <end>
<start> can't spell dots decode resource and then for again for this one we say <end>
<start> can't spell dots decode resource and then for again for this one we say <end>
<start> can't spell dots decode resource and then for again for this one we say <end>
<start> second parameter it's our actual bitmap that won't want to decode so we're <end>
<start> second parameter it's our actual bitmap that won't want to decode so we're <end>
<start> second parameter it's our actual bitmap that won't want to decode so we're <end>
<start> second parameter it's our actual bitmap that won't want to decode so we're <end>
<start> say our drawable dot green ball and then finish off our statement so now that <end>
<start> have our bitmap set up all we have to do is draw it to the canvas so we're <end>
<start> have our bitmap set up all we have to do is draw it to the canvas so we're <end>
<start> say our canvas name and then we're gonna say draw bitmap and we're gonna use <end>
<start> clicking that and then for a bitmap we're gonna use the tests that we <end>
<start> set up here to the left we're going to use our x value again that's going to <end>
<start> set up here to the left we're going to use our x value again that's going to <end>
<start> above and then for the top it's gonna be the y value and for the paint it's <end>
<start> be null now we basically have everything set up for our little for our <end>
<start> be null now we basically have everything set up for our little for our <end>
<start> little you know painting to the canvas here so i'm just gonna run it make <end>
<start> little you know painting to the canvas here so i'm just gonna run it make <end>
<start> little you know painting to the canvas here so i'm just gonna run it make <end>
<start> everything works the most part and and in the next tutorial we're just <end>
<start> everything works the most part and and in the next tutorial we're just <end>
<start> find tune everything i'll show you some of the problems that we're having <end>
<start> find tune everything i'll show you some of the problems that we're having <end>
<start> now within the way this application setup but i just want to show you <end>
<start> animation by extending the view class so let's do that real quick and now what <end>
<start> this is a legitimate or this is a actual method so you might want to type <end>
<start> this is a legitimate or this is a actual method so you might want to type <end>
<start> override and then actually let's see if they have see if they have the easy <end>
<start> override and then actually let's see if they have see if they have the easy <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> to put this in so right click source implement methods and let's see if <end>
<start> parameters hit ok and there we go we have our <end>
<start> parameters hit ok and there we go we have our <end>
<start> background or you know what we're working with so we're going to <end>
<start> canvas because that's what they labeled it here so whatever this variable <end>
<start> canvas because that's what they labeled it here so whatever this variable <end>
<start> is you type that in the hit dot excuse me and we can do some draw methods <end>
<start> is you type that in the hit dot excuse me and we can do some draw methods <end>
<start> is you type that in the hit dot excuse me and we can do some draw methods <end>
<start> there because you know we want to paint onto our canvas so to say so we can <end>
<start> something like draw color let's click that method and then we're going to <end>
<start> refer to the color class because again they have some defined colors for <end>
<start> already so we're going to say color referring to the color class and <end>
<start> already so we're going to say color referring to the color class and <end>
<start> know we can pick a color from here so let's do like <end>
<start> know we can pick a color from here so let's do like <end>
<start> know we can pick a color from here so let's do like <end>
<start> know we can pick a color from here so let's do like <end>
<start> all uppercase white like that and a scoop now our activity is going to <end>
<start> all uppercase white like that and a scoop now our activity is going to <end>
<start> a white background and let's also add a bitmap that we created within <end>
<start> constructor because again any time this this class is accessed it's going to <end>
<start> constructor because again any time this this class is accessed it's going to <end>
<start> through the constructor first basically our constructor you can kind of think <end>
<start> it as our on create method for this for this class so think of it that way <end>
<start> it as our on create method for this for this class so think of it that way <end>
<start> basically we set up our our bitmap already so all we have to do is say <end>
<start> basically we set up our our bitmap already so all we have to do is say <end>
<start> basically we set up our our bitmap already so all we have to do is say <end>
<start> bitmap and then we have some different parameters as you can see we're going <end>
<start> paint so click that and we're going to fill these <end>
<start> then basically my emulator pulled up no okay so let's say this let's say this <end>
<start> then basically my emulator pulled up no okay so let's say this let's say this <end>
<start> my screen i know it's not really same shape as a screen let me try and get <end>
<start> same shape basically when our emulator starts it's you know it has a width <end>
<start> same shape basically when our emulator starts it's you know it has a width <end>
<start> i don't know exactly you know center is basically <end>
<start> our ball that we included let me pull this up and as right here this is a <end>
<start> know it's it's transparent background but that's about the shape of my <end>
<start> right there that's being selected and when withdrawals it's going to also <end>
<start> right there that's being selected and when withdrawals it's going to also <end>
<start> from this top left corner so we need to keep that in mind as well and i'll <end>
<start> from this top left corner so we need to keep that in mind as well and i'll <end>
<start> from this top left corner so we need to keep that in mind as well and i'll <end>
<start> from this top left corner so we need to keep that in mind as well and i'll <end>
<start> you what we can do to get around that but first let's do that because we <end>
<start> grab the canvas size because again the canvas takes up the whole width and <end>
<start> grab the canvas size because again the canvas takes up the whole width and <end>
<start> can hit dot and then we can say get width right here and that's going <end>
<start> return the value of the pixels of the whole width that's available to us <end>
<start> let's put that in parentheses that whole thing and all right we don't have to <end>
<start> let's put that in parentheses that whole thing and all right we don't have to <end>
<start> let's put that in parentheses that whole thing and all right we don't have to <end>
<start> that but this is just kind of easier for me to look at because again this is <end>
<start> that but this is just kind of easier for me to look at because again this is <end>
<start> to set it at the top of the screen and for the paint we're just going to <end>
<start> application we're going to actually have you know our bitmap on there in <end>
<start> application we're going to actually have you know our bitmap on there in <end>
<start> with it but let's just kind of go over everything we've done so <end>
<start> or instance of that object and we want to pass in the context so then we <end>
<start> or instance of that object and we want to pass in the context so then we <end>
<start> over to so it's basically going to get to this line and be like okay let's <end>
<start> what that has to offer and it's going to go into <end>
<start> what that has to offer and it's going to go into <end>
<start> and then we also you know drawled or drew a bitmap on there kind of in <end>
<start> the left top-left corner of our bitmap as well so would be a little <end>
<start> the left top-left corner of our bitmap as well so would be a little <end>
<start> the left top-left corner of our bitmap as well so would be a little <end>
<start> what's up guys welcome your 140 ninth android tutorial for the new boss <end>
<start> we're going to do in this tutorial is basically read our code from our <end>
<start> and this is kind of a java thing so i probably won't go too much into it <end>
<start> kind of explain what's going on but if you guys want more information <end>
<start> within there but i'll give you the basic concepts so what we need to do is <end>
<start> within there but i'll give you the basic concepts so what we need to do is <end>
<start> need to set up our string buffer so we're going to say string buffer <end>
<start> need to set up our string buffer so we're going to say string buffer <end>
<start> need to set up our string buffer so we're going to say string buffer <end>
<start> we're going to say sb going to set this equal to new string buffer and <end>
<start> we're going to say sb going to set this equal to new string buffer and <end>
<start> we're going to say sb going to set this equal to new string buffer and <end>
<start> we're going to say sb going to set this equal to new string buffer and <end>
<start> we're going to say sb going to set this equal to new string buffer and <end>
<start> what we need to do is we also need to set up a line so we're going to <end>
<start> what we need to do is we also need to set up a line so we're going to <end>
<start> what we need to do is we also need to set up a line so we're going to <end>
<start> string line for l or l for line and we're just going to set this also <end>
<start> string line for l or l for line and we're just going to set this also <end>
<start> string line for l or l for line and we're just going to set this also <end>
<start> to b nothing to start with and we also want to set up basically a new line <end>
<start> string because you know we don't want all of our data just in a <end>
<start> where it's hard to read so we're just going to say like new line and now <end>
<start> where it's hard to read so we're just going to say like new line and now <end>
<start> we're going to set this equal to b the system dot get property and <end>
<start> we're going to set this equal to b the system dot get property and <end>
<start> we're going to set this equal to b the system dot get property and <end>
<start> we're going to set this equal to b the system dot get property and <end>
<start> we're going to set this equal to b the system dot get property and <end>
<start> separator so that's just going to separator so that's just going <end>
<start> all of our data and put it within our string buffer so we're just going <end>
<start> all of our data and put it within our string buffer so we're just going <end>
<start> create a while loop and we're going to say as long as their line is equal to <end>
<start> create a while loop and we're going to say as long as their line is equal to <end>
<start> create a while loop and we're going to say as long as their line is equal to <end>
<start> create a while loop and we're going to say as long as their line is equal to <end>
<start> bufferedreader dot read line as long as there is a line available to read <end>
<start> bufferedreader dot read line as long as there is a line available to read <end>
<start> going to we're going to read that line so then we go with it outside <end>
<start> parentheses and we're going to say as is not equal to be null we're going <end>
<start> parentheses and we're going to say as is not equal to be null we're going <end>
<start> basically read that specific line so going to refer to our string <end>
<start> called sb and we're just going to say append which is basically a return <end>
<start> called sb and we're just going to say append which is basically a return <end>
<start> called sb and we're just going to say append which is basically a return <end>
<start> value that we're reading so we're going to say our line plus we want to add <end>
<start> value that we're reading so we're going to say our line plus we want to add <end>
<start> value that we're reading so we're going to say our line plus we want to add <end>
<start> new line when it's done reading that specific line and that's going to <end>
<start> new line when it's done reading that specific line and that's going to <end>
<start> new line when it's done reading that specific line and that's going to <end>
<start> and over until you know it's read through the whole document and then <end>
<start> and over until you know it's read through the whole document and then <end>
<start> close our buffer reader so we're going to just say i enclose this is <end>
<start> close our buffer reader so we're going to just say i enclose this is <end>
<start> a string of some sort so again we set up our string and the first tutorial of <end>
<start> a string of some sort so again we set up our string and the first tutorial of <end>
<start> know this get method called data so all we're going to say is data is equal <end>
<start> know this get method called data so all we're going to say is data is equal <end>
<start> know this get method called data so all we're going to say is data is equal <end>
<start> our string buffer dot to string and then what we're going to say is return <end>
<start> our string buffer dot to string and then what we're going to say is return <end>
<start> our string buffer dot to string and then what we're going to say is return <end>
<start> our string buffer dot to string and then what we're going to say is return <end>
<start> data because again this class is looking for some kind of a return method <end>
<start> data because again this class is looking for some kind of a return method <end>
<start> going to return a string so that's what we're going to return is the data we <end>
<start> statement so we're just going to say finally and we're going to say <end>
<start> going to just make sure our our buffered reader is closed again we're just <end>
<start> to say if like you know i n is not equal to null which you know for the most <end>
<start> to say if like you know i n is not equal to null which you know for the most <end>
<start> means that's still not equal to null so we're just going to force close it <end>
<start> we're just going to say again like try and then i n dot close and then <end>
<start> we're just going to say again like try and then i n dot close and then <end>
<start> we're just going to say again like try and then i n dot close and then <end>
<start> we're just going to say again like try and then i n dot close and then <end>
<start> just going to return turn data as well because hopefully we got some sort <end>
<start> just going to return turn data as well because hopefully we got some sort <end>
<start> data attached and also we're going to add a catch clause and we're just <end>
<start> data attached and also we're going to add a catch clause and we're just <end>
<start> to say catch like an exception ii and then we're <end>
<start> to say catch like an exception ii and then we're <end>
<start> to say catch like an exception ii and then we're <end>
<start> to say catch like an exception ii and then we're <end>
<start> going to print that to the stack trace again we're pretty familiar with <end>
<start> and there we go we pretty much have everything set up now let's just kind <end>
<start> test this make sure it works so we're going to go back over to our <end>
<start> test this make sure it works so we're going to go back over to our <end>
<start> test this make sure it works so we're going to go back over to our <end>
<start> example class and all we're going to do is we're going to set up a new <end>
<start> example class and all we're going to do is we're going to set up a new <end>
<start> example class and all we're going to do is we're going to set up a new <end>
<start> example class and all we're going to do is we're going to set up a new <end>
<start> method that we just created e^x we're going to call this test something <end>
<start> method that we just created e^x we're going to call this test something <end>
<start> method that we just created e^x we're going to call this test something <end>
<start> method that we just created e^x we're going to call this test something <end>
<start> method that we just created e^x we're going to call this test something <end>
<start> that and this is going to be equal to new get method e^x and then we can <end>
<start> that and this is going to be equal to new get method e^x and then we can <end>
<start> that and this is going to be equal to new get method e^x and then we can <end>
<start> that and this is going to be equal to new get method e^x and then we can <end>
<start> that and this is going to be equal to new get method e^x and then we can <end>
<start> that and this is going to be equal to new get method e^x and then we can <end>
<start> that method so we're going to say test or we can set up a new string may <end>
<start> that method so we're going to say test or we can set up a new string may <end>
<start> that method so we're going to say test or we can set up a new string may <end>
<start> returned we're going to set this equal to our test dot and we have that <end>
<start> returned we're going to set this equal to our test dot and we have that <end>
<start> returned we're going to set this equal to our test dot and we have that <end>
<start> returned we're going to set this equal to our test dot and we have that <end>
<start> we just said created called get internet data and that's what we're going <end>
<start> return to the string and then just we're just going to set our text view that <end>
<start> have set up to equal that string so again just http stuff and we're going <end>
<start> have set up to equal that string so again just http stuff and we're going <end>
<start> have set up to equal that string so again just http stuff and we're going <end>
<start> have set up to equal that string so again just http stuff and we're going <end>
<start> say dot set text to our new string that we just created called the returned <end>
<start> say dot set text to our new string that we just created called the returned <end>
<start> say dot set text to our new string that we just created called the returned <end>
<start> say dot set text to our new string that we just created called the returned <end>
<start> again we're working with you know an exception of some sort that could <end>
<start> again we're working with you know an exception of some sort that could <end>
<start> clause as well so then if it doesn't get set to anything we know we have <end>
<start> clause as well so then if it doesn't get set to anything we know we have <end>
<start> sort of air as well just always good to keep that in mind of how our <end>
<start> sort of air as well just always good to keep that in mind of how our <end>
<start> runs and if it's actually working so we're just going to run our <end>
<start> runs and if it's actually working so we're just going to run our <end>
<start> and we're going to go down to our http example click that and hopefully <end>
<start> and we're going to go down to our http example click that and hopefully <end>
<start> textview yeah and see our textview already changed the data and this <end>
<start> kind of the stuff that we get back as you can see you know and we can <end>
<start> kind of the stuff that we get back as you can see you know and we can <end>
<start> nicely structured of information that's being passed in through our <end>
<start> again i had that scrollview just for this reason so <end>
<start> again i had that scrollview just for this reason so <end>
<start> again i had that scrollview just for this reason so <end>
<start> can scroll through here and kind of see some of the stuff like keywords the <end>
<start> name just some of the background stuff of the website that we can read <end>
<start> name just some of the background stuff of the website that we can read <end>
<start> name just some of the background stuff of the website that we can read <end>
<start> name just some of the background stuff of the website that we can read <end>
<start> process and access some of that information but that's pretty much <end>
<start> process and access some of that information but that's pretty much <end>
<start> process and access some of that information but that's pretty much <end>
<start> process and access some of that information but that's pretty much <end>
<start> process and access some of that information but that's pretty much <end>
<start> process and access some of that information but that's pretty much <end>
<start> for the get method using the http client we'll get into again that twitter <end>
<start> for the get method using the http client we'll get into again that twitter <end>
<start> for the get method using the http client we'll get into again that twitter <end>
<start> for the get method using the http client we'll get into again that twitter <end>
<start> just like kind of breaking down some code a little bit better using json <end>
<start> the next few tutorials but uh just to give you guys kind of idea how to <end>
<start> the next few tutorials but uh just to give you guys kind of idea how to <end>
<start> the next few tutorials but uh just to give you guys kind of idea how to <end>
<start> the next few tutorials but uh just to give you guys kind of idea how to <end>
<start> some information with that get method through http client that's how you do <end>
<start> some information with that get method through http client that's how you do <end>
<start> some information with that get method through http client that's how you do <end>
<start> some information with that get method through http client that's how you do <end>
<start> webview settings to achieve some more desired results that we want to get <end>
<start> example one that we were going to achieve through the settings is kind <end>
<start> example one that we were going to achieve through the settings is kind <end>
<start> know make it match the width here and then another thing that we're going <end>
<start> do is we're going to enable javascript so if we use right now example <end>
<start> do is we're going to enable javascript so if we use right now example <end>
<start> do is we're going to enable javascript so if we use right now example <end>
<start> youtube.com/ and we go youtube uses javascript so right now it says <end>
<start> youtube.com/ and we go youtube uses javascript so right now it says <end>
<start> youtube.com/ and we go youtube uses javascript so right now it says <end>
<start> going to go into our on create method here we have our webview setup and <end>
<start> know just right before we load our url or i mean i guess you can do it <end>
<start> that or before that as well this is where we're going to use our settings <end>
<start> what we're going to do we're going to say our brow for our web view and <end>
<start> what we're going to do we're going to say our brow for our web view and <end>
<start> what we're going to do we're going to say our brow for our web view and <end>
<start> what we're going to do we're going to say our brow for our web view and <end>
<start> we're going to say get settings and we can do a lot of things with <end>
<start> we're going to say get settings and we can do a lot of things with <end>
<start> settings i'm just going to show you a few here such as enabling javascript <end>
<start> we're going to say set javascript enabled and that's true or false so <end>
<start> we're going to say set javascript enabled and that's true or false so <end>
<start> as simple as this true now we can load websites like youtube etc websites <end>
<start> use javascript that's how you do it you get the settings of the web view <end>
<start> setting up our our our website to be zoomed out for the most part so <end>
<start> setting up our our our website to be zoomed out for the most part so <end>
<start> we're just going to say our brow then we're going to say get <end>
<start> we're just going to say our brow then we're going to say get <end>
<start> we're just going to say our brow then we're going to say get <end>
<start> oops and first the one that we're going to use we're going to use the load <end>
<start> what this means here in a second so that's the first thing that we need <end>
<start> what this means here in a second so that's the first thing that we need <end>
<start> do and then we're going to also say our brow and then we're also going to <end>
<start> do and then we're going to also say our brow and then we're also going to <end>
<start> do and then we're going to also say our brow and then we're also going to <end>
<start> do and then we're going to also say our brow and then we're also going to <end>
<start> do and then we're going to also say our brow and then we're also going to <end>
<start> the settings oops and then we're going to say dot and we're going to say <end>
<start> the settings oops and then we're going to say dot and we're going to say <end>
<start> the settings oops and then we're going to say dot and we're going to say <end>
<start> set use wide viewport and again that's true or false we're in south 'true <end>
<start> well so now we kind of used some of the settings to achieve some of the <end>
<start> well so now we kind of used some of the settings to achieve some of the <end>
<start> you guys probably should do anytime you use this load url method i know <end>
<start> kind of out of order here but we probably want to do like a try and <end>
<start> kind of out of order here but we probably want to do like a try and <end>
<start> kind of out of order here but we probably want to do like a try and <end>
<start> so we're just going to set that up real quick and catch and then exception e <end>
<start> so we're just going to set that up real quick and catch and then exception e <end>
<start> so we're just going to set that up real quick and catch and then exception e <end>
<start> so we're just going to set that up real quick and catch and then exception e <end>
<start> then just a dot print stacktrace because again it might not always <end>
<start> then just a dot print stacktrace because again it might not always <end>
<start> methods is set load with overview mode and the set use wide viewport <end>
<start> methods is set load with overview mode and the set use wide viewport <end>
<start> basically with this set load with overview mode it's kind of hard to <end>
<start> basically with this set load with overview mode it's kind of hard to <end>
<start> sometimes without spaces for some reason i don't know why but basically what <end>
<start> sometimes without spaces for some reason i don't know why but basically what <end>
<start> that to be true and then what this one does is basically that's going to <end>
<start> for the most part so we want that to be true as well instead of if we set it <end>
<start> i don't know if that made too much sense but again that's kind of what <end>
<start> things mean because you know the manifests or i'm sorry the <end>
<start> doesn't really describe them too well but let's just run our application <end>
<start> doesn't really describe them too well but let's just run our application <end>
<start> sure everything works and that's pretty much it for this tutorial guys <end>
<start> sure everything works and that's pretty much it for this tutorial guys <end>
<start> sure everything works and that's pretty much it for this tutorial guys <end>
<start> sure everything works and that's pretty much it for this tutorial guys <end>
<start> so let's open this up and hopefully it will be zoomed out when it loads the <end>
<start> bring back sight and as you can see it is zoomed out so that's nice and <end>
<start> out the website to make sure the javascript is enabled so we're going <end>
<start> out the website to make sure the javascript is enabled so we're going <end>
<start> out the website to make sure the javascript is enabled so we're going <end>
<start> out the website to make sure the javascript is enabled so we're going <end>
<start> out the website to make sure the javascript is enabled so we're going <end>
<start> out the website to make sure the javascript is enabled so we're going <end>
<start> say htt p-- http:www.youtube.com/watch v the web view stuff for a foreigner <end>
<start> say htt p-- http:www.youtube.com/watch v the web view stuff for a foreigner <end>
<start> have an array called lists so what we're going to do is simply set that <end>
<start> keep that in mind so we're going to do is we're going to say new xml file <end>
<start> keep that in mind so we're going to do is we're going to say new xml file <end>
<start> we're going to call this one it's under our values as you can see it's <end>
<start> right there but we're going to call this array because again it's <end>
<start> right there but we're going to call this array because again it's <end>
<start> right there but we're going to call this array because again it's <end>
<start> right there but we're going to call this array because again it's <end>
<start> something called array list and that's what this is going to refer to so <end>
<start> something called array list and that's what this is going to refer to so <end>
<start> going to say array dot xml hit finish and now anytime we use this array <end>
<start> of a folder it's going to refer to here so again we're just going to go into <end>
<start> folder for the most part so what we're going to set up as a string array as <end>
<start> folder for the most part so what we're going to set up as a string array as <end>
<start> can see it we have the options here in a jar a string string array item <end>
<start> xml file so we're going to set up a string array and what we're first <end>
<start> xml file so we're going to set up a string array and what we're first <end>
<start> to do is we're going to name it so we're going to say name and this is going <end>
<start> to do is we're going to name it so we're going to say name and this is going <end>
<start> to do is we're going to name it so we're going to say name and this is going <end>
<start> to do is we're going to name it so we're going to say name and this is going <end>
<start> be equal to list again our preference tab is accessing the array called <end>
<start> be equal to list again our preference tab is accessing the array called <end>
<start> and that's what this is going to refer to this list so we have to give it <end>
<start> name list or whatever you guys name that so it actually has a list refer to <end>
<start> we need to define it as and then hit enter a few times so we can work <end>
<start> the string array and add some items to it so we're going to say item and <end>
<start> the string array and add some items to it so we're going to say item and <end>
<start> the string array and add some items to it so we're going to say item and <end>
<start> kind of put something within both item and the clothes item brackets there <end>
<start> save it and then we have this string array called list which is <end>
<start> save it and then we have this string array called list which is <end>
<start> save it and then we have this string array called list which is <end>
<start> or the most part so we're going to set up something else called android <end>
<start> or the most part so we're going to set up something else called android <end>
<start> this is within our list preference android entry values for the most <end>
<start> and we're going to say again refer to another array so we're going to <end>
<start> and we're going to say again refer to another array so we're going to <end>
<start> and we're going to say again refer to another array so we're going to <end>
<start> array ford slash values or something like <end>
<start> array ford slash values or something like <end>
<start> array ford slash values or something like <end>
<start> array ford slash values or something like <end>
<start> array ford slash values or something like <end>
<start> or l values l values and then what we or l values l values and then what <end>
<start> or l values l values and then what we or l values l values and then what <end>
<start> or l values l values and then what we or l values l values and then what <end>
<start> can do is we can also set some numerical values to these items for the most <end>
<start> so we're going to set up a new string array within our array xml and <end>
<start> just click string array and we also gotta give this the name that we <end>
<start> just click string array and we also gotta give this the name that we <end>
<start> set up so name is going to equal again l <end>
<start> set up so name is going to equal again l <end>
<start> set up so name is going to equal again l <end>
<start> set up so name is going to equal again l <end>
<start> set up so name is going to equal again l <end>
<start> and close it off and put up some values within here again item and we're <end>
<start> to say this is item one and we're just going to copy and paste that four <end>
<start> we go we basically set up our list arrays and set up entries which is <end>
<start> and this one is also at array which is both referring to this array value <end>
<start> we set up for the most part and i'll catch you guys in the next <end>
<start> we're basically going to set up this location manner manager to get the <end>
<start> we're basically going to set up this location manner manager to get the <end>
<start> triangulating in those towers so first thing we need to do is set up a <end>
<start> and we're gonna just solve a call the c or crit maybe and we're just going <end>
<start> and we're gonna just solve a call the c or crit maybe and we're just going <end>
<start> and we're gonna just solve a call the c or crit maybe and we're just going <end>
<start> set this equal to new criteria just kind of the standard default criteria <end>
<start> set this equal to new criteria just kind of the standard default criteria <end>
<start> set this equal to new criteria just kind of the standard default criteria <end>
<start> then we're just criteria and then we're gonna just import that and now <end>
<start> then we're just criteria and then we're gonna just import that and now <end>
<start> we're gonna do is we're gonna set up this string called towers based off <end>
<start> we're gonna do is we're gonna set up this string called towers based off <end>
<start> of our location manager and the criteria what kind of criteria we're looking <end>
<start> of our location manager and the criteria what kind of criteria we're looking <end>
<start> so we're going to do is say towers we're going to set this equal to our <end>
<start> so we're going to do is say towers we're going to set this equal to our <end>
<start> so we're going to do is say towers we're going to set this equal to our <end>
<start> manager called lm and then we're gonna say dot get best provider and as you <end>
<start> manager called lm and then we're gonna say dot get best provider and as you <end>
<start> see it takes criteria and also a boolean value so we're gonna set the criteria <end>
<start> crit and enabled only to false and as you guys can see if we hover <end>
<start> crit and enabled only to false and as you guys can see if we hover <end>
<start> crit and enabled only to false and as you guys can see if we hover <end>
<start> crit and enabled only to false and as you guys can see if we hover <end>
<start> best fits the given criteria so we're basically getting best you know the <end>
<start> reception or whatever you guys want to think of that as and also we can kind <end>
<start> reception or whatever you guys want to think of that as and also we can kind <end>
<start> requirement speed accuracy altitude some of the things that we can check for <end>
<start> again we're just basically getting the best provider given our criteria <end>
<start> criteria that much and now what we're going to do is we're going to set up <end>
<start> location we're gonna call this location l or location maybe like this and <end>
<start> location we're gonna call this location l or location maybe like this and <end>
<start> location we're gonna call this location l or location maybe like this and <end>
<start> location we're gonna call this location l or location maybe like this and <end>
<start> we're going to set this equal to again our location manager and then <end>
<start> going to use a method called get last known location and it takes a string <end>
<start> going to use a method called get last known location and it takes a string <end>
<start> that's why we set up the string called towers because that's what we're <end>
<start> getting the last-known location called towers and then what we're going to <end>
<start> getting the last-known location called towers and then what we're going to <end>
<start> is as long as our location is not equal to be null as long as we you know <end>
<start> some sort of location that's where we're going to set up basically what we <end>
<start> some sort of location that's where we're going to set up basically what we <end>
<start> some sort of location that's where we're going to set up basically what we <end>
<start> some sort of location that's where we're going to set up basically what we <end>
<start> here so we're going to say if location is not null then you know we're <end>
<start> here so we're going to say if location is not null then you know we're <end>
<start> here so we're going to say if location is not null then you know we're <end>
<start> here so we're going to say if location is not null then you know we're <end>
<start> here so we're going to say if location is not null then you know we're <end>
<start> here so we're going to say if location is not null then you know we're <end>
<start> set up our in tell you again we can cut this actually we're just gonna say <end>
<start> is equal to and then we're gonna cast it in as an int because this isn't <end>
<start> is equal to and then we're gonna cast it in as an int because this isn't <end>
<start> return an end value and what we're gonna do is we're going to say location <end>
<start> return an end value and what we're gonna do is we're going to say location <end>
<start> return an end value and what we're gonna do is we're going to say location <end>
<start> return an end value and what we're gonna do is we're going to say location <end>
<start> return an end value and what we're gonna do is we're going to say location <end>
<start> get latitude and we're also going to say longy is equal to again casting in <end>
<start> get latitude and we're also going to say longy is equal to again casting in <end>
<start> get latitude and we're also going to say longy is equal to again casting in <end>
<start> get latitude and we're also going to say longy is equal to again casting in <end>
<start> get latitude and we're also going to say longy is equal to again casting in <end>
<start> int and again our location dot get longitude so that's just going to <end>
<start> int and again our location dot get longitude so that's just going to <end>
<start> int and again our location dot get longitude so that's just going to <end>
<start> int and again our location dot get longitude so that's just going to <end>
<start> int and again our location dot get longitude so that's just going to <end>
<start> those variables down here i working to actually do is cut these and paste <end>
<start> above her class i know it kind of jump around when i do these tutorials <end>
<start> above her class i know it kind of jump around when i do these tutorials <end>
<start> above her class i know it kind of jump around when i do these tutorials <end>
<start> above her class i know it kind of jump around when i do these tutorials <end>
<start> as right here now that's going to get our latin long and then what we're <end>
<start> and basically add our overlay to our list within again this if statement <end>
<start> we're just going to print and we're good else we can just make it text <end>
<start> we're just going to print and we're good else we can just make it text <end>
<start> we're just going to print and we're good else we can just make it text <end>
<start> something we're just going to say toast dot toe stop make text <end>
<start> something we're just going to say toast dot toe stop make text <end>
<start> something we're just going to say toast dot toe stop make text <end>
<start> something we're just going to say toast dot toe stop make text <end>
<start> something we're just going to say toast dot toe stop make text <end>
<start> main dot this or base contacts get base contacts whatever you guys want to <end>
<start> main dot this or base contacts get base contacts whatever you guys want to <end>
<start> main dot this or base contacts get base contacts whatever you guys want to <end>
<start> main dot this or base contacts get base contacts whatever you guys want to <end>
<start> main dot this or base contacts get base contacts whatever you guys want to <end>
<start> we're going to say kind of couldn't get provider and duration toast dot <end>
<start> we're going to say kind of couldn't get provider and duration toast dot <end>
<start> we're going to say kind of couldn't get provider and duration toast dot <end>
<start> we're going to say kind of couldn't get provider and duration toast dot <end>
<start> we're going to say kind of couldn't get provider and duration toast dot <end>
<start> short and then we're just gonna say dot show so we don't even setup <end>
<start> short and then we're just gonna say dot show so we don't even setup <end>
<start> variable we're just gonna again show it and create it so there we go we kind <end>
<start> have that working but the problem that we may be having is again this is <end>
<start> have that working but the problem that we may be having is again this is <end>
<start> we're gonna finish up this you know this whole google map stuff in the <end>
<start> tutorial we're gonna use some of those methods that we implemented and <end>
<start> all we're gonna do for this tutorial let's learn about some of the methods <end>
<start> all we're gonna do for this tutorial let's learn about some of the methods <end>
<start> has and how we actually send this notification again to the <end>
<start> service it's going to be pretty simple for the most part but there's some <end>
<start> manager so what we're gonna do is again within our on click method we're just <end>
<start> estate a notification manager now we're going to say notify and basically <end>
<start> estate a notification manager now we're going to say notify and basically <end>
<start> estate a notification manager now we're going to say notify and basically <end>
<start> we need to do is we need to pass in a certain key or a unique id and <end>
<start> we need to do is we need to pass in a certain key or a unique id and <end>
<start> which notification we want to set up so we're just gonna say unique id and <end>
<start> which notification we want to set up so we're just gonna say unique id and <end>
<start> which notification we want to set up so we're just gonna say unique id and <end>
<start> which notification we want to set up so we're just gonna say unique id and <end>
<start> set that up in a second and then we also have to pass in which notification <end>
<start> set that up in a second and then we also have to pass in which notification <end>
<start> need an unique id is well actually i'll show you but we're gonna copy this <end>
<start> need an unique id is well actually i'll show you but we're gonna copy this <end>
<start> we're gonna go above our class and we're gonna set this equal to static final <end>
<start> we're gonna go above our class and we're gonna set this equal to static final <end>
<start> we're gonna go above our class and we're gonna set this equal to static final <end>
<start> we're gonna go above our class and we're gonna set this equal to static final <end>
<start> we're gonna go above our class and we're gonna set this equal to static final <end>
<start> then paste equals and then some kind of a unique number oh and also we say <end>
<start> then paste equals and then some kind of a unique number oh and also we say <end>
<start> we run our application i'll show you guys the problem that we're having <end>
<start> we run our application i'll show you guys the problem that we're having <end>
<start> we run our application i'll show you guys the problem that we're having <end>
<start> why we need that unique id so if you go down to our status <end>
<start> why we need that unique id so if you go down to our status <end>
<start> class hits button as you can see we get this message and you know that's <end>
<start> but we're gonna go down and we're gonna hit our message it's still gonna open <end>
<start> but we're gonna go down and we're gonna hit our message it's still gonna open <end>
<start> but we're gonna go down and we're gonna hit our message it's still gonna open <end>
<start> our tent and open up that pending intent but as you can see your <end>
<start> our tent and open up that pending intent but as you can see your <end>
<start> clear well we can hit the clear button there and it'll clear it but we want <end>
<start> clear well we can hit the clear button there and it'll clear it but we want <end>
<start> clear right when we you know open up our pending intent so how we're gonna <end>
<start> clear right when we you know open up our pending intent so how we're gonna <end>
<start> that is refer to the unique id within our on create method and again if <end>
<start> that is refer to the unique id within our on create method and again if <end>
<start> again once we you know start up our pending intent it's gonna call this <end>
<start> quick fix probably not the best way to do it but what we're going to do <end>
<start> we're going to refer to our notification manager and we're just gonna say <end>
<start> we're going to refer to our notification manager and we're just gonna say <end>
<start> cancel and as you can see it takes an int or an id and that's we're <end>
<start> cancel and as you can see it takes an int or an id and that's we're <end>
<start> refer to our unique id because you know we don't want it to cancel <end>
<start> refer to our unique id because you know we don't want it to cancel <end>
<start> some sort and here's just our unique id it's just a random number but <end>
<start> some sort and here's just our unique id it's just a random number but <end>
<start> gonna run it it's still gonna be the old running but just to show you <end>
<start> notification we hit our notification it opens up another intent opens up <end>
<start> notification we hit our notification it opens up another intent opens up <end>
<start> activity the same activity then once we hit the back button oh you know we <end>
<start> activity the same activity then once we hit the back button oh you know we <end>
<start> all these activities open so just again a quick fix for that we're just <end>
<start> all these activities open so just again a quick fix for that we're just <end>
<start> say within our on click method after we <end>
<start> say within our on click method after we <end>
<start> say within our on click method after we <end>
<start> called and notify method we're just gonna say finish and after we hear <end>
<start> called and notify method we're just gonna say finish and after we hear <end>
<start> called and notify method we're just gonna say finish and after we hear <end>
<start> hit the notification it's gonna start up our class and it's going to start up <end>
<start> hit the notification it's gonna start up our class and it's going to start up <end>
<start> pretty much the purpose of this tutorial and again thanks for watching i'll <end>
<start> you guys in the next tutorial hope you have a good one and see you <end>
<start> in this tutorial basic aliy get our new activity set up and you know add <end>
<start> references and introduce you guys to a little bit of java so what we're <end>
<start> to do is we're going to create a new java class you guys probably <end>
<start> to do is we're going to create a new java class you guys probably <end>
<start> to do is we're going to create a new java class you guys probably <end>
<start> know how to do this so we're going to call this class text text play <end>
<start> know how to do this so we're going to call this class text text play <end>
<start> something like that and i'm going to open that up again this is going to be <end>
<start> regular activity that you guys might be familiar with should be hopefully <end>
<start> regular activity that you guys might be familiar with should be hopefully <end>
<start> regular activity that you guys might be familiar with should be hopefully <end>
<start> regular activity that you guys might be familiar with should be hopefully <end>
<start> regular activity that you guys might be familiar with should be hopefully <end>
<start> the oncreate method by again source override unimplemented methods and <end>
<start> the oncreate method by again source override unimplemented methods and <end>
<start> the oncreate method by again source override unimplemented methods and <end>
<start> is probably the last time i'm going to show you guys how to get your <end>
<start> is probably the last time i'm going to show you guys how to get your <end>
<start> is probably the last time i'm going to show you guys how to get your <end>
<start> set up so you know pay close attention i wasn't even going to show you in <end>
<start> set up so you know pay close attention i wasn't even going to show you in <end>
<start> last time just so you guys know what what's going on and now all we need <end>
<start> last time just so you guys know what what's going on and now all we need <end>
<start> last time just so you guys know what what's going on and now all we need <end>
<start> do since this is regular application we're going to say set content <end>
<start> do since this is regular application we're going to say set content <end>
<start> again have this equal and this is just setting up the reference to the xml <end>
<start> again have this equal and this is just setting up the reference to the xml <end>
<start> again have this equal and this is just setting up the reference to the xml <end>
<start> again have this equal and this is just setting up the reference to the xml <end>
<start> again have this equal and this is just setting up the reference to the xml <end>
<start> we just created so r dot layout because it is a layout dot text and there we <end>
<start> we just created so r dot layout because it is a layout dot text and there we <end>
<start> activity we have to define it in the manifest the guys remembered that so <end>
<start> activity we have to define it in the manifest the guys remembered that so <end>
<start> going to open up the android manifest and what we can do is we can copy <end>
<start> going to open up the android manifest and what we can do is we can copy <end>
<start> paste one of the default activities that we have set up and paste it and <end>
<start> paste one of the default activities that we have set up and paste it and <end>
<start> paste one of the default activities that we have set up and paste it and <end>
<start> paste one of the default activities that we have set up and paste it and <end>
<start> filter and i'll explain why in a second if you guys haven't figured that out <end>
<start> filter and i'll explain why in a second if you guys haven't figured that out <end>
<start> and we aren't opening these activities anymore by the action name because <end>
<start> going to go into our what was it our menu class and again it opens it <end>
<start> going to go into our what was it our menu class and again it opens it <end>
<start> going to go into our what was it our menu class and again it opens it <end>
<start> going to go into our what was it our menu class and again it opens it <end>
<start> going to do real quickly is set up instead of example one we're going <end>
<start> going to do real quickly is set up instead of example one we're going <end>
<start> going to do real quickly is set up instead of example one we're going <end>
<start> call this text play again just like that class we set up exactly same <end>
<start> confusing to go through but you know it's an easy reference to access <end>
<start> our you know all of our new activities that we're going to create so <end>
<start> everything's set up and it's going to work now within our emulator but <end>
<start> know how to do this as well so we're going to say button because we have <end>
<start> know how to do this as well so we're going to say button because we have <end>
<start> button and we're going to call this check command so that's we're going <end>
<start> button and we're going to call this check command so that's we're going <end>
<start> button and we're going to call this check command so that's we're going <end>
<start> button and we're going to call this check command so that's we're going <end>
<start> call our button again we have to import the button and set equal to or <end>
<start> call our button again we have to import the button and set equal to or <end>
<start> call our button again we have to import the button and set equal to or <end>
<start> call our button again we have to import the button and set equal to or <end>
<start> that bridge / bridge over to the xml we're going to say button find view <end>
<start> that bridge / bridge over to the xml we're going to say button find view <end>
<start> that bridge / bridge over to the xml we're going to say button find view <end>
<start> that bridge / bridge over to the xml we're going to say button find view <end>
<start> that bridge / bridge over to the xml we're going to say button find view <end>
<start> that bridge / bridge over to the xml we're going to say button find view <end>
<start> id again r dot id dot we're going to looking for a button the button <end>
<start> id again r dot id dot we're going to looking for a button the button <end>
<start> yeah it must be so we're going to use button <end>
<start> i'm just gonna oh no now we're going to set up a toggle button as well the <end>
<start> i'm just gonna oh no now we're going to set up a toggle button as well the <end>
<start> i'm just gonna oh no now we're going to set up a toggle button as well the <end>
<start> if you ever figure out forget what type of variable you're setting up <end>
<start> likely it's the same name so there you go we're going to call this password <end>
<start> likely it's the same name so there you go we're going to call this password <end>
<start> pass we're gonna call it pass toggle or pass hog like that and set that equal <end>
<start> pass we're gonna call it pass toggle or pass hog like that and set that equal <end>
<start> pass we're gonna call it pass toggle or pass hog like that and set that equal <end>
<start> something we're also going to you know import it so we can use use it as <end>
<start> something we're also going to you know import it so we can use use it as <end>
<start> something we're also going to you know import it so we can use use it as <end>
<start> something we're also going to you know import it so we can use use it as <end>
<start> something we're also going to you know import it so we can use use it as <end>
<start> toggle button and find you by id this is kind of a repetitious tutorial <end>
<start> toggle button and find you by id this is kind of a repetitious tutorial <end>
<start> toggle button and find you by id this is kind of a repetitious tutorial <end>
<start> toggle button and find you by id this is kind of a repetitious tutorial <end>
<start> toggle button and find you by id this is kind of a repetitious tutorial <end>
<start> toggle button and find you by id this is kind of a repetitious tutorial <end>
<start> don't probably need to go on anymore i just want to make sure you guys <end>
<start> don't probably need to go on anymore i just want to make sure you guys <end>
<start> button password reference and the last thing we have to setup well two <end>
<start> button password reference and the last thing we have to setup well two <end>
<start> button password reference and the last thing we have to setup well two <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> things i'm sorry an edit text we're going to call this input and set <end>
<start> equal to edit text find you by id again and then edit text commands so <end>
<start> equal to edit text find you by id again and then edit text commands so <end>
<start> equal to edit text find you by id again and then edit text commands so <end>
<start> equal to edit text find you by id again and then edit text commands so <end>
<start> equal to edit text find you by id again and then edit text commands so <end>
<start> equal to edit text find you by id again and then edit text commands so <end>
<start> what why i kind of use this kind of reference so i kind of know if it's <end>
<start> label those however you want those identifiers again you have to <end>
<start> label those however you want those identifiers again you have to <end>
<start> edit text and we also have one last one which was our text view we're going <end>
<start> edit text and we also have one last one which was our text view we're going <end>
<start> edit text and we also have one last one which was our text view we're going <end>
<start> edit text and we also have one last one which was our text view we're going <end>
<start> edit text and we also have one last one which was our text view we're going <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> call this display when those part that's decent name whatever and <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> going to set this equal to textview and text view results so there we go <end>
<start> basically have everything initialized for the most part and i just wanted <end>
<start> basically have everything initialized for the most part and i just wanted <end>
<start> activity and kind of made these reference bridges over from the xml <end>
<start> kind of what the past oh i'll get to that it's like next tutorial so <end>
<start> i don't know pretty boring tutorial really don't learn anything new <end>
<start> now we okay no we don't now we have that new item and again it's when we <end>
<start> now we okay no we don't now we have that new item and again it's when we <end>
<start> the class name which will open this up if you guys can't get that to open <end>
<start> make sure that this listview item is the exact same as that new class that <end>
<start> our data collected class set up which we called the xml data collected all <end>
<start> our data collected class set up which we called the xml data collected all <end>
<start> want this class to do is have our variables for a city and our <end>
<start> so our temperature is gonna be int and we're gonna call this temp and you <end>
<start> so our temperature is gonna be int and we're gonna call this temp and you <end>
<start> something like that and we're just gonna issue set this equal to be 0 just <end>
<start> message of some sort haven't figured that out yet what we're gonna do <end>
<start> message of some sort haven't figured that out yet what we're gonna do <end>
<start> also going to return a string which is gonna be our city so we're just <end>
<start> also going to return a string which is gonna be our city so we're just <end>
<start> say string and we're gonna call this city set this equal to null so now <end>
<start> say string and we're gonna call this city set this equal to null so now <end>
<start> say string and we're gonna call this city set this equal to null so now <end>
<start> set up some methods within this class to kind of set up these variables to <end>
<start> set up some methods within this class to kind of set up these variables to <end>
<start> set up some methods within this class to kind of set up these variables to <end>
<start> what they're supposed to be and we're just going to use three methods one <end>
<start> what they're supposed to be and we're just going to use three methods one <end>
<start> going to be public void set city and what we're gonna pass in to this <end>
<start> going to be public void set city and what we're gonna pass in to this <end>
<start> going to be public void set city and what we're gonna pass in to this <end>
<start> going to be public void set city and what we're gonna pass in to this <end>
<start> going to be public void set city and what we're gonna pass in to this <end>
<start> again a string because that's what we're working with we're gonna call <end>
<start> again a string because that's what we're working with we're gonna call <end>
<start> again a string because that's what we're working with we're gonna call <end>
<start> again a string because that's what we're working with we're gonna call <end>
<start> string c or whatever we're getting passed in c and then what we're gonna <end>
<start> whatever is passed in now when we use the handling xml stuff class we can <end>
<start> in some information using this method called set city and pass in the <end>
<start> concept but we haven't really i don't know if we've created a class <end>
<start> concept but we haven't really i don't know if we've created a class <end>
<start> like this yet but also we're gonna say public void set temp and again <end>
<start> like this yet but also we're gonna say public void set temp and again <end>
<start> like this yet but also we're gonna say public void set temp and again <end>
<start> going to be the same concept we're gonna get passed in an int we're gonna <end>
<start> going to be the same concept we're gonna get passed in an int we're gonna <end>
<start> going to be the same concept we're gonna get passed in an int we're gonna <end>
<start> going to be the same concept we're gonna get passed in an int we're gonna <end>
<start> this tea and all we're gonna do is set our <end>
<start> this tea and all we're gonna do is set our <end>
<start> this tea and all we're gonna do is set our <end>
<start> equal to be whatever is being passed in is t so now again we have a method <end>
<start> that integer is being passed in we're gonna just set one method up so we <end>
<start> that integer is being passed in we're gonna just set one method up so we <end>
<start> we're just gonna say public whoa sorry i'm not angry at you guys public <end>
<start> we're just gonna say public whoa sorry i'm not angry at you guys public <end>
<start> we're just gonna say public whoa sorry i'm not angry at you guys public <end>
<start> case and then we're gonna say a string reference because again we're <end>
<start> case and then we're gonna say a string reference because again we're <end>
<start> our textview so it needs to be a string we're just gonna say data to <end>
<start> our textview so it needs to be a string we're just gonna say data to <end>
<start> our textview so it needs to be a string we're just gonna say data to <end>
<start> something like that and it's not going to take anything within its <end>
<start> something like that and it's not going to take anything within its <end>
<start> for this class so we're just gonna hit enter and all we're gonna do is again <end>
<start> for this class so we're just gonna hit enter and all we're gonna do is again <end>
<start> need to return something so we're gonna say return and we're gonna say like <end>
<start> you know like that and then we're gonna say or actually we might want to put <end>
<start> you know like that and then we're gonna say or actually we might want to put <end>
<start> you know like that and then we're gonna say or actually we might want to put <end>
<start> space and then our quotation then we're gonna say plus our city again <end>
<start> space and then our quotation then we're gonna say plus our city again <end>
<start> variable that we're getting pass in plus you know maybe a space and then <end>
<start> variable that we're getting pass in plus you know maybe a space and then <end>
<start> variable that we're getting pass in plus you know maybe a space and then <end>
<start> variable that we're getting pass in plus you know maybe a space and then <end>
<start> current temperature and fahrenheit is and then space and then we can just <end>
<start> current temperature and fahrenheit is and then space and then we can just <end>
<start> current temperature and fahrenheit is and then space and then we can just <end>
<start> current temperature and fahrenheit is and then space and then we can just <end>
<start> current temperature and fahrenheit is and then space and then we can just <end>
<start> you know another space or another plus and we're gonna give it the <end>
<start> you know another space or another plus and we're gonna give it the <end>
<start> you know another space or another plus and we're gonna give it the <end>
<start> that we're referring to it again in this class and then just say plus degrees <end>
<start> that we're referring to it again in this class and then just say plus degrees <end>
<start> space degrees actually so i just thought i'd show you guys this before we get <end>
<start> space degrees actually so i just thought i'd show you guys this before we get <end>
<start> to string and it's whoops two strings like that sorry and that's just going <end>
<start> i'll catch you guys later have a good <end>
<start> again just a quick review here what we've done in last tutorial we <end>
<start> again just a quick review here what we've done in last tutorial we <end>
<start> these methods called get name and get hotness and that's going to return <end>
<start> these methods called get name and get hotness and that's going to return <end>
<start> these methods called get name and get hotness and that's going to return <end>
<start> so now let's go into our hot-or-not java class and what we're gonna do is <end>
<start> let's set that up just cursor c equals let's set that up just cursor c <end>
<start> let's set that up just cursor c equals let's set that up just cursor c <end>
<start> let's set that up just cursor c equals let's set that up just cursor c <end>
<start> our database again we're going to quarry it and again we need to enter a <end>
<start> our database again we're going to quarry it and again we need to enter a <end>
<start> our database again we're going to quarry it and again we need to enter a <end>
<start> name which is gonna be our table name and we're also going to set up you <end>
<start> our columns name which we're just gonna copy from this get data up here <end>
<start> our columns name which we're just gonna copy from this get data up here <end>
<start> gonna be pretty much the same or it is gonna be the same and again that's <end>
<start> gonna be pretty much the same or it is gonna be the same and again that's <end>
<start> our columns is going to be for a second parameter just our string array that <end>
<start> selection here we're gonna set up basically our long or a row id <end>
<start> we're getting passed in so what we're gonna do is we're gonna say <end>
<start> we're getting passed in so what we're gonna do is we're gonna say <end>
<start> we're getting passed in so what we're gonna do is we're gonna say <end>
<start> underscore row id and then we're gonna say plus equals in quotations and <end>
<start> plus rl that we're getting passed in and then everything else is gonna be set <end>
<start> null all right so basically the only thing that's different again is for <end>
<start> null all right so basically the only thing that's different again is for <end>
<start> in again what's being passed in as that whatever is in that edit text for <end>
<start> we're just gonna say if cursor is not set to know again that's expression <end>
<start> we're just gonna say if cursor is not set to know again that's expression <end>
<start> we're just gonna say if cursor is not set to know again that's expression <end>
<start> we're just gonna say if cursor is not set to know again that's expression <end>
<start> we're going to basically return the data so what we're gonna do is we're <end>
<start> we're going to basically return the data so what we're gonna do is we're <end>
<start> say we have to first set our cursor to move to first you might be <end>
<start> say we have to first set our cursor to move to first you might be <end>
<start> that's the first row in our database but actually again since we're passing <end>
<start> that's the first row in our database but actually again since we're passing <end>
<start> us to look through it and then all we're gonna do is set up a string call <end>
<start> hotness or actually a name we're gonna set this string equal to our cursor <end>
<start> get string and we're gonna put one here and then what we're gonna do is <end>
<start> get string and we're gonna put one here and then what we're gonna do is <end>
<start> get string and we're gonna put one here and then what we're gonna do is <end>
<start> gonna return our name so again just to quickly talk through everything <end>
<start> gonna return our name so again just to quickly talk through everything <end>
<start> we've done because pretty much our get hotness that's going to be the <end>
<start> we've done because pretty much our get hotness that's going to be the <end>
<start> hotness that's going to be the same thing for the most part again we set <end>
<start> hotness that's going to be the same thing for the most part again we set <end>
<start> that row for the most part and we're going to get the string data of <end>
<start> just gonna scroll up to where we said get data before because this is kind <end>
<start> just gonna scroll up to where we said get data before because this is kind <end>
<start> just gonna scroll up to where we said get data before because this is kind <end>
<start> the same concept we had you know something like this instead of a <end>
<start> column name and column hotness and last time we set up these ends but <end>
<start> our name is our second column that's position 1 and this is positioned too <end>
<start> if we're returning our name we can also just say if we know which column it <end>
<start> if we're returning our name we can also just say if we know which column it <end>
<start> we can just say position 1 which will be our second column because <end>
<start> our cursor is set to null it's just going to return a null so it's <end>
<start> going to return our name if this works here so that's kind of the set up <end>
<start> just going to copy this and paste it within our or actually copy right <end>
<start> just going to copy this and paste it within our or actually copy right <end>
<start> just going to copy this and paste it within our or actually copy right <end>
<start> just going to copy this and paste it within our or actually copy right <end>
<start> and paste it within our hotness and all we're gonna change is basically <end>
<start> and paste it within our hotness and all we're gonna change is basically <end>
<start> and paste it within our hotness and all we're gonna change is basically <end>
<start> cursor we're getting because again our hotness is in our third column which <end>
<start> hot ness something like that and it's gonna return that hotness so now <end>
<start> just run our application and make sure everything works again for the most <end>
<start> just run our application and make sure everything works again for the most <end>
<start> just run our application and make sure everything works again for the most <end>
<start> this this section we're just getting the name and stuff it's kind of <end>
<start> because we've done it before but again i just kind of wanted to talk over <end>
<start> because we've done it before but again i just kind of wanted to talk over <end>
<start> because we've done it before but again i just kind of wanted to talk over <end>
<start> because i'm not sure if i specified it clearly so again let's just view <end>
<start> because i'm not sure if i specified it clearly so again let's just view <end>
<start> database we have two entries so let's say we want the second entry we're <end>
<start> database we have two entries so let's say we want the second entry we're <end>
<start> put two here and then we're gonna say get information as you can see it <end>
<start> put two here and then we're gonna say get information as you can see it <end>
<start> up samantha and 7 which is again our second entry and we can also do one <end>
<start> up samantha and 7 which is again our second entry and we can also do one <end>
<start> up samantha and 7 which is again our second entry and we can also do one <end>
<start> up samantha and 7 which is again our second entry and we can also do one <end>
<start> information pulls up this now just just a note if we put like 5 it's going <end>
<start> the right you know the right number but uh oh i'll catch you guys in the <end>
<start> to do that is we're going to create a new class that's going to kind of <end>
<start> pin point you can think of it as and handle it within that class so <end>
<start> gonna create new class and we're gonna call this custom pin point or <end>
<start> gonna create new class and we're gonna call this custom pin point or <end>
<start> gonna create new class and we're gonna call this custom pin point or <end>
<start> of the sort whatever you guys want to call this hit enter and what this <end>
<start> of the sort whatever you guys want to call this hit enter and what this <end>
<start> of the sort whatever you guys want to call this hit enter and what this <end>
<start> gonna extends is something called an itemized overlay because again <end>
<start> drawing some kind of item itemized object or a drawable to our overlay <end>
<start> it's gonna be itemized overlay and it's gonna be of the type overlay item <end>
<start> it's gonna be itemized overlay and it's gonna be of the type overlay item <end>
<start> it's gonna be itemized overlay and it's gonna be of the type overlay item <end>
<start> it's gonna be itemized overlay and it's gonna be of the type overlay item <end>
<start> it's gonna be itemized overlay and it's gonna be of the type overlay item <end>
<start> we're gonna say overlay item and we're just gonna hit command shift i to add <end>
<start> we're gonna say overlay item and we're just gonna hit command shift i to add <end>
<start> class getting some errors because we need a constructor so we're gonna <end>
<start> say add constructor and we're also gonna hover over and add the <end>
<start> say add constructor and we're also gonna hover over and add the <end>
<start> say add constructor and we're also gonna hover over and add the <end>
<start> methods overlay item create item and the size so now what this first <end>
<start> methods overlay item create item and the size so now what this first <end>
<start> methods overlay item create item and the size so now what this first <end>
<start> drawable item that's being passed in to align to where we actually want to <end>
<start> align to where we actually want to place the pin point so what we're gonna do <end>
<start> on the super method we're gonna say bound center and then we're gonna add <end>
<start> on the super method we're gonna say bound center and then we're gonna add <end>
<start> on the super method we're gonna say bound center and then we're gonna add <end>
<start> found the point to the center of our drawable and that's where it's going <end>
<start> kind of pinpoint on our map now well now what we want to do is <end>
<start> want to add some items that we can refer to or instance of classes that we <end>
<start> refer to within this class so what we want to do is we want to say <end>
<start> refer to within this class so what we want to do is we want to say <end>
<start> refer to within this class so what we want to do is we want to say <end>
<start> array array list of the type overlay item we're gonna call this map <end>
<start> array array list of the type overlay item we're gonna call this map <end>
<start> array array list of the type overlay item we're gonna call this map <end>
<start> array array list of the type overlay item we're gonna call this map <end>
<start> whoops or pinpoints and we're gonna set <end>
<start> whoops or pinpoints and we're gonna set <end>
<start> whoops or pinpoints and we're gonna set <end>
<start> whoops or pinpoints and we're gonna set <end>
<start> whoops or pinpoints and we're gonna set <end>
<start> whoops or pinpoints and we're gonna set <end>
<start> equal to new arraylist of the type overlay and then open parentheses <end>
<start> equal to new arraylist of the type overlay and then open parentheses <end>
<start> we go we have our and we have an import set up and and we aren't obviously <end>
<start> we go we have our and we have an import set up and and we aren't obviously <end>
<start> isn't set to anything it's just a new arraylist and what we're also gonna <end>
<start> isn't set to anything it's just a new arraylist and what we're also gonna <end>
<start> isn't set to anything it's just a new arraylist and what we're also gonna <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> is a context so private context can't spell and we're just gonna call this <end>
<start> maybe something like that again we just have to import context now what we <end>
<start> maybe something like that again we just have to import context now what we <end>
<start> below again this is just another constructor this time what we're <end>
<start> below again this is just another constructor this time what we're <end>
<start> do is we're just going to refer to this as drawable m4 marker and also a <end>
<start> do is we're just going to refer to this as drawable m4 marker and also a <end>
<start> do is we're just going to refer to this as drawable m4 marker and also a <end>
<start> do is we're just going to refer to this as drawable m4 marker and also a <end>
<start> we're gonna call that c as well or whatever you guys want to refer to <end>
<start> as and what we want this constructor to do is basically create this <end>
<start> equal to the context that's being passed in it's basically now we just have <end>
<start> relate our drawable and our context so what we're going to do is just say <end>
<start> we're going to call this within the parentheses <end>
<start> we're going to call this within the parentheses <end>
<start> which again is our drawable item that's being passed in and then what we <end>
<start> the video but i this was see just change it to context so it's a little bit <end>
<start> the video but i this was see just change it to context so it's a little bit <end>
<start> the video but i this was see just change it to context so it's a little bit <end>
<start> simple to work with down here and we're all we're gonna do is set our c which <end>
<start> the context that's being passed in which we called context so that's all <end>
<start> the context that's being passed in which we called context so that's all <end>
<start> the context that's being passed in which we called context so that's all <end>
<start> context that's being passed in through this constructor so that's pretty <end>
<start> constructors again one that just handles a drawable being pass in all <end>
<start> gonna do is bound the center of the drawable item so we're gonna pin <end>
<start> through the center on the place that we touch on our map and that's how <end>
<start> graphical master like myself you probably want where you're going <end>
<start> need to create three buttons are three basically uh images and add it to <end>
<start> which is right here and then once it's highlighted which i'll show you how <end>
<start> awesome happens now just to let you guys know if you're curious for a <end>
<start> that's how much skill i have so if you guys you know really want me to i <end>
<start> that's how much skill i have so if you guys you know really want me to i <end>
<start> now that we have our three graphics within our project we're going to do <end>
<start> we're going to right click on our drawable and go to new android xml <end>
<start> so we're going to do is we're going to say custom button right in here <end>
<start> so we're going to do is we're going to say custom button right in here <end>
<start> so we're going to do is we're going to say custom button right in here <end>
<start> whatever you guys want customs fine make sure it's a drawable and then down <end>
<start> whatever you guys want customs fine make sure it's a drawable and then down <end>
<start> the root element for the xml file this kind of gives us a starting ground <end>
<start> the root element for the xml file this kind of gives us a starting ground <end>
<start> the root element for the xml file this kind of gives us a starting ground <end>
<start> the root element for the xml file this kind of gives us a starting ground <end>
<start> can clean out later but it's easier if you just go down and hit selector <end>
<start> choose that within this option here and then hit finish and it should <end>
<start> choose that within this option here and then hit finish and it should <end>
<start> choose that within this option here and then hit finish and it should <end>
<start> something like this so now what we need to do is we need to add our three <end>
<start> or three pictures within here which are called items we need one that's going <end>
<start> or three pictures within here which are called items we need one that's going <end>
<start> be just our regular picture so we're going to say android drawable equals <end>
<start> be just our regular picture so we're going to say android drawable equals <end>
<start> be just our regular picture so we're going to say android drawable equals <end>
<start> be just our regular picture so we're going to say android drawable equals <end>
<start> be just our regular picture so we're going to say android drawable equals <end>
<start> drawable /what if you guys label it as i love them on as plus and there we <end>
<start> we're done with our first item now what we need is we need to say if it's <end>
<start> when it's highlighted if that's true then we're going to want a <end>
<start> when it's highlighted if that's true then we're going to want a <end>
<start> it's highlighted or if it's being focused on we're going to say if <end>
<start> it's highlighted or if it's being focused on we're going to say if <end>
<start> it's highlighted or if it's being focused on we're going to say if <end>
<start> it's highlighted or if it's being focused on we're going to say if <end>
<start> it's highlighted or if it's being focused on we're going to say if <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> true we want android drawable to equal at drawable and then plus highlight <end>
<start> again whatever you guys labeled your highlighted image as and then finish <end>
<start> again whatever you guys labeled your highlighted image as and then finish <end>
<start> that item and one last item here and this is going to be our if it's <end>
<start> pressed so we're going to do now is just say android state <end>
<start> pressed so we're going to do now is just say android state <end>
<start> pressed so we're going to do now is just say android state <end>
<start> right here if that's equal to true then we want to also have a <end>
<start> right here if that's equal to true then we want to also have a <end>
<start> background as well so we're going to say android drawable and that's going <end>
<start> background as well so we're going to say android drawable and that's going <end>
<start> background as well so we're going to say android drawable and that's going <end>
<start> background as well so we're going to say android drawable and that's going <end>
<start> equal at drawable forward slash plus selected work in whatever you <end>
<start> equal at drawable forward slash plus selected work in whatever you <end>
<start> equal at drawable forward slash plus selected work in whatever you <end>
<start> equal at drawable forward slash plus selected work in whatever you <end>
<start> equal at drawable forward slash plus selected work in whatever you <end>
<start> again it's an xml file within our drawable folder but that's fine now <end>
<start> again it's an xml file within our drawable folder but that's fine now <end>
<start> we're going to do is we're going to go into our main xml the one that <end>
<start> or whatever view you guys want we're going to change this add one button <end>
<start> or whatever view you guys want we're going to change this add one button <end>
<start> or whatever view you guys want we're going to change this add one button <end>
<start> find that button add one and we're just going to delete the text and we're <end>
<start> find that button add one and we're just going to delete the text and we're <end>
<start> find that button add one and we're just going to delete the text and we're <end>
<start> to say android background equal to now our custom xml within our drawable <end>
<start> to say android background equal to now our custom xml within our drawable <end>
<start> to say android background equal to now our custom xml within our drawable <end>
<start> we're going to say at drawable forward slash custom and we are good to go <end>
<start> we're going to say at drawable forward slash custom and we are good to go <end>
<start> we're going to say at drawable forward slash custom and we are good to go <end>
<start> let's check it double check like always yep snip-snip clip the video because <end>
<start> awesome it was just kind of kind of lame so we're just going to find clean <end>
<start> those areas because you know the order of the items is important so that's <end>
<start> those areas because you know the order of the items is important so that's <end>
<start> those areas because you know the order of the items is important so that's <end>
<start> those areas because you know the order of the items is important so that's <end>
<start> those areas because you know the order of the items is important so that's <end>
<start> keep it the same you know as we designed it in our photoshop skills and <end>
<start> keep it the same you know as we designed it in our photoshop skills and <end>
<start> even if we clicked it and all that stuff because we have everything <end>
<start> image and then we also want to move our press state to the top so cut that <end>
<start> paste it above and now we're good to go promise you this time i think <end>
<start> paste it above and now we're good to go promise you this time i think <end>
<start> run through everything and check if that's true or not and i'll show <end>
<start> run through everything and check if that's true or not and i'll show <end>
<start> guys what actually looks like now you guys were curious i just clipped <end>
<start> pointless and let's open that up there we go we got a custom button and you <end>
<start> selected right now or highlighted or focused as the android terminology <end>
<start> what's up guys welcome to your 180 fourth android tutorial for the new <end>
<start> such as like the text play whoa transparent there's not you can <end>
<start> works you know we can do all of all of our commands and stuff still hit <end>
<start> and there we go we can also do let's see here forgot which ones i applied it <end>
<start> and there we go we can also do let's see here forgot which ones i applied it <end>
<start> there but let's get into it it's gonna be pretty simple pretty easy so <end>
<start> forward to that and what we're gonna do is we're <end>
<start> be either pick out a few applications or we can actually apply the theme to <end>
<start> the menu we're gonna set up this to be the white or the light theme so <end>
<start> the menu we're gonna set up this to be the white or the light theme so <end>
<start> sure you're within this part of the activity line and then we're just <end>
<start> sure you're within this part of the activity line and then we're just <end>
<start> sure you're within this part of the activity line and then we're just <end>
<start> sure you're within this part of the activity line and then we're just <end>
<start> say android theme is equal to at android : style swagga as they <end>
<start> say android theme is equal to at android : style swagga as they <end>
<start> it and then we just apply our theme by going theme dot light for example <end>
<start> it and then we just apply our theme by going theme dot light for example <end>
<start> it and then we just apply our theme by going theme dot light for example <end>
<start> is the white background that i just showed you that i applied to the <end>
<start> activity i think or the whole application i should say so again <end>
<start> activity i think or the whole application i should say so again <end>
<start> to do that you can just cut this line here err cut it and paste it <end>
<start> to do that you can just cut this line here err cut it and paste it <end>
<start> to do that you can just cut this line here err cut it and paste it <end>
<start> that i'm not going to but let's let's see some of the other ones so again <end>
<start> activity and again give us some space within the opening bracket here <end>
<start> all that good stuff and lastly at least lastly that i know there's one <end>
<start> just black which is basically just a black background sometimes by <end>
<start> guys i'm gonna delete this because i don't really like the look of it <end>
<start> guys i'm gonna delete this because i don't really like the look of it <end>
<start> your main file main java file and these are the two classes that we're going <end>
<start> your main file main java file and these are the two classes that we're going <end>
<start> work with the first thing that we want to do is in our xml file right now <end>
<start> we're actually going to delete that text that's in there just delete that <end>
<start> we're actually going to delete that text that's in there just delete that <end>
<start> we're actually going to delete that text that's in there just delete that <end>
<start> then we're going to go over to the website where we got our key and <end>
<start> then we're going to go over to the website where we got our key and <end>
<start> then we're going to go over to the website where we got our key and <end>
<start> and this is basically for the xml layout it's a map view which is actually <end>
<start> for the for the market anyway so we're going to go back into our xml file <end>
<start> going to go back into our xml file and we're just going to hit control v <end>
<start> going to go back into our xml file and we're just going to hit control v <end>
<start> reference so we can refer to it in java so we're just going to say id <end>
<start> reference so we can refer to it in java so we're just going to say id <end>
<start> reference so we can refer to it in java so we're just going to say id <end>
<start> reference so we can refer to it in java so we're just going to say id <end>
<start> reference so we can refer to it in java so we're just going to say id <end>
<start> quotations at plus id /m v format view main something like that now <end>
<start> quotations at plus id /m v format view main something like that now <end>
<start> quotations at plus id /m v format view main something like that now <end>
<start> quotations at plus id /m v format view main something like that now <end>
<start> thing that we want to do is we want to set up a reference and also set up <end>
<start> called an activity anymore it's actually going to be a map activity so you <end>
<start> want to make sure you change that otherwise it's not going to work <end>
<start> want to make sure you change that otherwise it's not going to work <end>
<start> want to make sure you change that otherwise it's not going to work <end>
<start> then we just have to import that and implement the method from the mac <end>
<start> then we just have to import that and implement the method from the mac <end>
<start> then we just have to import that and implement the method from the mac <end>
<start> then we just have to import that and implement the method from the mac <end>
<start> activity and we're pretty much good to go again it won't work if you have <end>
<start> activity and we're pretty much good to go again it won't work if you have <end>
<start> this for this tutorial and then we're also just going to go into our <end>
<start> and delete the activity one because we no longer <end>
<start> since we're working with map activity so there we go we're pretty much good <end>
<start> since we're working with map activity so there we go we're pretty much good <end>
<start> just set up a reference real quick so let's make it a variable up here <end>
<start> just set up a reference real quick so let's make it a variable up here <end>
<start> just set up a reference real quick so let's make it a variable up here <end>
<start> view map we're going to call it and import map view nothing new again <end>
<start> view map we're going to call it and import map view nothing new again <end>
<start> the most part here but we're just setting up the setting up all the <end>
<start> the most part here but we're just setting up the setting up all the <end>
<start> the most part here but we're just setting up the setting up all the <end>
<start> the most part here but we're just setting up the setting up all the <end>
<start> the most part here but we're just setting up the setting up all the <end>
<start> the most part here but we're just setting up the setting up all the <end>
<start> stuff view bad d and then if everything's set up right we can run <end>
<start> stuff view bad d and then if everything's set up right we can run <end>
<start> and we're just going to hit and we should get something like this so <end>
<start> and we're just going to hit and we should get something like this so <end>
<start> and we're just going to hit and we should get something like this so <end>
<start> and we're just going to hit and we should get something like this so <end>
<start> neat pretty cool all that good stuff but let's say we want to enable a <end>
<start> neat pretty cool all that good stuff but let's say we want to enable a <end>
<start> function within our map so we're just going to set that up real <end>
<start> function within our map so we're just going to set that up real <end>
<start> function within our map so we're just going to set that up real <end>
<start> function within our map so we're just going to set that up real <end>
<start> function within our map so we're just going to set that up real <end>
<start> pretty simple we're going to say map dot set built-in zoom to be true and <end>
<start> pretty simple we're going to say map dot set built-in zoom to be true and <end>
<start> pretty simple we're going to say map dot set built-in zoom to be true and <end>
<start> when we run our application again all right for some reason i thought when <end>
<start> to mention if you guys are getting like a gray grid which you know might <end>
<start> tutorial and make sure you get another another key for your application <end>
<start> and again with me travis and what we're going to do in this tutorial <end>
<start> basically let me go back here again you can switch your landscape and <end>
<start> basically let me go back here again you can switch your landscape and <end>
<start> then we switch over in the landscape mode some of those buttons would run <end>
<start> then we switch over in the landscape mode some of those buttons would run <end>
<start> that's what we're going to do in this tutorial noth-nothing suite for the <end>
<start> that's what we're going to do in this tutorial noth-nothing suite for the <end>
<start> that's what we're going to do in this tutorial noth-nothing suite for the <end>
<start> part but it's useful you know you can set again the orientation in <end>
<start> part but it's useful you know you can set again the orientation in <end>
<start> manifest like we've done before i believe so it won't rotate but let's <end>
<start> you do want to allow it to rotate and you just want to switch up the <end>
<start> you do want to allow it to rotate and you just want to switch up the <end>
<start> called or that layout called main was it okay so we open up our main xml <end>
<start> called or that layout called main was it okay so we open up our main xml <end>
<start> called or that layout called main was it okay so we open up our main xml <end>
<start> called or that layout called main was it okay so we open up our main xml <end>
<start> basically we're just going to grab everything that's in here and copy <end>
<start> some stuff so now what we need to do is right here we created a <end>
<start> some stuff so now what we need to do is right here we created a <end>
<start> yet but basically this layout land it's where we're going to define what <end>
<start> so we're going to do is just right click on this folder and go to new android <end>
<start> so we're going to do is just right click on this folder and go to new android <end>
<start> so we're going to do is just right click on this folder and go to new android <end>
<start> so we're going to do is just right click on this folder and go to new android <end>
<start> file and we need to call it the exact same name so we're going to say <end>
<start> file and we need to call it the exact same name so we're going to say <end>
<start> landscape or whatever your portrait xml so there we go we have that set up <end>
<start> what we're going to do is basically let's see <end>
<start> paste everything and you know check it out that's what it's going to look <end>
<start> paste everything and you know check it out that's what it's going to look <end>
<start> paste everything and you know check it out that's what it's going to look <end>
<start> as of now just like i showed you on the emulator but now we're just going <end>
<start> here like i said it's not too complex of a tutorial but we're just going <end>
<start> change this to horizontal you know and then check it out it's a little <end>
<start> change this to horizontal you know and then check it out it's a little <end>
<start> change this to horizontal you know and then check it out it's a little <end>
<start> change this to horizontal you know and then check it out it's a little <end>
<start> change this to horizontal you know and then check it out it's a little <end>
<start> change this to horizontal you know and then check it out it's a little <end>
<start> different a little bit nicer not really but you know it works and then we <end>
<start> different a little bit nicer not really but you know it works and then we <end>
<start> different a little bit nicer not really but you know it works and then we <end>
<start> different a little bit nicer not really but you know it works and then we <end>
<start> also do something like new textview just that appears in the landscape view <end>
<start> textview android text nothing awesome but we're going to <end>
<start> textview android text nothing awesome but we're going to <end>
<start> with it android layout width is going to <end>
<start> text and you guys are pretty familiar <end>
<start> text and you guys are pretty familiar <end>
<start> text and you guys are pretty familiar <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> the whole xml thing by now i hope lisi understand how to do it and you can <end>
<start> around and get rap oh wait rap contact content not rap text what am i <end>
<start> around and get rap oh wait rap contact content not rap text what am i <end>
<start> around and get rap oh wait rap contact content not rap text what am i <end>
<start> around and get rap oh wait rap contact content not rap text what am i <end>
<start> around and get rap oh wait rap contact content not rap text what am i <end>
<start> around and get rap oh wait rap contact content not rap text what am i <end>
<start> so there we go um now we have this magic magic <end>
<start> so there we go um now we have this magic magic <end>
<start> right now so we're going to say for the height rap content and shibam there <end>
<start> right now so we're going to say for the height rap content and shibam there <end>
<start> right now so we're going to say for the height rap content and shibam there <end>
<start> again a central thing you guys need to know before this tutorial is <end>
<start> again a central thing you guys need to know before this tutorial is <end>
<start> again a central thing you guys need to know before this tutorial is <end>
<start> when you define two different you know the portrait view in the landscape <end>
<start> when you define two different you know the portrait view in the landscape <end>
<start> thing is you also want to have all of your references the exact same in <end>
<start> thing is you also want to have all of your references the exact same in <end>
<start> thing is you also want to have all of your references the exact same in <end>
<start> or in portrait mode so there we go let's just test it out real quick <end>
<start> or in portrait mode so there we go let's just test it out real quick <end>
<start> even use it again i just want to show you guys you have the availability to <end>
<start> giving you guys the option or the choices to do so like i said i just <end>
<start> once we go over there and again our references are the exact same so <end>
<start> once we go over there and again our references are the exact same so <end>
<start> going to click this as well and as you can see if we you know if we add <end>
<start> going to click this as well and as you can see if we you know if we add <end>
<start> here it's at six right now and if we switch it over it kind of <end>
<start> here it's at six right now and if we switch it over it kind of <end>
<start> start a new activity again it's pretty simple we're going to say start <end>
<start> start a new activity again it's pretty simple we're going to say start <end>
<start> and again this will take an intent so we need to create an intent and we're <end>
<start> and again this will take an intent so we need to create an intent and we're <end>
<start> and again this will take an intent so we need to create an intent and we're <end>
<start> to call this intent our intent and what we're going to set this <end>
<start> to call this intent our intent and what we're going to set this <end>
<start> to call this intent our intent and what we're going to set this <end>
<start> to call this intent our intent and what we're going to set this <end>
<start> to is again a new intent and before we say our action name like calmed <end>
<start> to is again a new intent and before we say our action name like calmed <end>
<start> to is again a new intent and before we say our action name like calmed <end>
<start> to is again a new intent and before we say our action name like calmed <end>
<start> to is again a new intent and before we say our action name like calmed <end>
<start> basically a comm dot you know the new boston dot starting point all <end>
<start> show you guys a different way that we can set up an intent again we have <end>
<start> import it but we're going to set up an intent based off a class variable <end>
<start> import it but we're going to set up an intent based off a class variable <end>
<start> import it but we're going to set up an intent based off a class variable <end>
<start> what we need to do now is set up a class variable so again above our intent <end>
<start> we're going to set up a class variable called class or i'm sorry we're going <end>
<start> we're going to set up a class variable called class or i'm sorry we're going <end>
<start> we're going to set up a class variable called class or i'm sorry we're going <end>
<start> call it our class or whatever you guys want to define this as and when we <end>
<start> call it our class or whatever you guys want to define this as and when we <end>
<start> set this variable equal to is something we can use a method from the <end>
<start> called class so we can say type class and we can use this method for the <end>
<start> and it gives us a string with it or we need to put a string within here <end>
<start> and it gives us a string with it or we need to put a string within here <end>
<start> basically what we can do now is say calm dot the new boston dot travis <end>
<start> starting point instead of you know our action name was all uppercase this is <end>
<start> starting point you can see that up here here's our package name comm dot the <end>
<start> starting point you can see that up here here's our package name comm dot the <end>
<start> starting point class so it's kind of a reference to that and basically <end>
<start> class variable so we're going to say again r this current classes context <end>
<start> it's called menu so class name dot this and then we're going to comma and in <end>
<start> it's called menu so class name dot this and then we're going to comma and in <end>
<start> it's called menu so class name dot this and then we're going to comma and in <end>
<start> second parameter we're going to type our class which is our class variable <end>
<start> just set up just set <end>
<start> and then we can type our intent here so there we go that's basically we'll <end>
<start> guys to you know create some sort of background image and it doesn't have <end>
<start> guys to you know create some sort of background image and it doesn't have <end>
<start> be perfect like like the dimensions i'm not positive exactly which <end>
<start> you guys will want to use what i use for this image i believe was 400 by 600 <end>
<start> you guys will want to use what i use for this image i believe was 400 by 600 <end>
<start> then just create something simple it doesn't have to be beautiful or <end>
<start> then just create something simple it doesn't have to be beautiful or <end>
<start> sure the name is all lower cased and also you guys want to create maybe <end>
<start> sound that you might want to put in for application because we're going to add <end>
<start> sound that you might want to put in for application because we're going to add <end>
<start> sound that you might want to put in for application because we're going to add <end>
<start> wallpaper and what we're going to do is basically put those in the right <end>
<start> stuff so i'm going to open up my finder or basically you know my computer <end>
<start> stuff so i'm going to open up my finder or basically you know my computer <end>
<start> whatever and within here i saved it again the project or workspace under <end>
<start> whatever and within here i saved it again the project or workspace under <end>
<start> whatever and within here i saved it again the project or workspace under <end>
<start> documents and i called it the new boston and then we set up our project <end>
<start> documents and i called it the new boston and then we set up our project <end>
<start> the new boston as well and then we have a resource folder and here's <end>
<start> the new boston as well and then we have a resource folder and here's <end>
<start> the new boston as well and then we have a resource folder and here's <end>
<start> drawable that's where we're going to drag and drop this image into <end>
<start> drawable that's where we're going to drag and drop this image into <end>
<start> i'm not going to the other thing we want to do is do our splash and our <end>
<start> into our rar folder again if you guys don't have a rar <end>
<start> into our rar folder again if you guys don't have a rar <end>
<start> the folder you want to set that up not too difficult and there we go <end>
<start> the folder you want to set that up not too difficult and there we go <end>
<start> basically added resources to a project now and again you guys might have <end>
<start> to just drag and drop them into this actual <end>
<start> to just drag and drop them into this actual <end>
<start> if you look they aren't added yet what we need to do is go up to project <end>
<start> if you look they aren't added yet what we need to do is go up to project <end>
<start> project tab and go to clean now kind of clean our project out a little <end>
<start> project tab and go to clean now kind of clean our project out a little <end>
<start> project tab and go to clean now kind of clean our project out a little <end>
<start> update everything and rebuild it there we go we have our splash background <end>
<start> update everything and rebuild it there we go we have our splash background <end>
<start> to have this image that we imported as the background for a splash <end>
<start> to have this image that we imported as the background for a splash <end>
<start> to have this image that we imported as the background for a splash <end>
<start> basically what a splash activity is it just appears for five seconds tells <end>
<start> people your name plays a little music and it's over so it's it's not not <end>
<start> talking about so we're going to do is right-click on this layout here and <end>
<start> talking about so we're going to do is right-click on this layout here and <end>
<start> go to other and then under this android folder again we're going to <end>
<start> go to other and then under this android folder again we're going to <end>
<start> go to other and then under this android folder again we're going to <end>
<start> android xml to setup a new layout we hit next and then we have a we have to <end>
<start> android xml to setup a new layout we hit next and then we have a we have to <end>
<start> our layout and we're going to label this splash and you also have to put dot <end>
<start> our layout and we're going to label this splash and you also have to put dot <end>
<start> and make sure it has the layout tab it should and we're good to go we're <end>
<start> going to hit finish and there we go we have blank slate to work with we're <end>
<start> going to hit finish and there we go we have blank slate to work with we're <end>
<start> going to do one thing real simple again we're just going into the code <end>
<start> going to do one thing real simple again we're just going into the code <end>
<start> so you won't have to worry about it i mean we can change that to fill <end>
<start> if you want so basically it's going to take up the whole screen and then <end>
<start> want to use the android code called back round i wasn't completely <end>
<start> want to use the android code called back round i wasn't completely <end>
<start> but anyways it's called background and then how we reference it we're going <end>
<start> say at drawable let's just do it this way hit equals and then at <end>
<start> say at drawable let's just do it this way hit equals and then at <end>
<start> forward slash and then our actual image name <end>
<start> again so then we're going to say add drawable and then splash under <end>
<start> again so then we're going to say add drawable and then splash under <end>
<start> again so then we're going to say add drawable and then splash under <end>
<start> again so then we're going to say add drawable and then splash under <end>
<start> again so then we're going to say add drawable and then splash under <end>
<start> background is what i labeled my background image as and you if you <end>
<start> background is what i labeled my background image as and you if you <end>
<start> the p&amp;g or the extension you're going to get an air as well so you don't want <end>
<start> the p&amp;g or the extension you're going to get an air as well so you don't want <end>
<start> folder now we're just going to save it and check it out looks pretty <end>
<start> folder now we're just going to save it and check it out looks pretty <end>
<start> folder now we're just going to save it and check it out looks pretty <end>
<start> so again we're just going to say else if we're probably going to learn <end>
<start> so again we're just going to say else if we're probably going to learn <end>
<start> setting text in this tutorial as well even though you guys already know that <end>
<start> setting text in this tutorial as well even though you guys already know that <end>
<start> believe so we're going to call this one else if wtf all uppercase and <end>
<start> stands for where's the fridge so we're going to create if the text equals <end>
<start> every time this button is clicked we can say display which is our textview <end>
<start> every time this button is clicked we can say display which is our textview <end>
<start> every time this button is clicked we can say display which is our textview <end>
<start> every time this button is clicked we can say display which is our textview <end>
<start> every time this button is clicked we can say display which is our textview <end>
<start> every time this button is clicked we can say display which is our textview <end>
<start> set text and we're going to do is set this equal to whatever the input is <end>
<start> set text and we're going to do is set this equal to whatever the input is <end>
<start> set text and we're going to do is set this equal to whatever the input is <end>
<start> set text and we're going to do is set this equal to whatever the input is <end>
<start> we're going to say check and then it's gonna you know just set the text <end>
<start> we're going to say check and then it's gonna you know just set the text <end>
<start> well or we're just going to say else because this will be everything else <end>
<start> it's none of those options we're going to say else and then we can say <end>
<start> it's none of those options we're going to say else and then we can say <end>
<start> it's none of those options we're going to say else and then we can say <end>
<start> it's none of those options we're going to say else and then we can say <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> dot set text to 'invalid again and also we're going to just change this back <end>
<start> kind of the starting point so we're going to say display dot set gravity <end>
<start> kind of the starting point so we're going to say display dot set gravity <end>
<start> kind of the starting point so we're going to say display dot set gravity <end>
<start> kind of the starting point so we're going to say display dot set gravity <end>
<start> sinner so again we refer to the gravity <end>
<start> sinner so again we refer to the gravity <end>
<start> and then type sinner and that's about it we can change the text back just to <end>
<start> and lowercase so we're going to say display and i mean pretty much all <end>
<start> and lowercase so we're going to say display and i mean pretty much all <end>
<start> and lowercase so we're going to say display and i mean pretty much all <end>
<start> and lowercase so we're going to say display and i mean pretty much all <end>
<start> and lowercase so we're going to say display and i mean pretty much all <end>
<start> is getting confident and you guys can kind of look through these methods <end>
<start> is getting confident and you guys can kind of look through these methods <end>
<start> is getting confident and you guys can kind of look through these methods <end>
<start> figure out for the most part what they do at least the set because we can <end>
<start> figure out for the most part what they do at least the set because we can <end>
<start> figure out for the most part what they do at least the set because we can <end>
<start> some of these some of these things up and that's what we pretty much use <end>
<start> some of these some of these things up and that's what we pretty much use <end>
<start> set gravity and this one's going to be set <end>
<start> set gravity and this one's going to be set <end>
<start> i mean we've used set text as well but this one's going to set text color <end>
<start> we're going to give it the color blue and again we can refer to the <end>
<start> class just like we did with the grass set gravity and we refer to the <end>
<start> class just like we did with the grass set gravity and we refer to the <end>
<start> class we refer to a class called color and it's kind of scroll through some <end>
<start> green blue and integer for the most part and just rgb as well or you can just <end>
<start> green blue and integer for the most part and just rgb as well or you can just <end>
<start> green blue and integer for the most part and just rgb as well or you can just <end>
<start> green blue and integer for the most part and just rgb as well or you can just <end>
<start> use this blue that they have set up and there we go pretty much <end>
<start> use this blue that they have set up and there we go pretty much <end>
<start> you guys simple stuff for the most part i just wanted to show you guys <end>
<start> you guys simple stuff for the most part i just wanted to show you guys <end>
<start> first time on the emulator so let's just get into <end>
<start> first time on the emulator so let's just get into <end>
<start> now we have a random string variable which is basically a random integer <end>
<start> now we have a random string variable which is basically a random integer <end>
<start> and we're first gonna do is kind of talk about some of these parameters that <end>
<start> and we're first gonna do is kind of talk about some of these parameters that <end>
<start> being passed in we get a context which is basically we can get the package <end>
<start> that good stuff so we're gonna refer to that a little bit we also get an <end>
<start> that good stuff so we're gonna refer to that a little bit we also get an <end>
<start> that good stuff so we're gonna refer to that a little bit we also get an <end>
<start> we're gonna say hey if there's more than one we need to kind of reference all <end>
<start> those and we want to do the same thing for all the you know different ids <end>
<start> those and we want to do the same thing for all the you know different ids <end>
<start> person can have of our widget so what we need to do is we need to set up an <end>
<start> this isn't gonna change because you know this on update method is gonna give <end>
<start> that information it's not going to change just gonna call it in this <end>
<start> we're just going to get the length to determine how many there are so now <end>
<start> we're just going to get the length to determine how many there are so now <end>
<start> have this variable in and what we're gonna do is we're gonna create a <end>
<start> loop so we're just gonna say for and i which we're just creating again is <end>
<start> loop so we're just gonna say for and i which we're just creating again is <end>
<start> loop so we're just gonna say for and i which we're just creating again is <end>
<start> loop so we're just gonna say for and i which we're just creating again is <end>
<start> loop so we're just gonna say for and i which we're just creating again is <end>
<start> to zero to start out with and semicolon and then we're gonna say as long as i <end>
<start> to zero to start out with and semicolon and then we're gonna say as long as i <end>
<start> to zero to start out with and semicolon and then we're gonna say as long as i <end>
<start> to zero to start out with and semicolon and then we're gonna say as long as i <end>
<start> less than n which is you know the length less than n which is you know the <end>
<start> less than n which is you know the length less than n which is you know the <end>
<start> less than n which is you know the length less than n which is you know the <end>
<start> is we're going to again semicolon and we're just gonna add one to each <end>
<start> is we're going to again semicolon and we're just gonna add one to each <end>
<start> is we're going to again semicolon and we're just gonna add one to each <end>
<start> is we're going to again semicolon and we're just gonna add one to each <end>
<start> getting passed in and now what we need to do within this for <end>
<start> from and set up the view according to that and what this is called as a <end>
<start> views so we're gonna say remote views we're just gonna call this v4 like <end>
<start> views so we're gonna say remote views we're just gonna call this v4 like <end>
<start> views so we're gonna say remote views we're just gonna call this v4 like <end>
<start> views so we're gonna say remote views we're just gonna call this v4 like <end>
<start> something like that we're gonna set this equal to new remote <end>
<start> something like that we're gonna set this equal to new remote <end>
<start> i'm sorry remote views with an s and then what we're gonna do is we're <end>
<start> i'm sorry remote views with an s and then what we're gonna do is we're <end>
<start> i'm sorry remote views with an s and then what we're gonna do is we're <end>
<start> say context because again we're getting passed into context we're just going <end>
<start> say context because again we're getting passed into context we're just going <end>
<start> relate to that and we're just gonna say get the package name and that's <end>
<start> relate to that and we're just gonna say get the package name and that's <end>
<start> relate to that and we're just gonna say get the package name and that's <end>
<start> layout set has within that package and all we're gonna do is hit a comma <end>
<start> then give it the second parameter which is the layout we want to mess <end>
<start> then give it the second parameter which is the layout we want to mess <end>
<start> with so we're gonna say r dot layout dot widget and again that's what we set <end>
<start> with so we're gonna say r dot layout dot widget and again that's what we set <end>
<start> with so we're gonna say r dot layout dot widget and again that's what we set <end>
<start> with so we're gonna say r dot layout dot widget and again that's what we set <end>
<start> with so we're gonna say r dot layout dot widget and again that's what we set <end>
<start> within you know our xml file for our initial layout was that widget layout <end>
<start> within you know our xml file for our initial layout was that widget layout <end>
<start> within you know our xml file for our initial layout was that widget layout <end>
<start> within you know our xml file for our initial layout was that widget layout <end>
<start> initial layout was that widget layout so again we just want to refer to that <end>
<start> say our view we're going to refer to that and we're gonna say set text <end>
<start> say our view we're going to refer to that and we're gonna say set text <end>
<start> say our view we're going to refer to that and we're gonna say set text <end>
<start> say our view we're going to refer to that and we're gonna say set text <end>
<start> as you can see it takes the id and also the text that we want to set to <end>
<start> of a concept where you can't understand what's going <end>
<start> of a concept where you can't understand what's going <end>
<start> so we're going to say our dot id dot <end>
<start> so we're going to say our dot id dot <end>
<start> text view our third text view and we're going to set this text equal to is <end>
<start> this random random string up here so we're just gonna say r and and <end>
<start> random string and then what we're gonna do is we're gonna give that <end>
<start> random string and then what we're gonna do is we're gonna give that <end>
<start> that's being passed in which they just called app widget manager like <end>
<start> that's being passed in which they just called app widget manager like <end>
<start> that's being passed in which they just called app widget manager like <end>
<start> that's being passed in which they just called app widget manager like <end>
<start> that's being passed in which they just called app widget manager like <end>
<start> and we're gonna use a method called update app widget and the first <end>
<start> and we're gonna use a method called update app widget and the first <end>
<start> and we're gonna use a method called update app widget and the first <end>
<start> we're gonna actually do before we set that up we're just gonna go above <end>
<start> remote view but still within our for loop and we're gonna set up a new <end>
<start> remote view but still within our for loop and we're gonna set up a new <end>
<start> remote view but still within our for loop and we're gonna set up a new <end>
<start> that is going to be the app app widget id something like that we're gonna <end>
<start> that is going to be the app app widget id something like that we're gonna <end>
<start> that is going to be the app app widget id something like that we're gonna <end>
<start> that is going to be the app app widget id something like that we're gonna <end>
<start> that is going to be the app app widget id something like that we're gonna <end>
<start> this equal to be our app widget ids and we're gonna set this equal to b i <end>
<start> this equal to be our app widget ids and we're gonna set this equal to b i <end>
<start> this equal to be our app widget ids and we're gonna set this equal to b i <end>
<start> have that variable that's what we're going to set our first parameter to <end>
<start> and that's what we're gonna refer to for a few and so it's just gonna update <end>
<start> and that's what we're gonna refer to for a few and so it's just gonna update <end>
<start> setting the contact or the setting the text view that's what's gonna happen <end>
<start> let's quickly run our application make sure it works and the thing to note <end>
<start> let's quickly run our application make sure it works and the thing to note <end>
<start> let's quickly run our application make sure it works and the thing to note <end>
<start> let's quickly run our application make sure it works and the thing to note <end>
<start> that we don't really have anything within our list it's already knows <end>
<start> that we don't really have anything within our list it's already knows <end>
<start> to our home screen click and hold go to widgets and we're gonna scroll down <end>
<start> to our home screen click and hold go to widgets and we're gonna scroll down <end>
<start> to our home screen click and hold go to widgets and we're gonna scroll down <end>
<start> to our home screen click and hold go to widgets and we're gonna scroll down <end>
<start> to our home screen click and hold go to widgets and we're gonna scroll down <end>
<start> the new bossin and it looks like it looks like <end>
<start> the new bossin and it looks like it looks like <end>
<start> the new bossin and it looks like it looks like <end>
<start> widget is too large for the screen so you know i don't know if i dint <end>
<start> widget is too large for the screen so you know i don't know if i dint <end>
<start> those guidelines properly but i'm just gonna change that real quick within <end>
<start> those guidelines properly but i'm just gonna change that real quick within <end>
<start> width because i think that's what's giving us a problem like 274 <end>
<start> width because i think that's what's giving us a problem like 274 <end>
<start> something like that and let's let's test that out again so i guess i didn't <end>
<start> something like that and let's let's test that out again so i guess i didn't <end>
<start> something like that and let's let's test that out again so i guess i didn't <end>
<start> to check out that website because obviously i didn't it so let's go <end>
<start> to check out that website because obviously i didn't it so let's go <end>
<start> to check out that website because obviously i didn't it so let's go <end>
<start> and we're gonna add our widget adapter uh the new boston again as you can <end>
<start> and we're gonna add our widget adapter uh the new boston again as you can <end>
<start> and we're gonna add our widget adapter uh the new boston again as you can <end>
<start> and we're gonna add our widget adapter uh the new boston again as you can <end>
<start> and we're gonna add our widget adapter uh the new boston again as you can <end>
<start> here's our i don't know if you guys can see that but here's a random <end>
<start> again with me travis we're going to do in this tutorials <end>
<start> again with me travis we're going to do in this tutorials <end>
<start> within our open class or open class and also our our data classes well kind <end>
<start> within our open class or open class and also our our data classes well kind <end>
<start> within our open class or open class and also our our data classes well kind <end>
<start> within our open class or open class and also our our data classes well kind <end>
<start> within our open class or open class and also our our data classes well kind <end>
<start> activity for result so we're going to do basically first is set up a new <end>
<start> activity for result so we're going to do basically first is set up a new <end>
<start> activity for result so we're going to do basically first is set up a new <end>
<start> to do is basically set up a string variable so we'll call this string <end>
<start> to do is basically set up a string variable so we'll call this string <end>
<start> to do is basically set up a string variable so we'll call this string <end>
<start> to do is basically set up a string variable so we'll call this string <end>
<start> going to set up a new variable above our class and we're gonna say send send <end>
<start> going to set up a new variable above our class and we're gonna say send send <end>
<start> going to set up a new variable above our class and we're gonna say send send <end>
<start> that's we're going to call this so we're going to set send data up within <end>
<start> that's we're going to call this so we're going to set send data up within <end>
<start> switch case down here we're going to say these are kind of the answers for <end>
<start> switch case down here we're going to say these are kind of the answers for <end>
<start> switch case down here we're going to say these are kind of the answers for <end>
<start> most part to do we set up an answers not positive no all right so we're gonna <end>
<start> most part to do we set up an answers not positive no all right so we're gonna <end>
<start> most part to do we set up an answers not positive no all right so we're gonna <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> send data we're going to say if it's crazy we're gonna say probably right <end>
<start> quotations copy paste definitely right and <end>
<start> quotations copy paste definitely right and <end>
<start> quotations copy paste definitely right and <end>
<start> we'll say spot-on oh no i hear a lot of british people say <end>
<start> we'll say spot-on oh no i hear a lot of british people say <end>
<start> we'll say spot-on oh no i hear a lot of british people say <end>
<start> going to do is set up our test text view that we set up up here i believe <end>
<start> going to do is set up our test text view that we set up up here i believe <end>
<start> test and that's the text view below all of our radio buttons in our radio <end>
<start> test and that's the text view below all of our radio buttons in our radio <end>
<start> we're going to do that outside of our switching case so we're just going <end>
<start> say test dot set text this is just to make sure our radio button is <end>
<start> make sure our radio button is working we're going to set it to our send <end>
<start> make sure our radio button is working we're going to set it to our send <end>
<start> so there we go basically as you can see here's <end>
<start> so there we go basically as you can see here's <end>
<start> statement and it's going to call this method where it's going to change <end>
<start> test text so there we go basically set that up and now we're going to set <end>
<start> test text so there we go basically set that up and now we're going to set <end>
<start> test text so there we go basically set that up and now we're going to set <end>
<start> our just kind of messing around as well we're going to set up our start <end>
<start> our just kind of messing around as well we're going to set up our start <end>
<start> intent and well first let's use the method start activity for results <end>
<start> intent and well first let's use the method start activity for results <end>
<start> intent and well first let's use the method start activity for results <end>
<start> intent and well first let's use the method start activity for results <end>
<start> intent and well first let's use the method start activity for results <end>
<start> going to say i because that's what we're going to label our intent and now all <end>
<start> have to do is basically start our activity for results and we also have <end>
<start> have to do is basically start our activity for results and we also have <end>
<start> and then we're going to set up an intent obviously so we're going to call <end>
<start> intent i we're going to set it equal to <end>
<start> intent i we're going to set it equal to <end>
<start> intent i equals new intent i'm just going to copy this line here and <end>
<start> kind of has a reference and then any time we use this start activity for <end>
<start> result we need to import that method basically on activity results so <end>
<start> result we need to import that method basically on activity results so <end>
<start> result we need to import that method basically on activity results so <end>
<start> this comes from our activity class so we're going to say on activity <end>
<start> this comes from our activity class so we're going to say on activity <end>
<start> this comes from our activity class so we're going to say on activity <end>
<start> this comes from our activity class so we're going to say on activity <end>
<start> this comes from our activity class so we're going to say on activity <end>
<start> right here again it takes in two integers and an intent i'll break <end>
<start> down more as we use this method but basically we've set this method up <end>
<start> down more as we use this method but basically we've set this method up <end>
<start> down more as we use this method but basically we've set this method up <end>
<start> down more as we use this method but basically we've set this method up <end>
<start> sure those radio buttons work and there we go again i'll explain that a <end>
<start> sure those radio buttons work and there we go again i'll explain that a <end>
<start> sure those radio buttons work and there we go again i'll explain that a <end>
<start> sure those radio buttons work and there we go again i'll explain that a <end>
<start> bit more in the next tutorial when we work with actual passing the data <end>
<start> getting the result data but we're going to go through the start activity for <end>
<start> getting the result data but we're going to go through the start activity for <end>
<start> getting the result data but we're going to go through the start activity for <end>
<start> now that's telling you guys about now the first thing we need to do in <end>
<start> now that's telling you guys about now the first thing we need to do in <end>
<start> now that's telling you guys about now the first thing we need to do in <end>
<start> current time from the system which is the android so that's basically the <end>
<start> concept of this lesson and what we need to do is we need to set up a <end>
<start> above our on create method called show results and we also need to <end>
<start> above our on create method called show results and we also need to <end>
<start> above our on create method called show results and we also need to <end>
<start> above our on create method called show results and we also need to <end>
<start> above our on create method called show results and we also need to <end>
<start> above our on create method called show results and we also need to <end>
<start> above our on create method called show results and we also need to <end>
<start> two buttons called start and stop all right no no no we need to call <end>
<start> two buttons called start and stop all right no no no we need to call <end>
<start> two buttons called start and stop all right no no no we need to call <end>
<start> two long's which is start and stop so we can <end>
<start> two long's which is start and stop so we can <end>
<start> two long's which is start and stop so we can <end>
<start> with you know a tenth of a second milliseconds milliseconds yeah <end>
<start> that's what we're working with is milliseconds so start stop and now <end>
<start> that's what we're working with is milliseconds so start stop and now <end>
<start> just need to kind of set up again a reference for show results which was <end>
<start> just need to kind of set up again a reference for show results which was <end>
<start> just need to kind of set up again a reference for show results which was <end>
<start> text view of our first tab so we're going to say show results <end>
<start> text view of our first tab so we're going to say show results <end>
<start> text view of our first tab so we're going to say show results <end>
<start> text view of our first tab so we're going to say show results <end>
<start> text view of our first tab so we're going to say show results <end>
<start> textview fine view by d r dot id dot tv show results or whatever you guys <end>
<start> textview fine view by d r dot id dot tv show results or whatever you guys <end>
<start> textview fine view by d r dot id dot tv show results or whatever you guys <end>
<start> to set up our own click listeners for those buttons so we're just gonna <end>
<start> to set up our own click listeners for those buttons so we're just gonna <end>
<start> button start dot set onclicklistener to this and button stop dot set on <end>
<start> button start dot set onclicklistener to this and button stop dot set on <end>
<start> button start dot set onclicklistener to this and button stop dot set on <end>
<start> button start dot set onclicklistener to this and button stop dot set on <end>
<start> listener to this nothing new there as well so <end>
<start> listener to this nothing new there as well so <end>
<start> right now we're going to go down to our switching case where we where the <end>
<start> right now we're going to go down to our switching case where we where the <end>
<start> right now we're going to go down to our switching case where we where the <end>
<start> right now we're going to go down to our switching case where we where the <end>
<start> happens so the first thing that we're going to do is we're going to set up <end>
<start> happens so the first thing that we're going to do is we're going to set up <end>
<start> starting variable right when we hit our start button we're going to get <end>
<start> current time from the system so again we created a long to handle that and <end>
<start> call it start so we're going to say start is equal to and then we're <end>
<start> call it start so we're going to say start is equal to and then we're <end>
<start> call it start so we're going to say start is equal to and then we're <end>
<start> to say system 4 into the system class and when we hit dot we can get <end>
<start> to say system 4 into the system class and when we hit dot we can get <end>
<start> time in milliseconds right here and so that's what we're going to that's <end>
<start> time in milliseconds right here and so that's what we're going to that's <end>
<start> we're going to use pretty simple i mean this right here is the core concept <end>
<start> we're going to use pretty simple i mean this right here is the core concept <end>
<start> we're going to use pretty simple i mean this right here is the core concept <end>
<start> this lesson just get you know whether you're working with velocities on <end>
<start> events you can you know start the time right when they touch the screen <end>
<start> events you can you know start the time right when they touch the screen <end>
<start> release the time right when they release the screen or get another time <end>
<start> release other touch event and then you can calculate some kind of velocity <end>
<start> release other touch event and then you can calculate some kind of velocity <end>
<start> release other touch event and then you can calculate some kind of velocity <end>
<start> release other touch event and then you can calculate some kind of velocity <end>
<start> we're also going to do that within the stop event so we're going to say <end>
<start> we're also going to do that within the stop event so we're going to say <end>
<start> stop variable is equal to again system dot current time and there we go i <end>
<start> stop variable is equal to again system dot current time and there we go i <end>
<start> stop variable is equal to again system dot current time and there we go i <end>
<start> textview so we're going to say was our text you called show result <end>
<start> textview so we're going to say was our text you called show result <end>
<start> actually we're going to say because if it's all about problem solving sorry <end>
<start> button and they never hit the start button then we're going to get some <end>
<start> again is just a simple if else or if statement so we're going to say if <end>
<start> again is just a simple if else or if statement so we're going to say if <end>
<start> again is just a simple if else or if statement so we're going to say if <end>
<start> again is just a simple if else or if statement so we're going to say if <end>
<start> is not equal zero i don't know and then we're going to print our textview <end>
<start> set up a new type of variable along result and this is going to be equal <end>
<start> set up a new type of variable along result and this is going to be equal <end>
<start> set up a new type of variable along result and this is going to be equal <end>
<start> set up a new type of variable along result and this is going to be equal <end>
<start> set up a new type of variable along result and this is going to be equal <end>
<start> our stop time - our starting time so basically it's going to be how long <end>
<start> our stop time - our starting time so basically it's going to be how long <end>
<start> our stop time - our starting time so basically it's going to be how long <end>
<start> our stop time - our starting time so basically it's going to be how long <end>
<start> took the person to go from start to stop and then we're going to say our <end>
<start> took the person to go from start to stop and then we're going to say our <end>
<start> took the person to go from start to stop and then we're going to say our <end>
<start> view which we call show result and we're going to say dot we're show results <end>
<start> view which we call show result and we're going to say dot we're show results <end>
<start> view which we call show result and we're going to say dot we're show results <end>
<start> view which we call show result and we're going to say dot we're show results <end>
<start> view which we call show result and we're going to say dot we're show results <end>
<start> it dot set text and now we just have to convert this long into a string so <end>
<start> just refer to the long class capital l ong dot and then we say to string <end>
<start> just refer to the long class capital l ong dot and then we say to string <end>
<start> just refer to the long class capital l ong dot and then we say to string <end>
<start> just refer to the long class capital l ong dot and then we say to string <end>
<start> and we're done i mean basically all we did is we got the current time at <end>
<start> and we're done i mean basically all we did is we got the current time at <end>
<start> time was not equal to zero oh so kind of forgot the key step <end>
<start> time was not equal to zero oh so kind of forgot the key step <end>
<start> with this is we need to set our starting equal to zero to begin with so <end>
<start> just going to say start equals zero within our on create method so that <end>
<start> just going to say start equals zero within our on create method so that <end>
<start> just going to say start equals zero within our on create method so that <end>
<start> just going to say start equals zero within our on create method so that <end>
<start> it will kind of problem-solve for us and then let's run the application <end>
<start> sure it works so again this is a millisecond so when we hit let's <end>
<start> sure it works so again this is a millisecond so when we hit let's <end>
<start> sure it works so again this is a millisecond so when we hit let's <end>
<start> sure it works so again this is a millisecond so when we hit let's <end>
<start> sure it works so again this is a millisecond so when we hit let's <end>
<start> hit stop is two hundred forty seven one milliseconds which is about two <end>
<start> one seconds that's lap two fifty four <end>
<start> in and i know i told you guys we'd render something last tutorial i kind <end>
<start> forgot about it so just uh you know we're gonna get into that in <end>
<start> stuff so let's just get into it what we're gonna do first within our <end>
<start> create method is type out our gl object that's being passed in we're just <end>
<start> create method is type out our gl object that's being passed in we're just <end>
<start> say dot gl clear color and this is basically saying hey when you call <end>
<start> clear command or actually this is basically just like setting the <end>
<start> value for the most part but what what this clear is all about you're <end>
<start> value for the most part but what what this clear is all about you're <end>
<start> like what why is it calling it to clear a color well basically all it's <end>
<start> like what why is it calling it to clear a color well basically all it's <end>
<start> is when you call the clear command you know sending this message its <end>
<start> what's up so what we're gonna do is we're gonna paint our background or <end>
<start> what's up so what we're gonna do is we're gonna paint our background or <end>
<start> like 0.8 and we're just gonna say f for float and for green we don't want <end>
<start> like 0.8 and we're just gonna say f for float and for green we don't want <end>
<start> green in there man green just isn't gonna happen in blue what would <end>
<start> like point to blue so again we can go from 0 to 1 and for alpha we don't <end>
<start> it to be transparent but so we're just gonna set to <end>
<start> again you guys get if you want transparency a little bit you can <end>
<start> to use this color thing we're gonna do that within our on surface create <end>
<start> for example we're just gonna really again to our gl ten object and <end>
<start> for example we're just gonna really again to our gl ten object and <end>
<start> we're gonna relate to our gl ten class <end>
<start> jill ten we're just gonna say dot gl underscore color buffer bit and <end>
<start> jill ten we're just gonna say dot gl underscore color buffer bit and <end>
<start> jill ten we're just gonna say dot gl underscore color buffer bit and <end>
<start> jill ten we're just gonna say dot gl underscore color buffer bit and <end>
<start> and see what happens and just you guys are gonna have to watch real closely <end>
<start> and see what happens and just you guys are gonna have to watch real closely <end>
<start> and see what happens and just you guys are gonna have to watch real closely <end>
<start> well basically what's happening is we call that within our on create method <end>
<start> well basically what's happening is we call that within our on create method <end>
<start> have this draw frame thing so if we move this clear command down into our <end>
<start> have this draw frame thing so if we move this clear command down into our <end>
<start> you tell me what to do and then that's what we set up within our on <end>
<start> method so again let's run it and as you can see it's just a solid red <end>
<start> so what we're gonna do is with them again are on create method we're <end>
<start> gonna say gl relating again to that gl 10 object and we're gonna say dot <end>
<start> clear again and this time we're gonna say depth of a float and by default <end>
<start> gonna be one that's what we're gonna set to i <end>
<start> this clear command and how we do that is again i don't know what that symbol <end>
<start> this clear command and how we do that is again i don't know what that symbol <end>
<start> above your enter key or your return key so just throw one of those in there <end>
<start> then again we're going to relate to our gl 10 class dot gl underscore depth <end>
<start> then again we're going to relate to our gl 10 class dot gl underscore depth <end>
<start> then again we're going to relate to our gl 10 class dot gl underscore depth <end>
<start> then again we're going to relate to our gl 10 class dot gl underscore depth <end>
<start> then again we're going to relate to our gl 10 class dot gl underscore depth <end>
<start> then again we're going to relate to our gl 10 class dot gl underscore depth <end>
<start> our depth buffer bit and so now it's gonna be like okay now i know <end>
<start> our depth buffer bit and so now it's gonna be like okay now i know <end>
<start> know it's always gonna be the same so for the most part whatever we're <end>
<start> know it's always gonna be the same so for the most part whatever we're <end>
<start> of people and have trouble with opengl but just some basic concepts here we <end>
<start> the color and we set the depth and we have to you call the clear command <end>
<start> we're gonna get into a lot more stuff with surrender so don't worry about <end>
<start> and i'll catch you guys in the next tutorial have a good <end>
<start> and what we're gonna do in this tutorial we're basically going to set <end>
<start> that let's set up some variables that we're going to use and they're gonna <end>
<start> that let's set up some variables that we're going to use and they're gonna <end>
<start> that let's set up some variables that we're going to use and they're gonna <end>
<start> that let's set up some variables that we're going to use and they're gonna <end>
<start> float types so we're gonna say float x float y and float sensor x and sensor <end>
<start> float types so we're gonna say float x float y and float sensor x and sensor <end>
<start> float types so we're gonna say float x float y and float sensor x and sensor <end>
<start> float types so we're gonna say float x float y and float sensor x and sensor <end>
<start> float types so we're gonna say float x float y and float sensor x and sensor <end>
<start> and then we're also going to set up a bitmap because again we're gonna <end>
<start> and then we're also going to set up a bitmap because again we're gonna <end>
<start> and then we're also going to set up a bitmap because again we're gonna <end>
<start> that ball to the screen so we're gonna say bitmap ball and then within our <end>
<start> that ball to the screen so we're gonna say bitmap ball and then within our <end>
<start> create method here we're gonna set up our ball reference real quickly <end>
<start> create method here we're gonna set up our ball reference real quickly <end>
<start> create method here we're gonna set up our ball reference real quickly <end>
<start> create method here we're gonna set up our ball reference real quickly <end>
<start> create method here we're gonna set up our ball reference real quickly <end>
<start> create method here we're gonna set up our ball reference real quickly <end>
<start> just bitmap factory dot decode resources a resource and then get resources <end>
<start> just bitmap factory dot decode resources a resource and then get resources <end>
<start> just bitmap factory dot decode resources a resource and then get resources <end>
<start> just bitmap factory dot decode resources a resource and then get resources <end>
<start> just bitmap factory dot decode resources a resource and then get resources <end>
<start> just bitmap factory dot decode resources a resource and then get resources <end>
<start> also which whichever id that we want so we're gonna say our drawable dots <end>
<start> ball and we have a bitmap set up we also might want to set up all of our <end>
<start> ball and we have a bitmap set up we also might want to set up all of our <end>
<start> ball and we have a bitmap set up we also might want to set up all of our <end>
<start> ball and we have a bitmap set up we also might want to set up all of our <end>
<start> values so we're gonna say x equals y equals sensor x equals sensor y <end>
<start> values so we're gonna say x equals y equals sensor x equals sensor y <end>
<start> values so we're gonna say x equals y equals sensor x equals sensor y <end>
<start> values so we're gonna say x equals y equals sensor x equals sensor y <end>
<start> values so we're gonna say x equals y equals sensor x equals sensor y <end>
<start> actually those not set equal to anything is we're gonna set that equal to <end>
<start> and now anytime our sensor changes it's gonna call this on sensor change <end>
<start> so what we can do is we can set up our so what we can do is we can set up <end>
<start> so what we can do is we can set up our so what we can do is we can set up <end>
<start> you know or float values for a sensor every time that our sensor is <end>
<start> you know or float values for a sensor every time that our sensor is <end>
<start> so what we can do is say sensor x and i believe this was our zero something <end>
<start> so what we can do is say sensor x and i believe this was our zero something <end>
<start> so what we can do is say sensor x and i believe this was our zero something <end>
<start> so what we can do is say sensor x and i believe this was our zero something <end>
<start> event and get the value so that's what we're gonna do it we're gonna say e <end>
<start> event and get the value so that's what we're gonna do it we're gonna say e <end>
<start> values and it returns a float and let's just scroll over here to the <end>
<start> and if we refer to the value 0 that's going to give us the pretty much the <end>
<start> and if we refer to the value 0 that's going to give us the pretty much the <end>
<start> and if we refer to the value 0 that's going to give us the pretty much the <end>
<start> and if we refer to the value 0 that's going to give us the pretty much the <end>
<start> and if we refer to the value 0 that's going to give us the pretty much the <end>
<start> axis and the 2 is going to give us the direction of the z axis so for <end>
<start> axis and the 2 is going to give us the direction of the z axis so for <end>
<start> sensor x what we want to do is we just want to say the values of 1 or i'm <end>
<start> sensor x what we want to do is we just want to say the values of 1 or i'm <end>
<start> of 0 and that will return basically the information from our sensor event <end>
<start> of 0 and that will return basically the information from our sensor event <end>
<start> the x direction or the x axis and then again we're just going to say sensor <end>
<start> the x direction or the x axis and then again we're just going to say sensor <end>
<start> the x direction or the x axis and then again we're just going to say sensor <end>
<start> is equal to e dot values and now we're looking for the y direction which is <end>
<start> is equal to e dot values and now we're looking for the y direction which is <end>
<start> and we don't really care about the z direction for our example and <end>
<start> and we don't really care about the z direction for our example and <end>
<start> though we set it equal to be a normal delayed sensor we can even delayed <end>
<start> though we set it equal to be a normal delayed sensor we can even delayed <end>
<start> though we set it equal to be a normal delayed sensor we can even delayed <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> little bit longer by just adding a thread sleep method to like 1,000 or <end>
<start> 1,000 like 1616 is about 60 frames per second and then we're just gonna add <end>
<start> try and a catch around this this sleep method here so that will kind of save <end>
<start> try and a catch around this this sleep method here so that will kind of save <end>
<start> some processing speed so it's not checking every time our sensor <end>
<start> some processing speed so it's not checking every time our sensor <end>
<start> slightly moves but you know it's good enough for example 60 times per <end>
<start> slightly moves but you know it's good enough for example 60 times per <end>
<start> to update basically our x and y values of our sensor that's pretty good <end>
<start> the activity that's gonna basically configure our widget we can get into <end>
<start> so just make sure you save the manifest close that and we're still gonna <end>
<start> so just make sure you save the manifest close that and we're still gonna <end>
<start> before we do that we need to set up a layout of what we want within our <end>
<start> before we do that we need to set up a layout of what we want within our <end>
<start> so again we're just gonna set up a new android xml file it's gonna be a <end>
<start> so again we're just gonna set up a new android xml file it's gonna be a <end>
<start> so again we're just gonna set up a new android xml file it's gonna be a <end>
<start> can add with in there and certain things you can't we'll get to that in a <end>
<start> and what we're gonna do is we're going to just call this widget yeah <end>
<start> and what we're gonna do is we're going to just call this widget yeah <end>
<start> sounds good widget xml hit finish and we also want to set up a layout <end>
<start> sounds good widget xml hit finish and we also want to set up a layout <end>
<start> configure class so we're also going to say a new xml file as well call <end>
<start> configure class so we're also going to say a new xml file as well call <end>
<start> widget config dot xml again a layout and <end>
<start> widget config dot xml again a layout and <end>
<start> widget config dot xml again a layout and <end>
<start> widget config dot xml again a layout and <end>
<start> text and a button so text fields drop in and edit text and also drop in a <end>
<start> i like this new version of the adt where you can your size it like that but <end>
<start> i like this new version of the adt where you can your size it like that but <end>
<start> we're going to do is we're going to switch over and just make sure we have <end>
<start> we're going to do is we're going to switch over and just make sure we have <end>
<start> references the same so we're just gonna have our button be widget button <end>
<start> references the same so we're just gonna have our button be widget button <end>
<start> config and we're gonna have our edit text also just be et widget <end>
<start> config and we're gonna have our edit text also just be et widget <end>
<start> config and we're gonna have our edit text also just be et widget <end>
<start> config and we're gonna have our edit text also just be et widget <end>
<start> config and we're gonna have our edit text also just be et widget <end>
<start> need to set up our actual widget so this is the widget xml file all we're <end>
<start> need to set up our actual widget so this is the widget xml file all we're <end>
<start> need to set up our actual widget so this is the widget xml file all we're <end>
<start> need to set up our actual widget so this is the widget xml file all we're <end>
<start> need to set up our actual widget so this is the widget xml file all we're <end>
<start> have is one tek textview a button and another textview so again nothing <end>
<start> have is one tek textview a button and another textview so again nothing <end>
<start> have is one tek textview a button and another textview so again nothing <end>
<start> have is one tek textview a button and another textview so again nothing <end>
<start> have is one tek textview a button and another textview so again nothing <end>
<start> complicated just make sure we ever we have our references set the same <end>
<start> complicated just make sure we ever we have our references set the same <end>
<start> we're gonna call this one tv config input and we're also going to have <end>
<start> we're gonna call this one tv config input and we're also going to have <end>
<start> we're gonna call this one tv config input and we're also going to have <end>
<start> we're gonna call this one tv config input and we're also going to have <end>
<start> button just be widget button widget open because this one's going to open <end>
<start> button just be widget button widget open because this one's going to open <end>
<start> button just be widget button widget open because this one's going to open <end>
<start> button just be widget button widget open because this one's going to open <end>
<start> activity and for a third textview we're gonna say tv widget update so there <end>
<start> activity and for a third textview we're gonna say tv widget update so there <end>
<start> activity and for a third textview we're gonna say tv widget update so there <end>
<start> go we basically have our widget configure and this is what's <end>
<start> go we basically have our widget configure and this is what's <end>
<start> set up so now what we're gonna do is we're going to go back over to <end>
<start> set up so now what we're gonna do is we're going to go back over to <end>
<start> widget stuff xml so within this file we set up the configuration already of <end>
<start> widget stuff xml so within this file we set up the configuration already of <end>
<start> widget stuff xml so within this file we set up the configuration already of <end>
<start> layout that we set up so we're just going to go browse and then it's <end>
<start> layout that we set up so we're just going to go browse and then it's <end>
<start> layout that we set up so we're just going to go browse and then it's <end>
<start> layouts and we called that one one widget so we're just gonna hit widget <end>
<start> layouts and we called that one one widget so we're just gonna hit widget <end>
<start> layouts and we called that one one widget so we're just gonna hit widget <end>
<start> layouts and we called that one one widget so we're just gonna hit widget <end>
<start> layout widget and then what we're gonna do is we're gonna set up the width <end>
<start> height so we're going to jump over to the developer page which i'm sure <end>
<start> height so we're going to jump over to the developer page which i'm sure <end>
<start> can pause the video and go to this website if you want to type it in <end>
<start> guidelines of how to set up a widget and all we're gonna do is we're going <end>
<start> guidelines of how to set up a widget and all we're gonna do is we're going <end>
<start> guidelines of how to set up a widget and all we're gonna do is we're going <end>
<start> guidelines of how to set up a widget and all we're gonna do is we're going <end>
<start> scroll down to where it says standard widget sizes so like we can see like <end>
<start> that you can use there's guidelines and i believe there's some kind of formula <end>
<start> that you can use there's guidelines and i believe there's some kind of formula <end>
<start> that you can use there's guidelines and i believe there's some kind of formula <end>
<start> don't know if it's on this page or not but there's a formula to figure out <end>
<start> don't know if it's on this page or not but there's a formula to figure out <end>
<start> don't know if it's on this page or not but there's a formula to figure out <end>
<start> don't know if it's on this page or not but there's a formula to figure out <end>
<start> you want a different size in this how you do that so you guys might want <end>
<start> of 320 by 100 so again we're just gonna jump into the clips and for a width <end>
<start> of 320 by 100 so again we're just gonna jump into the clips and for a width <end>
<start> of 320 by 100 so again we're just gonna jump into the clips and for a width <end>
<start> want to say 300 or 320 by 100 and this is dp or both and then lastly we want <end>
<start> want to say 300 or 320 by 100 and this is dp or both and then lastly we want <end>
<start> want to say 300 or 320 by 100 and this is dp or both and then lastly we want <end>
<start> want to say 300 or 320 by 100 and this is dp or both and then lastly we want <end>
<start> want to say 300 or 320 by 100 and this is dp or both and then lastly we want <end>
<start> can delete it because it's pretty much pointless and just waste your <end>
<start> power but for 330 minutes we're gonna say 180,000 seconds or milliseconds <end>
<start> 30 minutes and that's pretty much it we set up our widget provider and <end>
<start> 30 minutes and that's pretty much it we set up our widget provider and <end>
<start> update what the layout of the widget should be and you know if we have <end>
<start> configure you don't have to have a configuration activity but if you <end>
<start> little bit more about the app widget provider and make sure you check <end>
<start> this page to kind of get a little bit better overview of some of the <end>
<start> this page to kind of get a little bit better overview of some of the <end>
<start> that you can do when developing your <end>
<start> that you can do when developing your <end>
<start> that you can do when developing your <end>
<start> it's not that great but you can go into more detail there so i'll catch you <end>
<start> it's not that great but you can go into more detail there so i'll catch you <end>
<start> in the next tutorial and hope you have a see you <end>
<start> what's up guys welcome to your 136 android tutorial for the new boss <end>
<start> we're still going to be working with our google maps activity what we're going <end>
<start> we're still going to be working with our google maps activity what we're going <end>
<start> do in this tutorials we're gonna relate to where we touch on the screen <end>
<start> do in this tutorials we're gonna relate to where we touch on the screen <end>
<start> create a geo point out of that location so what we're going to do is we're <end>
<start> to set up a couple ends up here called x&amp;y alright so basically this is <end>
<start> to set up a couple ends up here called x&amp;y alright so basically this is <end>
<start> to set up a couple ends up here called x&amp;y alright so basically this is <end>
<start> now we're going to create a geo point out of those locations but first we <end>
<start> to relate these points to our touch method so let's go down to our touch <end>
<start> to relate these points to our touch method so let's go down to our touch <end>
<start> to relate these points to our touch method so let's go down to our touch <end>
<start> class that extends the overlay and when we hit the motion event down that's <end>
<start> class that extends the overlay and when we hit the motion event down that's <end>
<start> class that extends the overlay and when we hit the motion event down that's <end>
<start> class that extends the overlay and when we hit the motion event down that's <end>
<start> we're going to set up our variables and so what we're gonna do is we're <end>
<start> say x is equal to and then just our event which we called e get x and <end>
<start> say x is equal to and then just our event which we called e get x and <end>
<start> say x is equal to and then just our event which we called e get x and <end>
<start> going to return a float but we'll get to that in a second also y is going to be <end>
<start> going to return a float but we'll get to that in a second also y is going to be <end>
<start> going to return a float but we'll get to that in a second also y is going to be <end>
<start> going to return a float but we'll get to that in a second also y is going to be <end>
<start> dot get y and both those are returning floats and again this is an integer <end>
<start> build the geo point so how we do that is we're gonna create a geo point <end>
<start> build the geo point so how we do that is we're gonna create a geo point <end>
<start> build the geo point so how we do that is we're gonna create a geo point <end>
<start> build the geo point so how we do that is we're gonna create a geo point <end>
<start> build the geo point so how we do that is we're gonna create a geo point <end>
<start> gonna call this touched point something like that we're gonna set this equal <end>
<start> gonna call this touched point something like that we're gonna set this equal <end>
<start> our map view then we're gonna say dot get projections or get projection <end>
<start> our map view then we're gonna say dot get projections or get projection <end>
<start> get projections or get projection and basically what's doing is it's <end>
<start> get projections or get projection and basically what's doing is it's <end>
<start> our touch event of our overlay to our actual map activity or actual <end>
<start> our touch event of our overlay to our actual map activity or actual <end>
<start> our touch event of our overlay to our actual map activity or actual <end>
<start> according to how far it zoomed in how we're like scaling and all that stuff <end>
<start> our map and then what we're gonna say is from pixels because again we're <end>
<start> with the pixels and this is going to be <end>
<start> with the pixels and this is going to be <end>
<start> and this is gonna be and this is going to be your why so now we have a <end>
<start> point that's related to our touch where we touch on our screen a pretty <end>
<start> concept again we're all we're doing with this projection is relating our map <end>
<start> something called a geo coder and we're gonna do that within this get <end>
<start> something called a geo coder and we're gonna do that within this get <end>
<start> button because we're gonna basically display the address so we're gonna <end>
<start> button because we're gonna basically display the address so we're gonna <end>
<start> up a geo coder and also we might want to set this touch point before we <end>
<start> up a geo coder and also we might want to set this touch point before we <end>
<start> get into the geo coder down here we need to set this touch point up so or <end>
<start> that and then a delete the type there and paste it above as well so now we <end>
<start> that and then a delete the type there and paste it above as well so now we <end>
<start> that and then a delete the type there and paste it above as well so now we <end>
<start> that and then a delete the type there and paste it above as well so now we <end>
<start> use our geo or touch touch point with in some of these other methods and <end>
<start> use our geo or touch touch point with in some of these other methods and <end>
<start> we're going to set up something called a geo coder that's gonna allow us to <end>
<start> we're going to set up something called a geo coder that's gonna allow us to <end>
<start> of access the address and all that good stuff so we're gonna say geo coder <end>
<start> we're just gonna call it geo code coder or something like that we're gonna <end>
<start> we're just gonna call it geo code coder or something like that we're gonna <end>
<start> we're just gonna call it geo code coder or something like that we're gonna <end>
<start> we're just gonna call it geo code coder or something like that we're gonna <end>
<start> we're just gonna call it geo code coder or something like that we're gonna <end>
<start> this equal to new geo coder and within the parameters we're gonna say get <end>
<start> this equal to new geo coder and within the parameters we're gonna say get <end>
<start> this equal to new geo coder and within the parameters we're gonna say get <end>
<start> this equal to new geo coder and within the parameters we're gonna say get <end>
<start> context that's gonna return the context of the base class and then we're <end>
<start> context that's gonna return the context of the base class and then we're <end>
<start> context that's gonna return the context of the base class and then we're <end>
<start> context that's gonna return the context of the base class and then we're <end>
<start> say locale dot get default and we have to import both locale and our geo <end>
<start> which i've already done and now we've set up our geo coder and what we can <end>
<start> which i've already done and now we've set up our geo coder and what we can <end>
<start> stuff so we're gonna say is try and then within the try brackets and <end>
<start> stuff so we're gonna say is try and then within the try brackets and <end>
<start> kota for and the next tutorial will kind of setup it what we're gonna do <end>
<start> kota for and the next tutorial will kind of setup it what we're gonna do <end>
<start> but again that's what the geo coder is and we also set up basically a geo <end>
<start> but again that's what the geo coder is and we also set up basically a geo <end>
<start> but again that's what the geo coder is and we also set up basically a geo <end>
<start> but again that's what the geo coder is and we also set up basically a geo <end>
<start> but again that's what the geo coder is and we also set up basically a geo <end>
<start> map so that's pretty much it for this port this tutorial and i'll catch <end>
<start> map so that's pretty much it for this port this tutorial and i'll catch <end>
<start> guys in the next one have a good one <end>
<start> be set clickable so we're going to use this on click method as you can <end>
<start> be set clickable so we're going to use this on click method as you can <end>
<start> we're setting our set onclicklistener and then basically just so we can <end>
<start> this on click method and you know if we had like 20 buttons this would be <end>
<start> this on click method and you know if we had like 20 buttons this would be <end>
<start> click listener on click method i'm kind of defining what we want to do with <end>
<start> there so what we're going to do is we're going to scroll up to the top of <end>
<start> there so what we're going to do is we're going to scroll up to the top of <end>
<start> we can use some of the methods but what we can also do is we can implement <end>
<start> class so we're going to say implement and you do that by saying implements <end>
<start> class so we're going to say implement and you do that by saying implements <end>
<start> that class so again we're just going to save you dot onclicklistener there we <end>
<start> that class so again we're just going to save you dot onclicklistener there we <end>
<start> add unimplemented methods we're just going to click that and then if <end>
<start> add unimplemented methods we're just going to click that and then if <end>
<start> scroll down to our bottom again just kind of like when we set up a method <end>
<start> the last tutorial it's going to create a new method for us right below <end>
<start> method and it's called on click basically that's the same method <end>
<start> method and it's called on click basically that's the same method <end>
<start> right here so what we're going to do is we're going to set up a switch in <end>
<start> to determine which button has been pressed so again this is just kind of <end>
<start> review on the switching case but this is also going to kind of introduce you <end>
<start> click method is cold it gives us which view was pressed and again like <end>
<start> click method is cold it gives us which view was pressed and again like <end>
<start> is v because they label this view that's the data that they're giving us <end>
<start> example we could also say label view because that's kind of just like <end>
<start> variable and then we can reference that variable within these brackets so <end>
<start> variable and then we can reference that variable within these brackets so <end>
<start> going to say view and hit dot we're going to say get id and that's going <end>
<start> up set up a bracket and we're going to set up two cases because we have <end>
<start> buttons so we're going to say if the case is our dot id dot button <end>
<start> which was our you know our command button for the most part we're going <end>
<start> do whatever is right here we're going to hit break and if it was the case <end>
<start> do whatever is right here we're going to hit break and if it was the case <end>
<start> do whatever is right here we're going to hit break and if it was the case <end>
<start> oops the case of our dot id dot toggle button password we're going to <end>
<start> oops the case of our dot id dot toggle button password we're going to <end>
<start> oops the case of our dot id dot toggle button password we're going to <end>
<start> oops the case of our dot id dot toggle button password we're going to <end>
<start> oops the case of our dot id dot toggle button password we're going to <end>
<start> whatever is in here again we've set up a break to break the switch and i'll <end>
<start> whatever is in here again we've set up a break to break the switch and i'll <end>
<start> set up within our on click methods up above so we have this is our <end>
<start> command so we're just going to copy whatever we put in within this on <end>
<start> command so we're just going to copy whatever we put in within this on <end>
<start> method which is basically that string and all the other good stuff just <end>
<start> method which is basically that string and all the other good stuff just <end>
<start> method which is basically that string and all the other good stuff just <end>
<start> that and we're going to paste it below and i grabbed one x bracket so you <end>
<start> that and we're going to paste it below and i grabbed one x bracket so you <end>
<start> that and we're going to paste it below and i grabbed one x bracket so you <end>
<start> that and we're going to paste it below and i grabbed one x bracket so you <end>
<start> to do it right here copy this and again this is for our results so we're <end>
<start> to do it right here copy this and again this is for our results so we're <end>
<start> to do it right here copy this and again this is for our results so we're <end>
<start> to do it right here copy this and again this is for our results so we're <end>
<start> to do it right here copy this and again this is for our results so we're <end>
<start> to say v right there and then we're just going to kind of delete it out of <end>
<start> to say v right there and then we're just going to kind of delete it out of <end>
<start> to say v right there and then we're just going to kind of delete it out of <end>
<start> to say v right there and then we're just going to kind of delete it out of <end>
<start> it out of this onclicklistener in those part and now it's going to <end>
<start> it out of this onclicklistener in those part and now it's going to <end>
<start> we're also going to do that with this on click method as well so we're just <end>
<start> to copy that or cut that and paste it for if <end>
<start> to copy that or cut that and paste it for if <end>
<start> to copy that or cut that and paste it for if <end>
<start> toggle button is pressed and then we're just going to kind of clean up some <end>
<start> toggle button is pressed and then we're just going to kind of clean up some <end>
<start> toggle button is pressed and then we're just going to kind of clean up some <end>
<start> toggle button is pressed and then we're just going to kind of clean up some <end>
<start> toggle button is pressed and then we're just going to kind of clean up some <end>
<start> this code and instead of doing a new view we're going to just say <end>
<start> this code and instead of doing a new view we're going to just say <end>
<start> it's again it's looking for a onclicklistener so we can use our <end>
<start> click method so now what we can do is we can type this for the context of <end>
<start> click method so now what we can do is we can type this for the context of <end>
<start> class this so it's going to look for a through our class and say hey <end>
<start> implemented that and we can use the on click method so now this button is <end>
<start> implemented that and we can use the on click method so now this button is <end>
<start> to refer to this on click method that we set up and we got that because <end>
<start> to refer to this on click method that we set up and we got that because <end>
<start> implemented implemented it and i'm just going to give us some data for the <end>
<start> what we set up in our onclicklistener before so again all we have to do <end>
<start> what we set up in our onclicklistener before so again all we have to do <end>
<start> what we set up in our onclicklistener before so again all we have to do <end>
<start> what we set up in our onclicklistener before so again all we have to do <end>
<start> what we set up in our onclicklistener before so again all we have to do <end>
<start> just type this as well and look how much cleaner our on create method <end>
<start> just type this as well and look how much cleaner our on create method <end>
<start> just type this as well and look how much cleaner our on create method <end>
<start> basically it's only three lines of code and then it refers to our either our <end>
<start> basically it's only three lines of code and then it refers to our either our <end>
<start> click method or our bacon and eggs method so that's kind of how <end>
<start> click method or our bacon and eggs method so that's kind of how <end>
<start> click method or our bacon and eggs method so that's kind of how <end>
<start> programming works for the most part you guys can implement methods and that <end>
<start> programming works for the most part you guys can implement methods and that <end>
<start> programming works for the most part you guys can implement methods and that <end>
<start> it kind of cleans up the code and we're just going to check and make sure <end>
<start> it kind of cleans up the code and we're just going to check and make sure <end>
<start> works as always because it's good to check and check frequently for the <end>
<start> part so hopefully you guys understood that tutorial for the most part <end>
<start> part so hopefully you guys understood that tutorial for the most part <end>
<start> it's just about implementing for the and when we implement we have to use <end>
<start> it's just about implementing for the and when we implement we have to use <end>
<start> called on click so again we're just called on click so again we're <end>
<start> called on click so again we're just called on click so again we're <end>
<start> done is i've created again a class called simple browser and an xml <end>
<start> done is i've created again a class called simple browser and an xml <end>
<start> called simple browser i kind of set up just basically out and edit text <end>
<start> we're going to go through here in the next tutorial or two so the <end>
<start> we're going to go through here in the next tutorial or two so the <end>
<start> we want to load up or if we just want to use kind of a url so we need to set <end>
<start> edit text i have et url and for the button i have the reference be go <end>
<start> for the go button and then below that we're going to just set up our edit <end>
<start> i'm sorry text webview so it's pretty simple <end>
<start> say web view i mean then we just need to set that up for android layout width <end>
<start> say web view i mean then we just need to set that up for android layout width <end>
<start> say web view i mean then we just need to set that up for android layout width <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> going to be equal to fill parent and android layout height can fill <end>
<start> because we're taking up everything else that's available here and then <end>
<start> because we're taking up everything else that's available here and then <end>
<start> also what's going on there we're also gonna give it an id so <end>
<start> also what's going on there we're also gonna give it an id so <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> gonna say oops at plus ford's f plus id ford / webview browser or something <end>
<start> that and we're pretty much we're pretty much good to go here with the <end>
<start> so as you can see here's our webview actually that's going to load up <end>
<start> so as you can see here's our webview actually that's going to load up <end>
<start> website and such like that so now let's go into the first thing we need to do <end>
<start> we need to go on to the manifest and give us the permission to use <end>
<start> we need to go on to the manifest and give us the permission to use <end>
<start> we need to go on to the manifest and give us the permission to use <end>
<start> internet so we're going to go into the manifest go to permissions add <end>
<start> permission uses permissions and then over here we're going to search for <end>
<start> permission uses permissions and then over here we're going to search for <end>
<start> our wakelock internet and set wallpaper so far our permissions for this <end>
<start> our wakelock internet and set wallpaper so far our permissions for this <end>
<start> to set up that reference as always so we're going to just say webview <end>
<start> to set up that reference as always so we're going to just say webview <end>
<start> to set up that reference as always so we're going to just say webview <end>
<start> browser our brow something like that and again we're just gonna say find <end>
<start> browser our brow something like that and again we're just gonna say find <end>
<start> browser our brow something like that and again we're just gonna say find <end>
<start> browser our brow something like that and again we're just gonna say find <end>
<start> browser our brow something like that and again we're just gonna say find <end>
<start> browser our brow something like that and again we're just gonna say find <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> webview here find view by id and then we're just gonna say our dot id dot <end>
<start> browser is on our browser oh yeah it was a webview our browser and web <end>
<start> browser is on our browser oh yeah it was a webview our browser and web <end>
<start> browser is on our browser oh yeah it was a webview our browser and web <end>
<start> initial web view to load up like for example my site we could say our <end>
<start> or our brow dot low odhh we can load data which would <end>
<start> or our brow dot low odhh we can load data which would <end>
<start> or our brow dot low odhh we can load data which would <end>
<start> or our brow dot low odhh we can load data which would <end>
<start> like written in html or we can say load url so we can just go load url and <end>
<start> like written in html or we can say load url so we can just go load url and <end>
<start> within quotations we're going to say http ford slash forward slash wwm <end>
<start> within quotations we're going to say http ford slash forward slash wwm <end>
<start> bring back comm and in quotations and that should load up just like my <end>
<start> bring back comm and in quotations and that should load up just like my <end>
<start> created is a web view and we've learned about this method called load url <end>
<start> created is a web view and we've learned about this method called load url <end>
<start> created is a web view and we've learned about this method called load url <end>
<start> that's pretty much it for this tutorial we kind of set up everything again <end>
<start> guys need permission for the internet so i forgot to add it to the menu <end>
<start> guys need permission for the internet so i forgot to add it to the menu <end>
<start> guys need permission for the internet so i forgot to add it to the menu <end>
<start> guys need permission for the internet so i forgot to add it to the menu <end>
<start> here <end>
<start> here <end>
<start> here <end>
<start> so in the next tutorial we'll learn a little bit a few more methods we can <end>
<start> for this web view type object but let's just make sure we check out our <end>
<start> for this web view type object but let's just make sure we check out our <end>
<start> for this web view type object but let's just make sure we check out our <end>
<start> for this web view type object but let's just make sure we check out our <end>
<start> browser we click on it as of now nothing is there and then we're hopefully <end>
<start> browser we click on it as of now nothing is there and then we're hopefully <end>
<start> to get this to load yeah it's loading my website right <end>
<start> and obviously it's you can you can still pan around get everything going <end>
<start> and obviously it's you can you can still pan around get everything going <end>
<start> and obviously it's you can you can still pan around get everything going <end>
<start> and it's fully functional so i will catch you guys in the next tutorial <end>
<start> we're going to use a method when deletes displays a toast for the most part <end>
<start> this widget is pointless but you can just add a widget by holding down <end>
<start> this widget is pointless but you can just add a widget by holding down <end>
<start> your main screen and it pulls this up here and we can pick like <end>
<start> your main screen and it pulls this up here and we can pick like <end>
<start> your main screen and it pulls this up here and we can pick like <end>
<start> widget which is the one i created just to get reference and then it <end>
<start> widget which is the one i created just to get reference and then it <end>
<start> widget which is the one i created just to get reference and then it <end>
<start> configuration so we can type something and hit ok sends that results in <end>
<start> button is going to be disappeared or buttons gonna you know open up <end>
<start> button is going to be disappeared or buttons gonna you know open up <end>
<start> for the most part so let's just get into it the first thing that we're gonna <end>
<start> for the most part so let's just get into it the first thing that we're gonna <end>
<start> we're gonna do is just set up our classes so you guys can keep them <end>
<start> we're gonna do is just set up our classes so you guys can keep them <end>
<start> for the next few tutorials if you choose so what we're gonna do is we're going <end>
<start> for the next few tutorials if you choose so what we're gonna do is we're going <end>
<start> for the next few tutorials if you choose so what we're gonna do is we're going <end>
<start> gonna call it pointless widget because it's pretty much pointless thoughts <end>
<start> gonna call it pointless widget because it's pretty much pointless thoughts <end>
<start> gonna call it pointless widget because it's pretty much pointless thoughts <end>
<start> know whatever so we have that class know whatever so we have that <end>
<start> know whatever so we have that class know whatever so we have that <end>
<start> created we also need to create one new class to be our configuration so <end>
<start> gonna say widget config something like that <end>
<start> gonna say widget config something like that <end>
<start> gonna say widget config something like that <end>
<start> have to define these classes in the manifest and it's gonna be a little <end>
<start> previously not much different but a little bit so within our manifest <end>
<start> previously not much different but a little bit so within our manifest <end>
<start> within the application brackets we need to set up both those classes one <end>
<start> need to create is a receiver which is different because before we worked <end>
<start> need to create is a receiver which is different because before we worked <end>
<start> activities and again we just need to call the name so we're gonna say <end>
<start> activities and again we just need to call the name so we're gonna say <end>
<start> activities and again we just need to call the name so we're gonna say <end>
<start> name is equal to and then dot pointless class or pointless widget and we also <end>
<start> name is equal to and then dot pointless class or pointless widget and we also <end>
<start> name is equal to and then dot pointless class or pointless widget and we also <end>
<start> name is equal to and then dot pointless class or pointless widget and we also <end>
<start> name is equal to and then dot pointless class or pointless widget and we also <end>
<start> you choose to give it a label we're just gonna copy the label from all of <end>
<start> this receiver and we're gonna add an intent filter and basically we're <end>
<start> this receiver and we're gonna add an intent filter and basically we're <end>
<start> intent filter is set up an action name there's a few different names that <end>
<start> intent filter is set up an action name there's a few different names that <end>
<start> can or there's a few different action names that we can refer to when making <end>
<start> can or there's a few different action names that we can refer to when making <end>
<start> can or there's a few different action names that we can refer to when making <end>
<start> be called when it when our widget updates so we're just going to <end>
<start> be called when it when our widget updates so we're just going to <end>
<start> be called when it when our widget updates so we're just going to <end>
<start> be called when it when our widget updates so we're just going to <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> android dot a p-- widget dot action dot an all uppercase app widget <end>
<start> update and then we're just gonna close off <end>
<start> update and then we're just gonna close off <end>
<start> updates and we're gonna set that update probably in the next tutorial but <end>
<start> metadata so we're just gonna say under our we're intent filter closes off <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> gonna say metadata oops and we're going to give this a <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> android name is equal to android dot up wit again dot provider and we're <end>
<start> going to relate some information about the resource which we'll get into <end>
<start> i just want to make sure we have everything defined before we get into <end>
<start> i just want to make sure we have everything defined before we get into <end>
<start> i just want to make sure we have everything defined before we get into <end>
<start> and we can kind of review this later so our resource is going to be equal <end>
<start> again whatever we set up the resource as but we're gonna say at xml forward <end>
<start> widget stuff or whatever you guys want to call that those other things had <end>
<start> widget stuff or whatever you guys want to call that those other things had <end>
<start> widget stuff or whatever you guys want to call that those other things had <end>
<start> widget stuff or whatever you guys want to call that those other things had <end>
<start> that and then just forward slash closed off for <end>
<start> that and then just forward slash closed off for <end>
<start> like a little text and pull this down see your notifications click on it <end>
<start> does something this is basically the finished application pretty <end>
<start> up gangsters we click on our notification or actually we're going <end>
<start> up gangsters we click on our notification or actually we're going <end>
<start> go out of our activity scroll down and as you can see as a title it says <end>
<start> go out of our activity scroll down and as you can see as a title it says <end>
<start> up and it says what's up gangsters click on that it opens back up this <end>
<start> our notification so that's pretty much we're going to do is probably take <end>
<start> tutorials maybe three but what i want you guys to do is create a <end>
<start> going here so we're also gonna need is a new class called status bar and a <end>
<start> layout that's just going to be one button called status bar as well <end>
<start> there we go again it's just gonna extends activity <end>
<start> notification manager it's gonna kind of will manage all of our notifications <end>
<start> title or status bar so that's we're gonna set up here for whole class to <end>
<start> title or status bar so that's we're gonna set up here for whole class to <end>
<start> title or status bar so that's we're gonna set up here for whole class to <end>
<start> we're gonna call this notification manager never just call this n/m <end>
<start> we're gonna call this notification manager never just call this n/m <end>
<start> we're gonna call this notification manager never just call this n/m <end>
<start> we're gonna call this notification manager never just call this n/m <end>
<start> we're gonna call this notification manager never just call this n/m <end>
<start> again add our imports and let's set this up what this notification manager <end>
<start> again gonna do just allow us to access that status bar and you know clear <end>
<start> again gonna do just allow us to access that status bar and you know clear <end>
<start> notification and update it so we're going to do is we're gonna say <end>
<start> notification and update it so we're going to do is we're gonna say <end>
<start> notification and update it so we're going to do is we're gonna say <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> is equal to again notification manager and we're just gonna say get <end>
<start> service and we're gonna pass in notification <end>
<start> service and we're gonna pass in notification <end>
<start> service and we're gonna pass in notification <end>
<start> service and we're gonna pass in notification <end>
<start> service and we're gonna pass in notification <end>
<start> service and we're gonna pass in notification <end>
<start> because once we you know add the notification to our taskbar there's <end>
<start> intent that's waiting to happen because it's gonna launch our activity and <end>
<start> just chilling there it's like hey guys uh no i'm i'm an intent and i'm <end>
<start> just chilling there it's like hey guys uh no i'm i'm an intent and i'm <end>
<start> hanging out so you know whenever you guys you don't need me i'll just hit <end>
<start> up and you know we'll do that so you know that's basically the pending <end>
<start> up and you know we'll do that so you know that's basically the pending <end>
<start> that we worked with that with widgets as well so what we're gonna do is <end>
<start> that we worked with that with widgets as well so what we're gonna do is <end>
<start> going to set up a pending intent i'm just going to call this pr we're <end>
<start> going to set up a pending intent i'm just going to call this pr we're <end>
<start> going to set up a pending intent i'm just going to call this pr we're <end>
<start> going to set up a pending intent i'm just going to call this pr we're <end>
<start> going to set up a pending intent i'm just going to call this pr we're <end>
<start> to set this equal to pending intent class dot get activity for the <end>
<start> to set this equal to pending intent class dot get activity for the <end>
<start> to set this equal to pending intent class dot get activity for the <end>
<start> to set this equal to pending intent class dot get activity for the <end>
<start> we're gonna say this for the request code we're gonna say zero for the <end>
<start> we're gonna say this for the request code we're gonna say zero for the <end>
<start> we're gonna say this for the request code we're gonna say zero for the <end>
<start> we're gonna say this for the request code we're gonna say zero for the <end>
<start> anything again we're just gonna refer to the class that it opens so we're <end>
<start> anything again we're just gonna refer to the class that it opens so we're <end>
<start> anything again we're just gonna refer to the class that it opens so we're <end>
<start> just say this is equal to new intent and then the package name we're gonna <end>
<start> just say this is equal to new intent and then the package name we're gonna <end>
<start> just say this is equal to new intent and then the package name we're gonna <end>
<start> just say this is equal to new intent and then the package name we're gonna <end>
<start> just say this is equal to new intent and then the package name we're gonna <end>
<start> just say this is equal to new intent and then the package name we're gonna <end>
<start> this and the class name so we're gonna say status bar dot class and if you <end>
<start> this and the class name so we're gonna say status bar dot class and if you <end>
<start> this and the class name so we're gonna say status bar dot class and if you <end>
<start> this and the class name so we're gonna say status bar dot class and if you <end>
<start> this and the class name so we're gonna say status bar dot class and if you <end>
<start> might take one more tutorial or two more not sure to pay on how elaborate i <end>
<start> might take one more tutorial or two more not sure to pay on how elaborate i <end>
<start> what we're gonna do with in this tutorial ii do some simple animation <end>
<start> what we're gonna do with in this tutorial ii do some simple animation <end>
<start> called scaled x and scaled y so a lot more lot new very a lot a lot <end>
<start> variables there and now let's set them all up to be equal to zero at <end>
<start> variables there and now let's set them all up to be equal to zero at <end>
<start> variables there and now let's set them all up to be equal to zero at <end>
<start> variables there and now let's set them all up to be equal to zero at <end>
<start> beginning so we're just gonna say dy equals d i'm sorry dx equals dy <end>
<start> beginning so we're just gonna say dy equals d i'm sorry dx equals dy <end>
<start> beginning so we're just gonna say dy equals d i'm sorry dx equals dy <end>
<start> beginning so we're just gonna say dy equals d i'm sorry dx equals dy <end>
<start> so as it is just clip the video save some time but basically i just said <end>
<start> so as it is just clip the video save some time but basically i just said <end>
<start> to zero it's kind of setting them all equal to zero to start with which <end>
<start> good so now what we're gonna do is we're basically going to go into our you <end>
<start> good so now what we're gonna do is we're basically going to go into our you <end>
<start> good so now what we're gonna do is we're basically going to go into our you <end>
<start> our up motion event right here and set up our changes or dx and our dy so <end>
<start> our up motion event right here and set up our changes or dx and our dy so <end>
<start> final x - are starting x and that will give <end>
<start> the change in the x direction and then we're also going to say dy is equal <end>
<start> the change in the x direction and then we're also going to say dy is equal <end>
<start> our final y and our - our starting y and let's say you know our screens 400 <end>
<start> gonna do is we're gonna kind of scale it down so we're just gonna say our <end>
<start> gonna do is we're gonna kind of scale it down so we're just gonna say our <end>
<start> x is equal to our dx divided by like let's just do 30 and see how that <end>
<start> x is equal to our dx divided by like let's just do 30 and see how that <end>
<start> then we're also going to say are scaled y is equal to our d y divided by 30 <end>
<start> then we're also going to say are scaled y is equal to our d y divided by 30 <end>
<start> then we're also going to say are scaled y is equal to our d y divided by 30 <end>
<start> then we're also going to say are scaled y is equal to our d y divided by 30 <end>
<start> then we're also going to say are scaled y is equal to our d y divided by 30 <end>
<start> there we go we kind of have our scale variables set up now what we're <end>
<start> there we go we kind of have our scale variables set up now what we're <end>
<start> there we go we kind of have our scale variables set up now what we're <end>
<start> want to do is we're going to go into our actual animation and so what we're <end>
<start> want to do is we're going to go into our actual animation and so what we're <end>
<start> want to do is we're going to go into our actual animation and so what we're <end>
<start> want to do is we're going to go into our actual animation and so what we're <end>
<start> just quickly do is we're gonna copy the one that prints the ball which was <end>
<start> just quickly do is we're gonna copy the one that prints the ball which was <end>
<start> test is what we what is what we defined there so we're going to copy that <end>
<start> test is what we what is what we defined there so we're going to copy that <end>
<start> let's do it below our x or a plus symbol there and there we go now we're <end>
<start> print a ball again just centered everything is pretty much the same <end>
<start> what we're gonna say is we're going to say - now our ana x which is gonna <end>
<start> our skit did we set that up yet no okay basically this is going to be <end>
<start> our skit did we set that up yet no okay basically this is going to be <end>
<start> our skit did we set that up yet no okay basically this is going to be <end>
<start> you can see it right now this is equal to 0 because that's what we set it up <end>
<start> you know this if statement and we're going to change that value and so <end>
<start> you know this if statement and we're going to change that value and so <end>
<start> you know this if statement and we're going to change that value and so <end>
<start> you know this if statement and we're going to change that value and so <end>
<start> you know this if statement and we're going to change that value and so <end>
<start> going to say is we're going to say an eye x equals ni x plus are scaled x <end>
<start> going to say is we're going to say an eye x equals ni x plus are scaled x <end>
<start> going to say is we're going to say an eye x equals ni x plus are scaled x <end>
<start> again our skilled x is equal to you know our displacement in the x <end>
<start> canvas for a bitmap i don't know if that made quite sense or not or if this <end>
<start> canvas for a bitmap i don't know if that made quite sense or not or if this <end>
<start> making sense at all especially you know probably isn't but hopefully you <end>
<start> making sense at all especially you know probably isn't but hopefully you <end>
<start> kind of are picking up on some stuff especially the new programmers this <end>
<start> kind of are picking up on some stuff especially the new programmers this <end>
<start> kind of are picking up on some stuff especially the new programmers this <end>
<start> kind of are picking up on some stuff especially the new programmers this <end>
<start> few things that we still need to do and we'll finish up in the next tutorial <end>
<start> few things that we still need to do and we'll finish up in the next tutorial <end>
<start> we kind of got the basics down very very basic stuff so we're gonna click <end>
<start> data class for the for sending data and then we're going to open up our <end>
<start> data class for the for sending data and then we're going to open up our <end>
<start> class and what we're going to do is go in with in our on create method and <end>
<start> could create a method like get data or something and then set it up within <end>
<start> well so what we're going to do is basically create a new bundle and <end>
<start> bundle is going to be called got basket so say bundle and then we have to <end>
<start> bundle is going to be called got basket so say bundle and then we have to <end>
<start> bundle we're going to say got basket first then you guys will have to <end>
<start> bundle we're going to say got basket first then you guys will have to <end>
<start> bundle we're going to say got basket first then you guys will have to <end>
<start> the bundle i was kind of messing around with this just now as my video <end>
<start> the bundle i was kind of messing around with this just now as my video <end>
<start> the bundle i was kind of messing around with this just now as my video <end>
<start> rendering from the last tutorial so and how we're going to set up this bundle <end>
<start> we're going to do is we're going to say get intent and this is a method so <end>
<start> we're going to do is we're going to say get intent and this is a method so <end>
<start> we're going to do is we're going to say get intent and this is a method so <end>
<start> we're going to do is we're going to say get intent and this is a method so <end>
<start> the class and hit dot and we're going to say get extras because we added <end>
<start> the class and hit dot and we're going to say get extras because we added <end>
<start> click that and that's what our bundle is going to be equal to basically <end>
<start> click that and that's what our bundle is going to be equal to basically <end>
<start> referencing multiple methods so we're going to say string and we're going <end>
<start> referencing multiple methods so we're going to say string and we're going <end>
<start> referencing multiple methods so we're going to say string and we're going <end>
<start> say got spread for the most part there we go and then now we need to set <end>
<start> say got spread for the most part there we go and then now we need to set <end>
<start> this got bread basically to the bread from the last class so we're going <end>
<start> this got bread basically to the bread from the last class so we're going <end>
<start> this got bread basically to the bread from the last class so we're going <end>
<start> say basically refer to this bundle that say basically refer to this bundle <end>
<start> passed in so we're going to say got basket dot and you can say get <end>
<start> passed in so we're going to say got basket dot and you can say get <end>
<start> passed in so we're going to say got basket dot and you can say get <end>
<start> so we're just going to click that and if you guys remember we cleverly <end>
<start> so we're just going to click that and if you guys remember we cleverly <end>
<start> our key in the last tutorial key so basically that's the file name that <end>
<start> all we're going to do is set up our text view which is basically our <end>
<start> all we're going to do is set up our text view which is basically our <end>
<start> all we're going to do is set up our text view which is basically our <end>
<start> text view to this string that we just got so here you go this is why we had <end>
<start> reference to that string that text view so we're going to set this <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> equal to which is question we're going to say dot set text and then we're <end>
<start> to label this as got bread so now we can pass a question along through <end>
<start> our application i'm just going to kind of get out of here and then run it <end>
<start> our application i'm just going to kind of get out of here and then run it <end>
<start> our application i'm just going to kind of get out of here and then run it <end>
<start> our application i'm just going to kind of get out of here and then run it <end>
<start> as this writing i'll just talk over this again okay so basically our got <end>
<start> is getting the bundle or getting the extras from the intent that's <end>
<start> is getting the bundle or getting the extras from the intent that's <end>
<start> is getting the bundle or getting the extras from the intent that's <end>
<start> so hey man i'm hungry i need some bread and they're gonna be like hey bread <end>
<start> called key and that's going to be basically a bread string and then <end>
<start> called key and that's going to be basically a bread string and then <end>
<start> from that intent so let's check out make sure it works again you guys have <end>
<start> define this open class width and manifest as well then we're going to <end>
<start> define this open class width and manifest as well then we're going to <end>
<start> define this open class width and manifest as well then we're going to <end>
<start> data we're going to say we're going to say jessica alba is dot dot dot and <end>
<start> data we're going to say we're going to say jessica alba is dot dot dot and <end>
<start> data we're going to say we're going to say jessica alba is dot dot dot and <end>
<start> data we're going to say we're going to say jessica alba is dot dot dot and <end>
<start> data we're going to say we're going to say jessica alba is dot dot dot and <end>
<start> we're gonna say start activity we're going to get an error of course <end>
<start> we're gonna say start activity we're going to get an error of course <end>
<start> alba would crash my application here let's see what's up real quick if <end>
<start> can't find it we'll edit the video most part looks like this open class <end>
<start> can't find it we'll edit the video most part looks like this open class <end>
<start> basically the bridge from xml so i'm going to set that up real quickly <end>
<start> basically the bridge from xml so i'm going to set that up real quickly <end>
<start> basically the bridge from xml so i'm going to set that up real quickly <end>
<start> basically the bridge from xml so i'm going to set that up real quickly <end>
<start> basically the bridge from xml so i'm going to set that up real quickly <end>
<start> the initialize method and just kind of have to refer that pretty <end>
<start> the initialize method and just kind of have to refer that pretty <end>
<start> the initialize method and just kind of have to refer that pretty <end>
<start> the initialize method and just kind of have to refer that pretty <end>
<start> the initialize method and just kind of have to refer that pretty <end>
<start> the initialize method and just kind of have to refer that pretty <end>
<start> radio group and we're going to find that by <end>
<start> radio group and we're going to find that by <end>
<start> radio group and we're going to find that by <end>
<start> radio group and we're going to find that by <end>
<start> radio group and we're going to find that by <end>
<start> so if you guys ever get discouraged and you like mess up and like <end>
<start> so if you guys ever get discouraged and you like mess up and like <end>
<start> not working properly everyone does it don't worry about it <end>
<start> not working properly everyone does it don't worry about it <end>
<start> hopefully you guys are kind of understand this data thing a little <end>
<start> hopefully you guys are kind of understand this data thing a little <end>
<start> let's change that splash to like one second so i don't have to listen to <end>
<start> let's change that splash to like one second so i don't have to listen to <end>
<start> let's change that splash to like one second so i don't have to listen to <end>
<start> again alright hopefully everything works now but uh alright that's better <end>
<start> again alright hopefully everything works now but uh alright that's better <end>
<start> again alright hopefully everything works now but uh alright that's better <end>
<start> again alright hopefully everything works now but uh alright that's better <end>
<start> again alright hopefully everything works now but uh alright that's better <end>
<start> again alright hopefully everything works now but uh alright that's better <end>
<start> and then we're gonna say jessica alba is and then startactivity perfect as <end>
<start> and then we're gonna say jessica alba is and then startactivity perfect as <end>
<start> and then we're gonna say jessica alba is and then startactivity perfect as <end>
<start> and then we're gonna say jessica alba is and then startactivity perfect as <end>
<start> and then we're gonna say jessica alba is and then startactivity perfect as <end>
<start> let's kind of move these brackets down you guys want to have two brackets <end>
<start> let's kind of move these brackets down you guys want to have two brackets <end>
<start> and then we're going to set up some more methods again within this load <end>
<start> and then we're going to set up some more methods again within this load <end>
<start> stuff class now let's just kind of go stuff class now let's just kind of <end>
<start> stuff class now let's just kind of go stuff class now let's just kind of <end>
<start> and order how it's going to read it and which methods are going to get <end>
<start> when we use that execute again here's where most of meat is for for this <end>
<start> variables so the first thing that we're going to do is we're going to <end>
<start> variables so the first thing that we're going to do is we're going to <end>
<start> variables so the first thing that we're going to do is we're going to <end>
<start> variables so the first thing that we're going to do is we're going to <end>
<start> protected data protected void on pre execute and again we can refer <end>
<start> protected data protected void on pre execute and again we can refer <end>
<start> protected data protected void on pre execute and again we can refer <end>
<start> protected data protected void on pre execute and again we can refer <end>
<start> whatever is being passed in like a string f something like that and <end>
<start> whatever is being passed in like a string f something like that and <end>
<start> set up some variables if we want the most part we don't need to for <end>
<start> class but just to show you guys maybe leave a comment example setting <end>
<start> class but just to show you guys maybe leave a comment example setting <end>
<start> class but just to show you guys maybe leave a comment example setting <end>
<start> class but just to show you guys maybe leave a comment example setting <end>
<start> class but just to show you guys maybe leave a comment example setting <end>
<start> variables some for setting up something and we get that f or that string and <end>
<start> variables some for setting up something and we get that f or that string and <end>
<start> variables some for setting up something and we get that f or that string and <end>
<start> variables some for setting up something and we get that f or that string and <end>
<start> can just set that equal to whatever and there we <end>
<start> can just set that equal to whatever and there we <end>
<start> can just set that equal to whatever and there we <end>
<start> and another method we can call is to get that progress again we have an <end>
<start> and another method we can call is to get that progress again we have an <end>
<start> and another method we can call is to get that progress again we have an <end>
<start> and another method we can call is to get that progress again we have an <end>
<start> that we can refer to and so if we have a progress method that kind of <end>
<start> some kind of a loading bar or something like that we want to access the <end>
<start> method so what we're going to say here is we're gonna say we're in say <end>
<start> is we're gonna say we're in say again <end>
<start> is we're gonna say we're in say again <end>
<start> void <end>
<start> void <end>
<start> on progress update and it's going to take an <end>
<start> on progress update and it's going to take an <end>
<start> on progress update and it's going to take an <end>
<start> on progress update and it's going to take an <end>
<start> on progress update and it's going to take an <end>
<start> on progress update and it's going to take an <end>
<start> and we're going to call this integer array i'm sorry and we've worked <end>
<start> and we're going to call this integer array i'm sorry and we've worked <end>
<start> and we're going to call this integer array i'm sorry and we've worked <end>
<start> and we're going to call this integer array i'm sorry and we've worked <end>
<start> arrays before you know it's like that we call them in or pass them in you <end>
<start> arrays before you know it's like that we call them in or pass them in you <end>
<start> want to say dot dot dot that's basically the same thing as an array for the <end>
<start> want to say dot dot dot that's basically the same thing as an array for the <end>
<start> part we're going to set this integer array equal to like progress <end>
<start> part we're going to set this integer array equal to like progress <end>
<start> part we're going to set this integer array equal to like progress <end>
<start> part we're going to set this integer array equal to like progress <end>
<start> part we're going to set this integer array equal to like progress <end>
<start> part we're going to set this integer array equal to like progress <end>
<start> something like that is the name and then again we can i don't know if i'm <end>
<start> something like that is the name and then again we can i don't know if i'm <end>
<start> be our string that actually loaded or this null one the last method is <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> to be called protected or it's going to be protected void on post x cubed <end>
<start> we're just going to say string as well because again we're returning a <end>
<start> we're just going to say string as well because again we're returning a <end>
<start> here so we're going to say string result which we're going to rename <end>
<start> here so we're going to say string result which we're going to rename <end>
<start> here so we're going to say string result which we're going to rename <end>
<start> here so we're going to say string result which we're going to rename <end>
<start> right we're going to return that string that we loaded called collected and <end>
<start> and now we can set up our our textview within here our textview was called <end>
<start> and now we can set up our our textview within here our textview was called <end>
<start> and now we can set up our our textview within here our textview was called <end>
<start> and now we can set up our our textview within here our textview was called <end>
<start> results or data result was it and we can just say dot results maybe dot set <end>
<start> results or data result was it and we can just say dot results maybe dot set <end>
<start> and then we can set it equal to our result which again will be whatever <end>
<start> and then we can set it equal to our result which again will be whatever <end>
<start> and then we can set it equal to our result which again will be whatever <end>
<start> and then we can set it equal to our result which again will be whatever <end>
<start> and then we can set it equal to our result which again will be whatever <end>
<start> and then we can set it equal to our result which again will be whatever <end>
<start> return so let me format everything and those are the four methods that you <end>
<start> return so let me format everything and those are the four methods that you <end>
<start> actually change our our text view so let's run it make sure everything <end>
<start> guys and we're probably good to go with with this tutorial again i'm not <end>
<start> guys and we're probably good to go with with this tutorial again i'm not <end>
<start> bit new that you guys might like so i'll probably do that in the next <end>
<start> let's make sure everything works so we're going to say internal data <end>
<start> let's make sure everything works so we're going to say internal data <end>
<start> let's make sure everything works so we're going to say internal data <end>
<start> just like a test text something like that we're going to save it and if <end>
<start> just like a test text something like that we're going to save it and if <end>
<start> just like a test text something like that we're going to save it and if <end>
<start> hit the load button yeah there we go we have our test text there so thanks <end>
<start> hit the load button yeah there we go we have our test text there so thanks <end>
<start> to go crazy a little bit i don't know why bucky isn't in an insane <end>
<start> is learn how to load data with this button load and in the next <end>
<start> data because yeah this is the frame this is i mean nothing new for the most <end>
<start> do is we're gonna create a file input stream now so we're gonna just say <end>
<start> do is we're gonna create a file input stream now so we're gonna just say <end>
<start> do is we're gonna create a file input stream now so we're gonna just say <end>
<start> do is we're gonna create a file input stream now so we're gonna just say <end>
<start> input stream and we're gonna call this fi s for file input stream because <end>
<start> input stream and we're gonna call this fi s for file input stream because <end>
<start> input stream and we're gonna call this fi s for file input stream because <end>
<start> input stream and we're gonna call this fi s for file input stream because <end>
<start> the data all that good stuff so what we're going to do is we're going to <end>
<start> we're going to do is we're going to set this equal to open file input instead <end>
<start> we're going to do is we're going to set this equal to open file input instead <end>
<start> we're going to do is we're going to set this equal to open file input instead <end>
<start> open file output like we did with in our on create method and again just <end>
<start> the within these parentheses we're just gonna say our file name again that's <end>
<start> string reference kind of our path name and again we're gonna have to <end>
<start> we want to set up a byte array so what we're gonna do is we're gonna say <end>
<start> we want to set up a byte array so what we're gonna do is we're gonna say <end>
<start> [music] array which is basically going to <end>
<start> all the data all the bytes and all that stuff so we're just gonna say data <end>
<start> all the data all the bytes and all that stuff so we're just gonna say data <end>
<start> something like that and we're going to set this equal to is a new byte <end>
<start> something like that and we're going to set this equal to is a new byte <end>
<start> we're gonna reference within our square brackets here's just getting the <end>
<start> we're gonna reference within our square brackets here's just getting the <end>
<start> of our file input stream so we're gonna say file input stream dot available <end>
<start> of our file input stream so we're gonna say file input stream dot available <end>
<start> however many bytes is in our file input stream so again we get in there we <end>
<start> output stream exception and now what we're gonna do is we're going to <end>
<start> output stream exception and now what we're gonna do is we're going to <end>
<start> output stream exception and now what we're gonna do is we're going to <end>
<start> output stream exception and now what we're gonna do is we're going to <end>
<start> while file input stream dot read does not and we're gonna say read data <end>
<start> while file input stream dot read does not and we're gonna say read data <end>
<start> while file input stream dot read does not and we're gonna say read data <end>
<start> while file input stream dot read does not and we're gonna say read data <end>
<start> while file input stream dot read does not and we're gonna say read data <end>
<start> while file input stream dot read does not and we're gonna say read data <end>
<start> like this and i'll explain everything as we go here and does not equal <end>
<start> going to do is it's gonna read through a file input stream and once it <end>
<start> through everything it's gonna set this read up to negative one so once it <end>
<start> through everything it's gonna set this read up to negative one so once it <end>
<start> just what this means it's pretty standard in java and all that stuff <end>
<start> part from our file input stream which has the length or this many <end>
<start> part from our file input stream which has the length or this many <end>
<start> part from our file input stream which has the length or this many <end>
<start> for the most part because that's what we set up here so now what we're gonna <end>
<start> is we're gonna create a string so we're gonna call this collected something <end>
<start> this and above our try we're just going to set up this string here so <end>
<start> this and above our try we're just going to set up this string here so <end>
<start> collected initially equals null when we hit our load button and then we're <end>
<start> collected initially equals null when we hit our load button and then we're <end>
<start> collected initially equals null when we hit our load button and then we're <end>
<start> collected initially equals null when we hit our load button and then we're <end>
<start> collected initially equals null when we hit our load button and then we're <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> set this collected string equal to a new string and within here we're gonna <end>
<start> our data array and then all we have to do is close or file input stream so <end>
<start> our data array and then all we have to do is close or file input stream so <end>
<start> our data array and then all we have to do is close or file input stream so <end>
<start> we can do is we can either say like close right here or what we can do <end>
<start> kind of refer to just to get again familiar with the try-catch and <end>
<start> we can also say finally referring to after everything's done we kind of <end>
<start> we can also say finally referring to after everything's done we kind of <end>
<start> input stream dot close and it's gonna give us an error because we set up <end>
<start> input stream dot close and it's gonna give us an error because we set up <end>
<start> input stream dot close and it's gonna give us an error because we set up <end>
<start> file input stream within this try so what we're also going to do is just <end>
<start> file input stream within this try so what we're also going to do is just <end>
<start> file input stream within this try so what we're also going to do is just <end>
<start> this or cut it and then just say file input stream and again above our <end>
<start> we're just gonna hit paste equals null and then we have to surround this with <end>
<start> we're just gonna hit paste equals null and then we have to surround this with <end>
<start> try and catch as well so we're just gonna hover over and say try and <end>
<start> and it looks kind of complicated but it's really not that bad and <end>
<start> and it looks kind of complicated but it's really not that bad and <end>
<start> pretty much this tutorial let me talk through everything that we've done <end>
<start> basically we set up a string called collected this is going to be all of <end>
<start> data that we breed we set up a file input stream and both of those are <end>
<start> stream and get how many bytes is available and that's gonna set up a <end>
<start> array which we call data array then while our file put in our <end>
<start> input stream is reading all of those bytes for the most part and as long <end>
<start> input stream is reading all of those bytes for the most part and as long <end>
<start> that's not equal to negative one because when it equals negative one we're <end>
<start> it's going to break out of our while loop and while that's happening we <end>
<start> gonna basically be whatever is our data that we saved and then we have <end>
<start> gonna basically be whatever is our data that we saved and then we have <end>
<start> gonna basically be whatever is our data that we saved and then we have <end>
<start> catch exceptions for file not found and file our input output exception and <end>
<start> catch exceptions for file not found and file our input output exception and <end>
<start> catch exceptions for file not found and file our input output exception and <end>
<start> as well so hopefully you guys kind of understand that it's it's not <end>
<start> as well so hopefully you guys kind of understand that it's it's not <end>
<start> as well so hopefully you guys kind of understand that it's it's not <end>
<start> difficult for the most part and also we can do is we can now set our <end>
<start> which we call data results and then dot set text and then we're gonna set it <end>
<start> which we call data results and then dot set text and then we're gonna set it <end>
<start> which we call data results and then dot set text and then we're gonna set it <end>
<start> which we call data results and then dot set text and then we're gonna set it <end>
<start> to this collected string that we read for the most part so now it's going <end>
<start> to this collected string that we read for the most part so now it's going <end>
<start> more complicated for the most part than the shared preferences and if you <end>
<start> watching guys hopefully it wasn't too confusing and i'll catch you guys in <end>
<start> watching guys hopefully it wasn't too confusing and i'll catch you guys in <end>
<start> this list overview overlay type list and we want to create that so we <end>
<start> reference it within our you know our ad pinpoint alert button so let's just <end>
<start> reference it within our you know our ad pinpoint alert button so let's just <end>
<start> this out and we're gonna paste it above and then we're also gonna whoa <end>
<start> this out and we're gonna paste it above and then we're also gonna whoa <end>
<start> this out and we're gonna paste it above and then we're also gonna whoa <end>
<start> this out and we're gonna paste it above and then we're also gonna whoa <end>
<start> also gonna you know copy that set that equal to our map overlays right here <end>
<start> add you know are touchy that we have set up down here touching class so now <end>
<start> add you know are touchy that we have set up down here touching class so now <end>
<start> we have that set up we can kind of reference it within this on click <end>
<start> we have that set up we can kind of reference it within this on click <end>
<start> of place a pinpoint we also have you know this geo point that is getting <end>
<start> of place a pinpoint we also have you know this geo point that is getting <end>
<start> projection from our pixels and according to where we touch on the screen so <end>
<start> gonna reference that as well first thing that we need to do is create an <end>
<start> gonna reference that as well first thing that we need to do is create an <end>
<start> item so we're just gonna say overlay item and we're just gonna call <end>
<start> item so we're just gonna say overlay item and we're just gonna call <end>
<start> item so we're just gonna say overlay item and we're just gonna call <end>
<start> overlay item something like that and we're going to set this equal to a <end>
<start> overlay item something like that and we're going to set this equal to a <end>
<start> overlay item something like that and we're going to set this equal to a <end>
<start> overlay item and we're gonna refer to our point our geo point called <end>
<start> overlay item and we're gonna refer to our point our geo point called <end>
<start> point so we're gonna say touch point and then we're also gonna add some you <end>
<start> point so we're gonna say touch point and then we're also gonna add some you <end>
<start> point so we're gonna say touch point and then we're also gonna add some you <end>
<start> point so we're gonna say touch point and then we're also gonna add some you <end>
<start> this tutorial so we're just gonna say what's up it's up and then also <end>
<start> this tutorial so we're just gonna say what's up it's up and then also <end>
<start> this tutorial so we're just gonna say what's up it's up and then also <end>
<start> this tutorial so we're just gonna say what's up it's up and then also <end>
<start> this tutorial so we're just gonna say what's up it's up and then also <end>
<start> one is just maybe a second string so you guys know what which parameters do <end>
<start> one is just maybe a second string so you guys know what which parameters do <end>
<start> nothing too complex here but we just create a new overlay item now what <end>
<start> nothing too complex here but we just create a new overlay item now what <end>
<start> this overlay item so we're just gonna say custom and we have that <end>
<start> this overlay item so we're just gonna say custom and we have that <end>
<start> within our custom class which we created called insert pinpoint and we're <end>
<start> within our custom class which we created called insert pinpoint and we're <end>
<start> within our custom class which we created called insert pinpoint and we're <end>
<start> within our custom class which we created called insert pinpoint and we're <end>
<start> created so all that's gonna do is add it to our arraylist that we set up <end>
<start> again it takes an overlay item which is what we created here and now what <end>
<start> gonna do is we're just going to say our overlay list which we created or <end>
<start> we modified at the beginning of this tutorial that gets all of our <end>
<start> we modified at the beginning of this tutorial that gets all of our <end>
<start> we modified at the beginning of this tutorial that gets all of our <end>
<start> we modified at the beginning of this tutorial that gets all of our <end>
<start> we call it overlay list and we're just gonna add now our custom overlay <end>
<start> we call it overlay list and we're just gonna add now our custom overlay <end>
<start> we call it overlay list and we're just gonna add now our custom overlay <end>
<start> we call it overlay list and we're just gonna add now our custom overlay <end>
<start> going to be our touch point reference then we're creating a custom <end>
<start> the context what that's gonna do is call this constructor custom pinpoint <end>
<start> the context what that's gonna do is call this constructor custom pinpoint <end>
<start> the context what that's gonna do is call this constructor custom pinpoint <end>
<start> drawable in the context then we're passing our drawable into <end>
<start> shoot it up to this constructor we're going to bound the center of <end>
<start> context here and then we're gonna go back to this class where we refer <end>
<start> that and we use the insert pinpoint where we just add an overlay to let <end>
<start> that and we use the insert pinpoint where we just add an overlay to let <end>
<start> go back here we insert a pinpoint which just adds that overlay item that's <end>
<start> go back here we insert a pinpoint which just adds that overlay item that's <end>
<start> passed in to our pinpoint arraylist and then all we do is we use our <end>
<start> passed in to our pinpoint arraylist and then all we do is we use our <end>
<start> passed in to our pinpoint arraylist and then all we do is we use our <end>
<start> list from the top of this activity that grabs all of our overlays and we <end>
<start> sure it works and kind of show you guys what it does so now what we can do is <end>
<start> sure it works and kind of show you guys what it does so now what we can do is <end>
<start> sure it works and kind of show you guys what it does so now what we can do is <end>
<start> this series is we could click on it and refer to these string references that <end>
<start> set up here called what's up and second string you know that's why we <end>
<start> those string references but you know for the most part we aren't going to <end>
<start> about that but again we can place as many pin points as we want place <end>
<start> location see where the phone is and all that stuff and and all that good <end>
<start> location see where the phone is and all that stuff and and all that good <end>
<start> location see where the phone is and all that stuff and and all that good <end>
<start> gonna work with location and i'll catch you guys in the next tutorial what <end>
